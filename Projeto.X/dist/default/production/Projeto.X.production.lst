

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jul 30 20:59:42 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F4520 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataBANK0
    87  0027B8                     __pidataBANK0:
    88                           	callstack 0
    89                           
    90                           ;initializer for menuLigando@F43
    91  0027B8  01                 	db	1
    92  0027B9  03                 	db	3
    93  0027BA  03                 	db	3
    94  0027BB  0E                 	db	14
    95  0027BC  1C                 	db	28
    96  0027BD  18                 	db	24
    97  0027BE  08                 	db	8
    98  0027BF  08                 	db	8
    99  0027C0  11                 	db	17
   100  0027C1  1F                 	db	31
   101  0027C2  00                 	db	0
   102  0027C3  01                 	db	1
   103  0027C4  1F                 	db	31
   104  0027C5  12                 	db	18
   105  0027C6  14                 	db	20
   106  0027C7  1F                 	db	31
   107  0027C8  10                 	db	16
   108  0027C9  18                 	db	24
   109  0027CA  18                 	db	24
   110  0027CB  0E                 	db	14
   111  0027CC  07                 	db	7
   112  0027CD  03                 	db	3
   113  0027CE  02                 	db	2
   114  0027CF  02                 	db	2
   115  0027D0  08                 	db	8
   116  0027D1  18                 	db	24
   117  0027D2  1C                 	db	28
   118  0027D3  0E                 	db	14
   119  0027D4  03                 	db	3
   120  0027D5  03                 	db	3
   121  0027D6  01                 	db	1
   122  0027D7  00                 	db	0
   123  0027D8  12                 	db	18
   124  0027D9  14                 	db	20
   125  0027DA  1F                 	db	31
   126  0027DB  08                 	db	8
   127  0027DC  00                 	db	0
   128  0027DD  1F                 	db	31
   129  0027DE  11                 	db	17
   130  0027DF  00                 	db	0
   131  0027E0  02                 	db	2
   132  0027E1  03                 	db	3
   133  0027E2  07                 	db	7
   134  0027E3  0E                 	db	14
   135  0027E4  18                 	db	24
   136  0027E5  18                 	db	24
   137  0027E6  10                 	db	16
   138  0027E7  00                 	db	0
   139                           
   140                           ;initializer for potencia@F49
   141  0027E8  00                 	db	0
   142  0027E9  0E                 	db	14
   143  0027EA  11                 	db	17
   144  0027EB  11                 	db	17
   145  0027EC  11                 	db	17
   146  0027ED  0E                 	db	14
   147  0027EE  00                 	db	0
   148  0027EF  00                 	db	0
   149  0027F0  00                 	db	0
   150  0027F1  00                 	db	0
   151  0027F2  01                 	db	1
   152  0027F3  03                 	db	3
   153  0027F4  06                 	db	6
   154  0027F5  0C                 	db	12
   155  0027F6  18                 	db	24
   156  0027F7  10                 	db	16
   157  0027F8  02                 	db	2
   158  0027F9  06                 	db	6
   159  0027FA  0C                 	db	12
   160  0027FB  18                 	db	24
   161  0027FC  10                 	db	16
   162  0027FD  00                 	db	0
   163  0027FE  00                 	db	0
   164  0027FF  00                 	db	0
   165  002800  00                 	db	0
   166  002801  0E                 	db	14
   167  002802  11                 	db	17
   168  002803  11                 	db	17
   169  002804  11                 	db	17
   170  002805  0E                 	db	14
   171  002806  00                 	db	0
   172  002807  00                 	db	0
   173                           
   174                           	psect	smallconst
   175  000600                     __psmallconst:
   176                           	callstack 0
   177  000600  00                 	db	0
   178  000601                     _valor@ssd$F170:
   179                           	callstack 0
   180  000601  3F                 	db	63
   181  000602  06                 	db	6
   182  000603  5B                 	db	91
   183  000604  4F                 	db	79
   184  000605  66                 	db	102
   185  000606  6D                 	db	109
   186  000607  7D                 	db	125
   187  000608  07                 	db	7
   188  000609  7F                 	db	127
   189  00060A  6F                 	db	111
   190  00060B  77                 	db	119
   191  00060C  7C                 	db	124
   192  00060D  39                 	db	57
   193  00060E  5E                 	db	94
   194  00060F  79                 	db	121
   195  000610  71                 	db	113
   196  000611                     __end_of_valor@ssd$F170:
   197                           	callstack 0
   198  0000                     _PORTCbits	set	3970
   199  0000                     _TRISCbits	set	3988
   200  0000                     _TRISE	set	3990
   201  0000                     _TRISD	set	3989
   202  0000                     _TRISC	set	3988
   203  0000                     _TRISB	set	3987
   204  0000                     _TRISA	set	3986
   205  0000                     _PORTE	set	3972
   206  0000                     _PORTD	set	3971
   207  0000                     _PORTC	set	3970
   208  0000                     _PORTB	set	3969
   209  0000                     _PORTA	set	3968
   210  000611                     STR_2:
   211  000611  41                 	db	65	;'A'
   212  000612  70                 	db	112	;'p'
   213  000613  65                 	db	101	;'e'
   214  000614  72                 	db	114	;'r'
   215  000615  74                 	db	116	;'t'
   216  000616  65                 	db	101	;'e'
   217  000617  20                 	db	32
   218  000618  61                 	db	97	;'a'
   219  000619  20                 	db	32
   220  00061A  74                 	db	116	;'t'
   221  00061B  65                 	db	101	;'e'
   222  00061C  63                 	db	99	;'c'
   223  00061D  6C                 	db	108	;'l'
   224  00061E  61                 	db	97	;'a'
   225  00061F  20                 	db	32
   226  000620  39                 	db	57	;'9'
   227  000621  00                 	db	0
   228  000622                     STR_11:
   229  000622  43                 	db	67	;'C'
   230  000623  6F                 	db	111	;'o'
   231  000624  6C                 	db	108	;'l'
   232  000625  6F                 	db	111	;'o'
   233  000626  71                 	db	113	;'q'
   234  000627  75                 	db	117	;'u'
   235  000628  65                 	db	101	;'e'
   236  000629  20                 	db	32
   237  00062A  6F                 	db	111	;'o'
   238  00062B  20                 	db	32
   239  00062C  74                 	db	116	;'t'
   240  00062D  65                 	db	101	;'e'
   241  00062E  6D                 	db	109	;'m'
   242  00062F  70                 	db	112	;'p'
   243  000630  6F                 	db	111	;'o'
   244  000631  00                 	db	0
   245  000632                     STR_3:
   246  000632  70                 	db	112	;'p'
   247  000633  61                 	db	97	;'a'
   248  000634  72                 	db	114	;'r'
   249  000635  61                 	db	97	;'a'
   250  000636  20                 	db	32
   251  000637  69                 	db	105	;'i'
   252  000638  6E                 	db	110	;'n'
   253  000639  69                 	db	105	;'i'
   254  00063A  63                 	db	99	;'c'
   255  00063B  69                 	db	105	;'i'
   256  00063C  61                 	db	97	;'a'
   257  00063D  72                 	db	114	;'r'
   258  00063E  00                 	db	0
   259  00063F                     STR_13:
   260  00063F  43                 	db	67	;'C'
   261  000640  6F                 	db	111	;'o'
   262  000641  6E                 	db	110	;'n'
   263  000642  66                 	db	102	;'f'
   264  000643  69                 	db	105	;'i'
   265  000644  72                 	db	114	;'r'
   266  000645  6D                 	db	109	;'m'
   267  000646  61                 	db	97	;'a'
   268  000647  72                 	db	114	;'r'
   269  000648  2D                 	db	45
   270  000649  36                 	db	54	;'6'
   271  00064A  00                 	db	0
   272  00064B                     STR_9:
   273  00064B  56                 	db	86	;'V'
   274  00064C  6F                 	db	111	;'o'
   275  00064D  6C                 	db	108	;'l'
   276  00064E  74                 	db	116	;'t'
   277  00064F  61                 	db	97	;'a'
   278  000650  72                 	db	114	;'r'
   279  000651  3A                 	db	58	;':'
   280  000652  28                 	db	40
   281  000653  2A                 	db	42
   282  000654  29                 	db	41
   283  000655  00                 	db	0
   284  000656                     STR_4:
   285  000656  31                 	db	49	;'1'
   286  000657  2D                 	db	45
   287  000658  50                 	db	80	;'P'
   288  000659  6F                 	db	111	;'o'
   289  00065A  74                 	db	116	;'t'
   290  00065B  65                 	db	101	;'e'
   291  00065C  6E                 	db	110	;'n'
   292  00065D  63                 	db	99	;'c'
   293  00065E  69                 	db	105	;'i'
   294  00065F  61                 	db	97	;'a'
   295  000660  00                 	db	0
   296  000661                     STR_6:
   297  000661  33                 	db	51	;'3'
   298  000662  2D                 	db	45
   299  000663  44                 	db	68	;'D'
   300  000664  65                 	db	101	;'e'
   301  000665  73                 	db	115	;'s'
   302  000666  6C                 	db	108	;'l'
   303  000667  69                 	db	105	;'i'
   304  000668  67                 	db	103	;'g'
   305  000669  61                 	db	97	;'a'
   306  00066A  72                 	db	114	;'r'
   307  00066B  00                 	db	0
   308  00066C                     STR_8:
   309  00066C  50                 	db	80	;'P'
   310  00066D  6F                 	db	111	;'o'
   311  00066E  74                 	db	116	;'t'
   312  00066F  65                 	db	101	;'e'
   313  000670  6E                 	db	110	;'n'
   314  000671  63                 	db	99	;'c'
   315  000672  69                 	db	105	;'i'
   316  000673  61                 	db	97	;'a'
   317  000674  3A                 	db	58	;':'
   318  000675  00                 	db	0
   319  000676                     STR_7:
   320  000676  20                 	db	32
   321  000677  4C                 	db	76	;'L'
   322  000678  69                 	db	105	;'i'
   323  000679  67                 	db	103	;'g'
   324  00067A  61                 	db	97	;'a'
   325  00067B  6E                 	db	110	;'n'
   326  00067C  64                 	db	100	;'d'
   327  00067D  6F                 	db	111	;'o'
   328  00067E  00                 	db	0
   329  00067F                     STR_1:
   330  00067F  53                 	db	83	;'S'
   331  000680  74                 	db	116	;'t'
   332  000681  61                 	db	97	;'a'
   333  000682  6E                 	db	110	;'n'
   334  000683  64                 	db	100	;'d'
   335  000684  20                 	db	32
   336  000685  42                 	db	66	;'B'
   337  000686  79                 	db	121	;'y'
   338  000687  00                 	db	0
   339  000688                     STR_5:
   340  000688  32                 	db	50	;'2'
   341  000689  2D                 	db	45
   342  00068A  54                 	db	84	;'T'
   343  00068B  69                 	db	105	;'i'
   344  00068C  6D                 	db	109	;'m'
   345  00068D  65                 	db	101	;'e'
   346  00068E  72                 	db	114	;'r'
   347  00068F  00                 	db	0
   348  000690                     STR_10:
   349  000690  54                 	db	84	;'T'
   350  000691  69                 	db	105	;'i'
   351  000692  6D                 	db	109	;'m'
   352  000693  65                 	db	101	;'e'
   353  000694  72                 	db	114	;'r'
   354  000695  3A                 	db	58	;':'
   355  000696  00                 	db	0
   356  000697  00                 	db	0	; dummy byte at the end
   357  0000                     
   358                           ; #config settings
   359                           
   360                           	psect	cinit
   361  002808                     __pcinit:
   362                           	callstack 0
   363  002808                     start_initialization:
   364                           	callstack 0
   365  002808                     __initialization:
   366                           	callstack 0
   367                           
   368                           ; Initialize objects allocated to BANK0 (80 bytes)
   369                           ; load TBLPTR registers with __pidataBANK0
   370  002808  0EB8               	movlw	low __pidataBANK0
   371  00280A  6EF6               	movwf	tblptrl,c
   372  00280C  0E27               	movlw	high __pidataBANK0
   373  00280E  6EF7               	movwf	tblptrh,c
   374  002810  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   375  002812  6EF8               	movwf	tblptru,c
   376  002814  EE00  F080         	lfsr	0,__pdataBANK0
   377  002818  EE10 F050          	lfsr	1,80
   378  00281C                     copy_data0:
   379  00281C  0009               	tblrd		*+
   380  00281E  CFF5 FFEE          	movff	tablat,postinc0
   381  002822  50E5               	movf	postdec1,w,c
   382  002824  50E1               	movf	fsr1l,w,c
   383  002826  E1FA               	bnz	copy_data0
   384                           
   385                           ; Clear objects allocated to COMRAM (32 bytes)
   386  002828  EE00  F04B         	lfsr	0,__pbssCOMRAM
   387  00282C  0E20               	movlw	32
   388  00282E                     clear_0:
   389  00282E  6AEE               	clrf	postinc0,c
   390  002830  06E8               	decf	wreg,f,c
   391  002832  E1FD               	bnz	clear_0
   392  002834                     end_of_initialization:
   393                           	callstack 0
   394  002834                     __end_of__initialization:
   395                           	callstack 0
   396  002834  0E00               	movlw	low (__Lmediumconst shr (0+16))
   397  002836  6EF8               	movwf	tblptru,c
   398  002838  0100               	movlb	0
   399  00283A  EF32  F014         	goto	_main	;jump to C main() function
   400                           
   401                           	psect	bssCOMRAM
   402  00004B                     __pbssCOMRAM:
   403                           	callstack 0
   404  00004B                     _time:
   405                           	callstack 0
   406  00004B                     	ds	10
   407  000055                     _date:
   408                           	callstack 0
   409  000055                     	ds	10
   410  00005F                     kpDebounce@valorAntigo:
   411                           	callstack 0
   412  00005F                     	ds	2
   413  000061                     kpDebounce@valorNovo:
   414                           	callstack 0
   415  000061                     	ds	2
   416  000063                     _valor:
   417                           	callstack 0
   418  000063                     	ds	2
   419  000065                     _v3:
   420                           	callstack 0
   421  000065                     	ds	1
   422  000066                     _v2:
   423                           	callstack 0
   424  000066                     	ds	1
   425  000067                     _v1:
   426                           	callstack 0
   427  000067                     	ds	1
   428  000068                     _v0:
   429                           	callstack 0
   430  000068                     	ds	1
   431  000069                     _display:
   432                           	callstack 0
   433  000069                     	ds	1
   434  00006A                     kpDebounce@tempo:
   435                           	callstack 0
   436  00006A                     	ds	1
   437                           
   438                           	psect	dataBANK0
   439  000080                     __pdataBANK0:
   440                           	callstack 0
   441  000080                     menuLigando@F43:
   442                           	callstack 0
   443  000080                     	ds	48
   444  0000B0                     potencia@F49:
   445                           	callstack 0
   446  0000B0                     	ds	32
   447                           
   448                           	psect	cstackCOMRAM
   449  000001                     __pcstackCOMRAM:
   450                           	callstack 0
   451  000001                     ??_kpDebounce:
   452  000001                     ?_kpRead:
   453                           	callstack 0
   454  000001                     ?___wmul:
   455                           	callstack 0
   456  000001                     ?___awdiv:
   457                           	callstack 0
   458  000001                     ?___lwdiv:
   459                           	callstack 0
   460  000001                     ?___fladd:
   461                           	callstack 0
   462  000001                     ?___aldiv:
   463                           	callstack 0
   464  000001                     ?___fltol:
   465                           	callstack 0
   466  000001                     Delay40us@i:
   467                           	callstack 0
   468  000001                     digitalWrite@pin:
   469                           	callstack 0
   470  000001                     pinMode@pin:
   471                           	callstack 0
   472  000001                     atraso_ms@t:
   473                           	callstack 0
   474  000001                     ___wmul@multiplier:
   475                           	callstack 0
   476  000001                     ___awdiv@dividend:
   477                           	callstack 0
   478  000001                     ___lwdiv@dividend:
   479                           	callstack 0
   480  000001                     ___aldiv@dividend:
   481                           	callstack 0
   482  000001                     ___flge@ff1:
   483                           	callstack 0
   484  000001                     ___fltol@f1:
   485                           	callstack 0
   486  000001                     ___fladd@b:
   487                           	callstack 0
   488                           
   489                           ; 4 bytes @ 0x0
   490  000001                     	ds	1
   491  000002                     Delay2ms@i:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0x1
   495  000002                     	ds	1
   496  000003                     digitalWrite@value:
   497                           	callstack 0
   498  000003                     pinMode@type:
   499                           	callstack 0
   500  000003                     atraso_ms@i:
   501                           	callstack 0
   502  000003                     ___wmul@multiplicand:
   503                           	callstack 0
   504  000003                     ___awdiv@divisor:
   505                           	callstack 0
   506  000003                     ___lwdiv@divisor:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x2
   510  000003                     	ds	2
   511  000005                     ??_digitalWrite:
   512  000005                     ??_pinMode:
   513  000005                     ??___fltol:
   514  000005                     atraso_ms@j:
   515                           	callstack 0
   516  000005                     ___awdiv@counter:
   517                           	callstack 0
   518  000005                     ___wmul@product:
   519                           	callstack 0
   520  000005                     ___lwdiv@quotient:
   521                           	callstack 0
   522  000005                     ___aldiv@divisor:
   523                           	callstack 0
   524  000005                     ___flge@ff2:
   525                           	callstack 0
   526  000005                     ___fladd@a:
   527                           	callstack 0
   528                           
   529                           ; 4 bytes @ 0x4
   530  000005                     	ds	1
   531  000006                     kpDebounce@old_D:
   532                           	callstack 0
   533  000006                     atraso_ms@k:
   534                           	callstack 0
   535  000006                     ___awdiv@sign:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x5
   539  000006                     	ds	1
   540  000007                     ??_ssdUpdate:
   541  000007                     lcdCommand@old_D:
   542                           	callstack 0
   543  000007                     lcdData@valor:
   544                           	callstack 0
   545  000007                     ___lwdiv@counter:
   546                           	callstack 0
   547  000007                     kpDebounce@k:
   548                           	callstack 0
   549  000007                     ___awdiv@quotient:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x6
   553  000007                     	ds	1
   554  000008                     ??_pwmSet1:
   555  000008                     lcdCommand@cmd:
   556                           	callstack 0
   557  000008                     lcdData@old_D:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x7
   561  000008                     	ds	1
   562  000009                     ??___fladd:
   563  000009                     ??___flge:
   564  000009                     kpDebounce@j:
   565                           	callstack 0
   566  000009                     ___aldiv@counter:
   567                           	callstack 0
   568  000009                     ___fltol@sign1:
   569                           	callstack 0
   570  000009                     lcdString@msg:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x8
   574  000009                     	ds	1
   575  00000A                     kpDebounce@i:
   576                           	callstack 0
   577  00000A                     pwmSet1@porcento:
   578                           	callstack 0
   579  00000A                     ___aldiv@sign:
   580                           	callstack 0
   581  00000A                     ___fltol@exp1:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0x9
   585  00000A                     	ds	1
   586  00000B                     ??_lcdString:
   587  00000B                     ?___awmod:
   588                           	callstack 0
   589  00000B                     pwmSet1@val:
   590                           	callstack 0
   591  00000B                     ___awmod@dividend:
   592                           	callstack 0
   593  00000B                     ___aldiv@quotient:
   594                           	callstack 0
   595                           
   596                           ; 4 bytes @ 0xA
   597  00000B                     	ds	2
   598  00000D                     ___fladd@signs:
   599                           	callstack 0
   600  00000D                     lcdString@i:
   601                           	callstack 0
   602  00000D                     ___awmod@divisor:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0xC
   606  00000D                     	ds	1
   607  00000E                     ___fladd@aexp:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0xD
   611  00000E                     	ds	1
   612  00000F                     ?___almod:
   613                           	callstack 0
   614  00000F                     ___awmod@counter:
   615                           	callstack 0
   616  00000F                     ___fladd@bexp:
   617                           	callstack 0
   618  00000F                     ___almod@dividend:
   619                           	callstack 0
   620                           
   621                           ; 4 bytes @ 0xE
   622  00000F                     	ds	1
   623  000010                     ___awmod@sign:
   624                           	callstack 0
   625  000010                     ___fladd@grs:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0xF
   629  000010                     	ds	1
   630  000011                     lcdNumber@value:
   631                           	callstack 0
   632  000011                     menuLigando@logo:
   633                           	callstack 0
   634                           
   635                           ; 48 bytes @ 0x10
   636  000011                     	ds	2
   637  000013                     lcdNumber@i:
   638                           	callstack 0
   639  000013                     ___almod@divisor:
   640                           	callstack 0
   641                           
   642                           ; 4 bytes @ 0x12
   643  000013                     	ds	2
   644  000015                     potencia@porcentagem:
   645                           	callstack 0
   646                           
   647                           ; 32 bytes @ 0x14
   648  000015                     	ds	2
   649  000017                     ___almod@counter:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x16
   653  000017                     	ds	1
   654  000018                     ___almod@sign:
   655                           	callstack 0
   656                           
   657                           ; 1 bytes @ 0x17
   658  000018                     	ds	1
   659  000019                     ssdDigit@pos:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x18
   663  000019                     	ds	1
   664  00001A                     ssdDigit@val:
   665                           	callstack 0
   666                           
   667                           ; 1 bytes @ 0x19
   668  00001A                     	ds	1
   669  00001B                     contagem@dMin:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x1A
   673  00001B                     	ds	2
   674  00001D                     contagem@min:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x1C
   678  00001D                     	ds	2
   679  00001F                     contagem@dSeg:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x1E
   683  00001F                     	ds	2
   684  000021                     contagem@seg:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x20
   688  000021                     	ds	2
   689  000023                     ??_contagem:
   690                           
   691                           ; 1 bytes @ 0x22
   692  000023                     	ds	2
   693  000025                     contagem@i:
   694                           	callstack 0
   695                           
   696                           ; 4 bytes @ 0x24
   697  000025                     	ds	4
   698  000029                     contagem@cont:
   699                           	callstack 0
   700                           
   701                           ; 4 bytes @ 0x28
   702  000029                     	ds	4
   703  00002D                     timer@j:
   704                           	callstack 0
   705                           
   706                           ; 4 bytes @ 0x2C
   707  00002D                     	ds	4
   708  000031                     timer@dMin:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x30
   712  000031                     	ds	2
   713  000033                     timer@min:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x32
   717  000033                     	ds	2
   718  000035                     potencia@i:
   719                           	callstack 0
   720  000035                     timer@dSeg:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x34
   724  000035                     	ds	2
   725  000037                     potencia@tecla:
   726                           	callstack 0
   727  000037                     timer@seg:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x36
   731  000037                     	ds	2
   732  000039                     potencia@ptc:
   733                           	callstack 0
   734  000039                     timer@tecla:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x38
   738  000039                     	ds	8
   739  000041                     menuLigando@j:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x40
   743  000041                     	ds	4
   744  000045                     menuLigando@i:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x44
   748  000045                     	ds	2
   749  000047                     standBy@tecla:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x46
   753  000047                     	ds	2
   754  000049                     menu@tecla:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x48
   758  000049                     	ds	2
   759  00004B                     
   760                           ; 1 bytes @ 0x4A
   761 ;;
   762 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   763 ;;
   764 ;; *************** function _main *****************
   765 ;; Defined at:
   766 ;;		line 10 in file "main.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   780 ;;      Params:         0       0       0       0       0       0       0
   781 ;;      Locals:         0       0       0       0       0       0       0
   782 ;;      Temps:          0       0       0       0       0       0       0
   783 ;;      Totals:         0       0       0       0       0       0       0
   784 ;;Total ram usage:        0 bytes
   785 ;; Hardware stack levels required when called: 7
   786 ;; This function calls:
   787 ;;		_menu
   788 ;;		_pwmInit
   789 ;;		_ssdInit
   790 ;;		_standBy
   791 ;; This function is called by:
   792 ;;		Startup code after reset
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text0
   797  002864                     __ptext0:
   798                           	callstack 0
   799  002864                     _main:
   800                           	callstack 24
   801  002864                     
   802                           ;main.c: 11:     (*(volatile __near unsigned char*)0xF94)=0b00000000;
   803  002864  0E00               	movlw	0
   804  002866  6E94               	movwf	148,c	;volatile
   805                           
   806                           ;main.c: 12:     (*(volatile __near unsigned char*)0xF96)=0x00;
   807  002868  0E00               	movlw	0
   808  00286A  6E96               	movwf	150,c	;volatile
   809  00286C                     
   810                           ;main.c: 13:     ssdInit();
   811  00286C  EC5C  F013         	call	_ssdInit	;wreg free
   812  002870                     
   813                           ;main.c: 14:     pwmInit();
   814  002870  EC5A  F014         	call	_pwmInit	;wreg free
   815  002874                     
   816                           ;main.c: 15:     standBy();
   817  002874  EC20  F011         	call	_standBy	;wreg free
   818  002878                     
   819                           ;main.c: 16:     menu();
   820  002878  EC55  F010         	call	_menu	;wreg free
   821  00287C  EF00  F000         	goto	start
   822  002880                     __end_of_main:
   823                           	callstack 0
   824                           
   825 ;; *************** function _pwmInit *****************
   826 ;; Defined at:
   827 ;;		line 56 in file "pwm.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   841 ;;      Params:         0       0       0       0       0       0       0
   842 ;;      Locals:         0       0       0       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0       0       0
   844 ;;      Totals:         0       0       0       0       0       0       0
   845 ;;Total ram usage:        0 bytes
   846 ;; Hardware stack levels used: 1
   847 ;; This function calls:
   848 ;;		Nothing
   849 ;; This function is called by:
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           	psect	text1
   855  0028B4                     __ptext1:
   856                           	callstack 0
   857  0028B4                     _pwmInit:
   858                           	callstack 30
   859  0028B4                     
   860                           ;pwm.c: 57:     (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
   861  0028B4  9294               	bcf	148,1,c	;volatile
   862                           
   863                           ;pwm.c: 58:     (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<2));
   864  0028B6  9494               	bcf	148,2,c	;volatile
   865  0028B8                     
   866                           ;pwm.c: 60:     (*(volatile __near unsigned char*)0xFCA) |= 0b00000011;
   867  0028B8  0E03               	movlw	3
   868  0028BA  12CA               	iorwf	202,f,c	;volatile
   869  0028BC                     
   870                           ;pwm.c: 61:     (((*(volatile __near unsigned char*)0xFCA)) |= (1<<2));
   871  0028BC  84CA               	bsf	202,2,c	;volatile
   872                           
   873                           ;pwm.c: 64:     (*(volatile __near unsigned char*)0xFBD) |= 0b00001100;
   874  0028BE  0E0C               	movlw	12
   875  0028C0  12BD               	iorwf	189,f,c	;volatile
   876                           
   877                           ;pwm.c: 65:     (*(volatile __near unsigned char*)0xFBA) |= 0b00001100;
   878  0028C2  0E0C               	movlw	12
   879  0028C4  12BA               	iorwf	186,f,c	;volatile
   880  0028C6  0012               	return		;funcret
   881  0028C8                     __end_of_pwmInit:
   882                           	callstack 0
   883                           
   884 ;; *************** function _menu *****************
   885 ;; Defined at:
   886 ;;		line 41 in file "funcoes.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  tecla           2   72[COMRAM] unsigned int 
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   900 ;;      Params:         0       0       0       0       0       0       0
   901 ;;      Locals:         2       0       0       0       0       0       0
   902 ;;      Temps:          0       0       0       0       0       0       0
   903 ;;      Totals:         2       0       0       0       0       0       0
   904 ;;Total ram usage:        2 bytes
   905 ;; Hardware stack levels used: 1
   906 ;; Hardware stack levels required when called: 6
   907 ;; This function calls:
   908 ;;		_kpDebounce
   909 ;;		_kpRead
   910 ;;		_lcdCommand
   911 ;;		_lcdString
   912 ;;		_potencia
   913 ;;		_pwmSet1
   914 ;;		_ssdDigit
   915 ;;		_ssdInit
   916 ;;		_ssdUpdate
   917 ;;		_standBy
   918 ;;		_timer
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text2
   925  0020AA                     __ptext2:
   926                           	callstack 0
   927  0020AA                     _menu:
   928                           	callstack 24
   929  0020AA                     l239:
   930  0020AA                     
   931                           ;funcoes.c: 43:         ssdInit();
   932  0020AA  EC5C  F013         	call	_ssdInit	;wreg free
   933                           
   934                           ;funcoes.c: 44:         ssdDigit(0,0);
   935  0020AE  0E00               	movlw	0
   936  0020B0  6E19               	movwf	ssdDigit@pos^0,c
   937  0020B2  0E00               	movlw	0
   938  0020B4  EC30  F013         	call	_ssdDigit
   939                           
   940                           ;funcoes.c: 45:         ssdDigit(0,1);
   941  0020B8  0E01               	movlw	1
   942  0020BA  6E19               	movwf	ssdDigit@pos^0,c
   943  0020BC  0E00               	movlw	0
   944  0020BE  EC30  F013         	call	_ssdDigit
   945                           
   946                           ;funcoes.c: 46:         ssdDigit(0,2);
   947  0020C2  0E02               	movlw	2
   948  0020C4  6E19               	movwf	ssdDigit@pos^0,c
   949  0020C6  0E00               	movlw	0
   950  0020C8  EC30  F013         	call	_ssdDigit
   951                           
   952                           ;funcoes.c: 47:         ssdDigit(0,3);
   953  0020CC  0E03               	movlw	3
   954  0020CE  6E19               	movwf	ssdDigit@pos^0,c
   955  0020D0  0E00               	movlw	0
   956  0020D2  EC30  F013         	call	_ssdDigit
   957  0020D6                     
   958                           ;funcoes.c: 48:         ssdUpdate();
   959  0020D6  ECAC  F00D         	call	_ssdUpdate	;wreg free
   960  0020DA                     
   961                           ;funcoes.c: 50:         lcdCommand(0x80);
   962  0020DA  0E80               	movlw	128
   963  0020DC  ECD9  F011         	call	_lcdCommand
   964  0020E0                     
   965                           ;funcoes.c: 51:         lcdString("1-Potencia");
   966  0020E0  0E56               	movlw	low STR_4
   967  0020E2  6E09               	movwf	lcdString@msg^0,c
   968  0020E4  0E06               	movlw	high STR_4
   969  0020E6  6E0A               	movwf	(lcdString@msg+1)^0,c
   970  0020E8  EC87  F013         	call	_lcdString	;wreg free
   971  0020EC                     
   972                           ;funcoes.c: 52:         lcdCommand(0xC0);
   973  0020EC  0EC0               	movlw	192
   974  0020EE  ECD9  F011         	call	_lcdCommand
   975  0020F2                     
   976                           ;funcoes.c: 53:         lcdString("2-Timer");
   977  0020F2  0E88               	movlw	low STR_5
   978  0020F4  6E09               	movwf	lcdString@msg^0,c
   979  0020F6  0E06               	movlw	high STR_5
   980  0020F8  6E0A               	movwf	(lcdString@msg+1)^0,c
   981  0020FA  EC87  F013         	call	_lcdString	;wreg free
   982  0020FE                     
   983                           ;funcoes.c: 54:         lcdCommand(0x90);
   984  0020FE  0E90               	movlw	144
   985  002100  ECD9  F011         	call	_lcdCommand
   986  002104                     
   987                           ;funcoes.c: 55:         lcdString("3-Desligar");
   988  002104  0E61               	movlw	low STR_6
   989  002106  6E09               	movwf	lcdString@msg^0,c
   990  002108  0E06               	movlw	high STR_6
   991  00210A  6E0A               	movwf	(lcdString@msg+1)^0,c
   992  00210C  EC87  F013         	call	_lcdString	;wreg free
   993  002110                     
   994                           ;funcoes.c: 56:         kpDebounce();
   995  002110  ECEF  F00C         	call	_kpDebounce	;wreg free
   996  002114                     
   997                           ;funcoes.c: 57:         if (tecla != kpRead()) {
   998  002114  EC69  F014         	call	_kpRead	;wreg free
   999  002118  5001               	movf	?_kpRead^0,w,c
  1000  00211A  1002               	iorwf	(?_kpRead+1)^0,w,c
  1001  00211C  B4D8               	btfsc	status,2,c
  1002  00211E  EF93  F010         	goto	u3921
  1003  002122  EF95  F010         	goto	u3920
  1004  002126                     u3921:
  1005  002126  EF55  F010         	goto	l239
  1006  00212A                     u3920:
  1007  00212A                     
  1008                           ;funcoes.c: 58:             tecla = kpRead();
  1009  00212A  EC69  F014         	call	_kpRead	;wreg free
  1010  00212E  C001  F049         	movff	?_kpRead,menu@tecla
  1011  002132  C002  F04A         	movff	?_kpRead+1,menu@tecla+1
  1012  002136                     
  1013                           ;funcoes.c: 59:             if (((tecla) & (1<<(3)))) {
  1014  002136  A649               	btfss	menu@tecla^0,3,c
  1015  002138  EFA0  F010         	goto	u3931
  1016  00213C  EFA2  F010         	goto	u3930
  1017  002140                     u3931:
  1018  002140  EFA4  F010         	goto	l3638
  1019  002144                     u3930:
  1020  002144                     
  1021                           ;funcoes.c: 60:                 potencia();
  1022  002144  EC4D  F00B         	call	_potencia	;wreg free
  1023  002148                     l3638:
  1024                           
  1025                           ;funcoes.c: 62:             if (((tecla) & (1<<(7)))) {
  1026  002148  AE49               	btfss	menu@tecla^0,7,c
  1027  00214A  EFA9  F010         	goto	u3941
  1028  00214E  EFAB  F010         	goto	u3940
  1029  002152                     u3941:
  1030  002152  EFAF  F010         	goto	l3644
  1031  002156                     u3940:
  1032  002156                     
  1033                           ;funcoes.c: 63:                 timer();
  1034  002156  ECAC  F005         	call	_timer	;wreg free
  1035  00215A                     
  1036                           ;funcoes.c: 64:                 standBy();
  1037  00215A  EC20  F011         	call	_standBy	;wreg free
  1038  00215E                     l3644:
  1039                           
  1040                           ;funcoes.c: 66:             if (((tecla) & (1<<(11)))) {
  1041  00215E  A64A               	btfss	(menu@tecla+1)^0,3,c
  1042  002160  EFB4  F010         	goto	u3951
  1043  002164  EFB6  F010         	goto	u3950
  1044  002168                     u3951:
  1045  002168  EF55  F010         	goto	l239
  1046  00216C                     u3950:
  1047  00216C                     
  1048                           ;funcoes.c: 67:                 pwmSet1(0);
  1049  00216C  0E00               	movlw	0
  1050  00216E  ECC8  F012         	call	_pwmSet1
  1051  002172                     
  1052                           ;funcoes.c: 68:                 standBy();
  1053  002172  EC20  F011         	call	_standBy	;wreg free
  1054  002176  EF55  F010         	goto	l239
  1055  00217A  0012               	return		;funcret
  1056  00217C                     __end_of_menu:
  1057                           	callstack 0
  1058                           
  1059 ;; *************** function _timer *****************
  1060 ;; Defined at:
  1061 ;;		line 205 in file "funcoes.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  j               4   44[COMRAM] float 
  1066 ;;  tecla           2   56[COMRAM] unsigned int 
  1067 ;;  seg             2   54[COMRAM] int 
  1068 ;;  dSeg            2   52[COMRAM] int 
  1069 ;;  min             2   50[COMRAM] int 
  1070 ;;  dMin            2   48[COMRAM] int 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1080 ;;      Params:         0       0       0       0       0       0       0
  1081 ;;      Locals:        14       0       0       0       0       0       0
  1082 ;;      Temps:          0       0       0       0       0       0       0
  1083 ;;      Totals:        14       0       0       0       0       0       0
  1084 ;;Total ram usage:       14 bytes
  1085 ;; Hardware stack levels used: 1
  1086 ;; Hardware stack levels required when called: 3
  1087 ;; This function calls:
  1088 ;;		___awmod
  1089 ;;		___fladd
  1090 ;;		___flge
  1091 ;;		_contagem
  1092 ;;		_kpDebounce
  1093 ;;		_kpInit
  1094 ;;		_kpRead
  1095 ;;		_lcdCommand
  1096 ;;		_lcdString
  1097 ;;		_ssdDigit
  1098 ;;		_ssdInit
  1099 ;;		_ssdUpdate
  1100 ;; This function is called by:
  1101 ;;		_menu
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text3
  1106  000B58                     __ptext3:
  1107                           	callstack 0
  1108  000B58                     _timer:
  1109                           	callstack 26
  1110  000B58                     
  1111                           ;funcoes.c: 206:     lcdCommand(0x01);
  1112  000B58  0E01               	movlw	1
  1113  000B5A  ECD9  F011         	call	_lcdCommand
  1114                           
  1115                           ;funcoes.c: 207:     ssdInit();
  1116  000B5E  EC5C  F013         	call	_ssdInit	;wreg free
  1117                           
  1118                           ;funcoes.c: 208:     kpInit();
  1119  000B62  EC64  F014         	call	_kpInit	;wreg free
  1120  000B66                     
  1121                           ;funcoes.c: 209:     float j;;funcoes.c: 210:     unsigned int tecla = 0x0000;
  1122  000B66  0E00               	movlw	0
  1123  000B68  6E3A               	movwf	(timer@tecla+1)^0,c
  1124  000B6A  0E00               	movlw	0
  1125  000B6C  6E39               	movwf	timer@tecla^0,c
  1126  000B6E                     
  1127                           ;funcoes.c: 211:     int dMin = 0, min = 0, dSeg = 0, seg = 0;
  1128  000B6E  0E00               	movlw	0
  1129  000B70  6E32               	movwf	(timer@dMin+1)^0,c
  1130  000B72  0E00               	movlw	0
  1131  000B74  6E31               	movwf	timer@dMin^0,c
  1132  000B76  0E00               	movlw	0
  1133  000B78  6E34               	movwf	(timer@min+1)^0,c
  1134  000B7A  0E00               	movlw	0
  1135  000B7C  6E33               	movwf	timer@min^0,c
  1136  000B7E  0E00               	movlw	0
  1137  000B80  6E36               	movwf	(timer@dSeg+1)^0,c
  1138  000B82  0E00               	movlw	0
  1139  000B84  6E35               	movwf	timer@dSeg^0,c
  1140  000B86  0E00               	movlw	0
  1141  000B88  6E38               	movwf	(timer@seg+1)^0,c
  1142  000B8A  0E00               	movlw	0
  1143  000B8C  6E37               	movwf	timer@seg^0,c
  1144  000B8E                     l3500:
  1145                           
  1146                           ;funcoes.c: 213:         lcdCommand(0x80);
  1147  000B8E  0E80               	movlw	128
  1148  000B90  ECD9  F011         	call	_lcdCommand
  1149  000B94                     
  1150                           ;funcoes.c: 214:         lcdString("Timer:");
  1151  000B94  0E90               	movlw	low STR_10
  1152  000B96  6E09               	movwf	lcdString@msg^0,c
  1153  000B98  0E06               	movlw	high STR_10
  1154  000B9A  6E0A               	movwf	(lcdString@msg+1)^0,c
  1155  000B9C  EC87  F013         	call	_lcdString	;wreg free
  1156  000BA0                     
  1157                           ;funcoes.c: 215:         lcdCommand(0xC0);
  1158  000BA0  0EC0               	movlw	192
  1159  000BA2  ECD9  F011         	call	_lcdCommand
  1160  000BA6                     
  1161                           ;funcoes.c: 216:         lcdString("Coloque o tempo");
  1162  000BA6  0E22               	movlw	low STR_11
  1163  000BA8  6E09               	movwf	lcdString@msg^0,c
  1164  000BAA  0E06               	movlw	high STR_11
  1165  000BAC  6E0A               	movwf	(lcdString@msg+1)^0,c
  1166  000BAE  EC87  F013         	call	_lcdString	;wreg free
  1167  000BB2                     
  1168                           ;funcoes.c: 217:         lcdCommand(0x90);
  1169  000BB2  0E90               	movlw	144
  1170  000BB4  ECD9  F011         	call	_lcdCommand
  1171  000BB8                     
  1172                           ;funcoes.c: 218:         lcdString("");
  1173  000BB8  0E55               	movlw	low (STR_9+10)
  1174  000BBA  6E09               	movwf	lcdString@msg^0,c
  1175  000BBC  0E06               	movlw	high (STR_9+10)
  1176  000BBE  6E0A               	movwf	(lcdString@msg+1)^0,c
  1177  000BC0  EC87  F013         	call	_lcdString	;wreg free
  1178  000BC4                     
  1179                           ;funcoes.c: 219:         lcdCommand(0xD0);
  1180  000BC4  0ED0               	movlw	208
  1181  000BC6  ECD9  F011         	call	_lcdCommand
  1182  000BCA                     
  1183                           ;funcoes.c: 220:         lcdString("Confirmar-6");
  1184  000BCA  0E3F               	movlw	low STR_13
  1185  000BCC  6E09               	movwf	lcdString@msg^0,c
  1186  000BCE  0E06               	movlw	high STR_13
  1187  000BD0  6E0A               	movwf	(lcdString@msg+1)^0,c
  1188  000BD2  EC87  F013         	call	_lcdString	;wreg free
  1189  000BD6                     
  1190                           ;funcoes.c: 221:         kpDebounce();
  1191  000BD6  ECEF  F00C         	call	_kpDebounce	;wreg free
  1192  000BDA                     
  1193                           ;funcoes.c: 222:         if (tecla != kpRead()) {
  1194  000BDA  EC69  F014         	call	_kpRead	;wreg free
  1195  000BDE  5039               	movf	timer@tecla^0,w,c
  1196  000BE0  1801               	xorwf	?_kpRead^0,w,c
  1197  000BE2  E109               	bnz	u3700
  1198  000BE4  503A               	movf	(timer@tecla+1)^0,w,c
  1199  000BE6  1802               	xorwf	(?_kpRead+1)^0,w,c
  1200  000BE8  B4D8               	btfsc	status,2,c
  1201  000BEA  EFF9  F005         	goto	u3701
  1202  000BEE  EFFB  F005         	goto	u3700
  1203  000BF2                     u3701:
  1204  000BF2  EF09  F007         	goto	l3598
  1205  000BF6                     u3700:
  1206  000BF6                     
  1207                           ;funcoes.c: 223:             tecla = kpRead();
  1208  000BF6  EC69  F014         	call	_kpRead	;wreg free
  1209  000BFA  C001  F039         	movff	?_kpRead,timer@tecla
  1210  000BFE  C002  F03A         	movff	?_kpRead+1,timer@tecla+1
  1211  000C02                     
  1212                           ;funcoes.c: 224:             if (((tecla) & (1<<(3)))) {
  1213  000C02  A639               	btfss	timer@tecla^0,3,c
  1214  000C04  EF06  F006         	goto	u3711
  1215  000C08  EF08  F006         	goto	u3710
  1216  000C0C                     u3711:
  1217  000C0C  EF1C  F006         	goto	l3530
  1218  000C10                     u3710:
  1219  000C10                     
  1220                           ;funcoes.c: 225:                 dMin++;
  1221  000C10  4A31               	infsnz	timer@dMin^0,f,c
  1222  000C12  2A32               	incf	(timer@dMin+1)^0,f,c
  1223  000C14                     
  1224                           ;funcoes.c: 226:                 if(dMin>=9){
  1225  000C14  BE32               	btfsc	(timer@dMin+1)^0,7,c
  1226  000C16  EF16  F006         	goto	u3721
  1227  000C1A  5032               	movf	(timer@dMin+1)^0,w,c
  1228  000C1C  E109               	bnz	u3720
  1229  000C1E  0E09               	movlw	9
  1230  000C20  5C31               	subwf	timer@dMin^0,w,c
  1231  000C22  A0D8               	btfss	status,0,c
  1232  000C24  EF16  F006         	goto	u3721
  1233  000C28  EF18  F006         	goto	u3720
  1234  000C2C                     u3721:
  1235  000C2C  EF1C  F006         	goto	l3530
  1236  000C30                     u3720:
  1237  000C30                     
  1238                           ;funcoes.c: 227:                     dMin=9;
  1239  000C30  0E00               	movlw	0
  1240  000C32  6E32               	movwf	(timer@dMin+1)^0,c
  1241  000C34  0E09               	movlw	9
  1242  000C36  6E31               	movwf	timer@dMin^0,c
  1243  000C38                     l3530:
  1244                           
  1245                           ;funcoes.c: 230:             if (((tecla) & (1<<(2)))) {
  1246  000C38  A439               	btfss	timer@tecla^0,2,c
  1247  000C3A  EF21  F006         	goto	u3731
  1248  000C3E  EF23  F006         	goto	u3730
  1249  000C42                     u3731:
  1250  000C42  EF37  F006         	goto	l3538
  1251  000C46                     u3730:
  1252  000C46                     
  1253                           ;funcoes.c: 231:                 min++;
  1254  000C46  4A33               	infsnz	timer@min^0,f,c
  1255  000C48  2A34               	incf	(timer@min+1)^0,f,c
  1256  000C4A                     
  1257                           ;funcoes.c: 232:                 if(min>=9){
  1258  000C4A  BE34               	btfsc	(timer@min+1)^0,7,c
  1259  000C4C  EF31  F006         	goto	u3741
  1260  000C50  5034               	movf	(timer@min+1)^0,w,c
  1261  000C52  E109               	bnz	u3740
  1262  000C54  0E09               	movlw	9
  1263  000C56  5C33               	subwf	timer@min^0,w,c
  1264  000C58  A0D8               	btfss	status,0,c
  1265  000C5A  EF31  F006         	goto	u3741
  1266  000C5E  EF33  F006         	goto	u3740
  1267  000C62                     u3741:
  1268  000C62  EF37  F006         	goto	l3538
  1269  000C66                     u3740:
  1270  000C66                     
  1271                           ;funcoes.c: 233:                     min=9;
  1272  000C66  0E00               	movlw	0
  1273  000C68  6E34               	movwf	(timer@min+1)^0,c
  1274  000C6A  0E09               	movlw	9
  1275  000C6C  6E33               	movwf	timer@min^0,c
  1276  000C6E                     l3538:
  1277                           
  1278                           ;funcoes.c: 236:             if (((tecla) & (1<<(1)))) {
  1279  000C6E  A239               	btfss	timer@tecla^0,1,c
  1280  000C70  EF3C  F006         	goto	u3751
  1281  000C74  EF3E  F006         	goto	u3750
  1282  000C78                     u3751:
  1283  000C78  EF52  F006         	goto	l3546
  1284  000C7C                     u3750:
  1285  000C7C                     
  1286                           ;funcoes.c: 237:                 dSeg++;
  1287  000C7C  4A35               	infsnz	timer@dSeg^0,f,c
  1288  000C7E  2A36               	incf	(timer@dSeg+1)^0,f,c
  1289  000C80                     
  1290                           ;funcoes.c: 238:                 if(dSeg>=6){
  1291  000C80  BE36               	btfsc	(timer@dSeg+1)^0,7,c
  1292  000C82  EF4C  F006         	goto	u3761
  1293  000C86  5036               	movf	(timer@dSeg+1)^0,w,c
  1294  000C88  E109               	bnz	u3760
  1295  000C8A  0E06               	movlw	6
  1296  000C8C  5C35               	subwf	timer@dSeg^0,w,c
  1297  000C8E  A0D8               	btfss	status,0,c
  1298  000C90  EF4C  F006         	goto	u3761
  1299  000C94  EF4E  F006         	goto	u3760
  1300  000C98                     u3761:
  1301  000C98  EF52  F006         	goto	l3546
  1302  000C9C                     u3760:
  1303  000C9C                     
  1304                           ;funcoes.c: 239:                     dSeg=6;
  1305  000C9C  0E00               	movlw	0
  1306  000C9E  6E36               	movwf	(timer@dSeg+1)^0,c
  1307  000CA0  0E06               	movlw	6
  1308  000CA2  6E35               	movwf	timer@dSeg^0,c
  1309  000CA4                     l3546:
  1310                           
  1311                           ;funcoes.c: 242:             if (((tecla) & (1<<(0)))) {
  1312  000CA4  A039               	btfss	timer@tecla^0,0,c
  1313  000CA6  EF57  F006         	goto	u3771
  1314  000CAA  EF59  F006         	goto	u3770
  1315  000CAE                     u3771:
  1316  000CAE  EF82  F006         	goto	l3560
  1317  000CB2                     u3770:
  1318  000CB2                     
  1319                           ;funcoes.c: 243:                 seg++;
  1320  000CB2  4A37               	infsnz	timer@seg^0,f,c
  1321  000CB4  2A38               	incf	(timer@seg+1)^0,f,c
  1322  000CB6                     
  1323                           ;funcoes.c: 244:                 if(seg>=9){
  1324  000CB6  BE38               	btfsc	(timer@seg+1)^0,7,c
  1325  000CB8  EF67  F006         	goto	u3781
  1326  000CBC  5038               	movf	(timer@seg+1)^0,w,c
  1327  000CBE  E109               	bnz	u3780
  1328  000CC0  0E09               	movlw	9
  1329  000CC2  5C37               	subwf	timer@seg^0,w,c
  1330  000CC4  A0D8               	btfss	status,0,c
  1331  000CC6  EF67  F006         	goto	u3781
  1332  000CCA  EF69  F006         	goto	u3780
  1333  000CCE                     u3781:
  1334  000CCE  EF6D  F006         	goto	l3554
  1335  000CD2                     u3780:
  1336  000CD2                     
  1337                           ;funcoes.c: 245:                     seg=9;
  1338  000CD2  0E00               	movlw	0
  1339  000CD4  6E38               	movwf	(timer@seg+1)^0,c
  1340  000CD6  0E09               	movlw	9
  1341  000CD8  6E37               	movwf	timer@seg^0,c
  1342  000CDA                     l3554:
  1343                           
  1344                           ;funcoes.c: 247:                 if(seg>=0 && dSeg==6){
  1345  000CDA  BE38               	btfsc	(timer@seg+1)^0,7,c
  1346  000CDC  EF72  F006         	goto	u3791
  1347  000CE0  EF74  F006         	goto	u3790
  1348  000CE4                     u3791:
  1349  000CE4  EF82  F006         	goto	l3560
  1350  000CE8                     u3790:
  1351  000CE8  0E06               	movlw	6
  1352  000CEA  1835               	xorwf	timer@dSeg^0,w,c
  1353  000CEC  1036               	iorwf	(timer@dSeg+1)^0,w,c
  1354  000CEE  A4D8               	btfss	status,2,c
  1355  000CF0  EF7C  F006         	goto	u3801
  1356  000CF4  EF7E  F006         	goto	u3800
  1357  000CF8                     u3801:
  1358  000CF8  EF82  F006         	goto	l3560
  1359  000CFC                     u3800:
  1360  000CFC                     
  1361                           ;funcoes.c: 248:                     seg=0;
  1362  000CFC  0E00               	movlw	0
  1363  000CFE  6E38               	movwf	(timer@seg+1)^0,c
  1364  000D00  0E00               	movlw	0
  1365  000D02  6E37               	movwf	timer@seg^0,c
  1366  000D04                     l3560:
  1367                           
  1368                           ;funcoes.c: 251:             if (((tecla) & (1<<(7)))) {
  1369  000D04  AE39               	btfss	timer@tecla^0,7,c
  1370  000D06  EF87  F006         	goto	u3811
  1371  000D0A  EF89  F006         	goto	u3810
  1372  000D0E                     u3811:
  1373  000D0E  EF9D  F006         	goto	l3568
  1374  000D12                     u3810:
  1375  000D12                     
  1376                           ;funcoes.c: 252:                 dMin--;
  1377  000D12  0631               	decf	timer@dMin^0,f,c
  1378  000D14  A0D8               	btfss	status,0,c
  1379  000D16  0632               	decf	(timer@dMin+1)^0,f,c
  1380  000D18                     
  1381                           ;funcoes.c: 253:                 if(dMin<=0){
  1382  000D18  BE32               	btfsc	(timer@dMin+1)^0,7,c
  1383  000D1A  EF99  F006         	goto	u3820
  1384  000D1E  5032               	movf	(timer@dMin+1)^0,w,c
  1385  000D20  E106               	bnz	u3821
  1386  000D22  0431               	decf	timer@dMin^0,w,c
  1387  000D24  B0D8               	btfsc	status,0,c
  1388  000D26  EF97  F006         	goto	u3821
  1389  000D2A  EF99  F006         	goto	u3820
  1390  000D2E                     u3821:
  1391  000D2E  EF9D  F006         	goto	l3568
  1392  000D32                     u3820:
  1393  000D32                     
  1394                           ;funcoes.c: 254:                     dMin=0;
  1395  000D32  0E00               	movlw	0
  1396  000D34  6E32               	movwf	(timer@dMin+1)^0,c
  1397  000D36  0E00               	movlw	0
  1398  000D38  6E31               	movwf	timer@dMin^0,c
  1399  000D3A                     l3568:
  1400                           
  1401                           ;funcoes.c: 257:             if (((tecla) & (1<<(6)))) {
  1402  000D3A  AC39               	btfss	timer@tecla^0,6,c
  1403  000D3C  EFA2  F006         	goto	u3831
  1404  000D40  EFA4  F006         	goto	u3830
  1405  000D44                     u3831:
  1406  000D44  EFB8  F006         	goto	l3576
  1407  000D48                     u3830:
  1408  000D48                     
  1409                           ;funcoes.c: 258:                 min--;
  1410  000D48  0633               	decf	timer@min^0,f,c
  1411  000D4A  A0D8               	btfss	status,0,c
  1412  000D4C  0634               	decf	(timer@min+1)^0,f,c
  1413  000D4E                     
  1414                           ;funcoes.c: 259:                 if(min<=0){
  1415  000D4E  BE34               	btfsc	(timer@min+1)^0,7,c
  1416  000D50  EFB4  F006         	goto	u3840
  1417  000D54  5034               	movf	(timer@min+1)^0,w,c
  1418  000D56  E106               	bnz	u3841
  1419  000D58  0433               	decf	timer@min^0,w,c
  1420  000D5A  B0D8               	btfsc	status,0,c
  1421  000D5C  EFB2  F006         	goto	u3841
  1422  000D60  EFB4  F006         	goto	u3840
  1423  000D64                     u3841:
  1424  000D64  EFB8  F006         	goto	l3576
  1425  000D68                     u3840:
  1426  000D68                     
  1427                           ;funcoes.c: 260:                     min=0;
  1428  000D68  0E00               	movlw	0
  1429  000D6A  6E34               	movwf	(timer@min+1)^0,c
  1430  000D6C  0E00               	movlw	0
  1431  000D6E  6E33               	movwf	timer@min^0,c
  1432  000D70                     l3576:
  1433                           
  1434                           ;funcoes.c: 263:             if (((tecla) & (1<<(5)))) {
  1435  000D70  AA39               	btfss	timer@tecla^0,5,c
  1436  000D72  EFBD  F006         	goto	u3851
  1437  000D76  EFBF  F006         	goto	u3850
  1438  000D7A                     u3851:
  1439  000D7A  EFD3  F006         	goto	l3584
  1440  000D7E                     u3850:
  1441  000D7E                     
  1442                           ;funcoes.c: 264:                 dSeg--;
  1443  000D7E  0635               	decf	timer@dSeg^0,f,c
  1444  000D80  A0D8               	btfss	status,0,c
  1445  000D82  0636               	decf	(timer@dSeg+1)^0,f,c
  1446  000D84                     
  1447                           ;funcoes.c: 265:                 if(dSeg<=0){
  1448  000D84  BE36               	btfsc	(timer@dSeg+1)^0,7,c
  1449  000D86  EFCF  F006         	goto	u3860
  1450  000D8A  5036               	movf	(timer@dSeg+1)^0,w,c
  1451  000D8C  E106               	bnz	u3861
  1452  000D8E  0435               	decf	timer@dSeg^0,w,c
  1453  000D90  B0D8               	btfsc	status,0,c
  1454  000D92  EFCD  F006         	goto	u3861
  1455  000D96  EFCF  F006         	goto	u3860
  1456  000D9A                     u3861:
  1457  000D9A  EFD3  F006         	goto	l3584
  1458  000D9E                     u3860:
  1459  000D9E                     
  1460                           ;funcoes.c: 266:                     dSeg=0;
  1461  000D9E  0E00               	movlw	0
  1462  000DA0  6E36               	movwf	(timer@dSeg+1)^0,c
  1463  000DA2  0E00               	movlw	0
  1464  000DA4  6E35               	movwf	timer@dSeg^0,c
  1465  000DA6                     l3584:
  1466                           
  1467                           ;funcoes.c: 269:             if (((tecla) & (1<<(4)))) {
  1468  000DA6  A839               	btfss	timer@tecla^0,4,c
  1469  000DA8  EFD8  F006         	goto	u3871
  1470  000DAC  EFDA  F006         	goto	u3870
  1471  000DB0                     u3871:
  1472  000DB0  EFEE  F006         	goto	l3592
  1473  000DB4                     u3870:
  1474  000DB4                     
  1475                           ;funcoes.c: 270:                 seg--;
  1476  000DB4  0637               	decf	timer@seg^0,f,c
  1477  000DB6  A0D8               	btfss	status,0,c
  1478  000DB8  0638               	decf	(timer@seg+1)^0,f,c
  1479  000DBA                     
  1480                           ;funcoes.c: 271:                 if(seg<=0){
  1481  000DBA  BE38               	btfsc	(timer@seg+1)^0,7,c
  1482  000DBC  EFEA  F006         	goto	u3880
  1483  000DC0  5038               	movf	(timer@seg+1)^0,w,c
  1484  000DC2  E106               	bnz	u3881
  1485  000DC4  0437               	decf	timer@seg^0,w,c
  1486  000DC6  B0D8               	btfsc	status,0,c
  1487  000DC8  EFE8  F006         	goto	u3881
  1488  000DCC  EFEA  F006         	goto	u3880
  1489  000DD0                     u3881:
  1490  000DD0  EFEE  F006         	goto	l3592
  1491  000DD4                     u3880:
  1492  000DD4                     
  1493                           ;funcoes.c: 272:                     seg=0;
  1494  000DD4  0E00               	movlw	0
  1495  000DD6  6E38               	movwf	(timer@seg+1)^0,c
  1496  000DD8  0E00               	movlw	0
  1497  000DDA  6E37               	movwf	timer@seg^0,c
  1498  000DDC                     l3592:
  1499                           
  1500                           ;funcoes.c: 275:             if (((tecla) & (1<<(10)))) {
  1501  000DDC  A43A               	btfss	(timer@tecla+1)^0,2,c
  1502  000DDE  EFF3  F006         	goto	u3891
  1503  000DE2  EFF5  F006         	goto	u3890
  1504  000DE6                     u3891:
  1505  000DE6  EF09  F007         	goto	l3598
  1506  000DEA                     u3890:
  1507  000DEA                     
  1508                           ;funcoes.c: 276:                 contagem(dMin, min, dSeg, seg);
  1509  000DEA  C031  F01B         	movff	timer@dMin,contagem@dMin
  1510  000DEE  C032  F01C         	movff	timer@dMin+1,contagem@dMin+1
  1511  000DF2  C033  F01D         	movff	timer@min,contagem@min
  1512  000DF6  C034  F01E         	movff	timer@min+1,contagem@min+1
  1513  000DFA  C035  F01F         	movff	timer@dSeg,contagem@dSeg
  1514  000DFE  C036  F020         	movff	timer@dSeg+1,contagem@dSeg+1
  1515  000E02  C037  F021         	movff	timer@seg,contagem@seg
  1516  000E06  C038  F022         	movff	timer@seg+1,contagem@seg+1
  1517  000E0A  ECA0  F007         	call	_contagem	;wreg free
  1518  000E0E  EF9F  F007         	goto	l304
  1519  000E12                     l3598:
  1520                           
  1521                           ;funcoes.c: 280:         ssdDigit(dMin % 10, 0);
  1522  000E12  0E00               	movlw	0
  1523  000E14  6E19               	movwf	ssdDigit@pos^0,c
  1524  000E16  C031  F00B         	movff	timer@dMin,___awmod@dividend
  1525  000E1A  C032  F00C         	movff	timer@dMin+1,___awmod@dividend+1
  1526  000E1E  0E00               	movlw	0
  1527  000E20  6E0E               	movwf	(___awmod@divisor+1)^0,c
  1528  000E22  0E0A               	movlw	10
  1529  000E24  6E0D               	movwf	___awmod@divisor^0,c
  1530  000E26  EC81  F011         	call	___awmod	;wreg free
  1531  000E2A  500B               	movf	?___awmod^0,w,c
  1532  000E2C  EC30  F013         	call	_ssdDigit
  1533                           
  1534                           ;funcoes.c: 281:         ssdDigit(min % 10, 1);
  1535  000E30  0E01               	movlw	1
  1536  000E32  6E19               	movwf	ssdDigit@pos^0,c
  1537  000E34  C033  F00B         	movff	timer@min,___awmod@dividend
  1538  000E38  C034  F00C         	movff	timer@min+1,___awmod@dividend+1
  1539  000E3C  0E00               	movlw	0
  1540  000E3E  6E0E               	movwf	(___awmod@divisor+1)^0,c
  1541  000E40  0E0A               	movlw	10
  1542  000E42  6E0D               	movwf	___awmod@divisor^0,c
  1543  000E44  EC81  F011         	call	___awmod	;wreg free
  1544  000E48  500B               	movf	?___awmod^0,w,c
  1545  000E4A  EC30  F013         	call	_ssdDigit
  1546                           
  1547                           ;funcoes.c: 282:         ssdDigit(dSeg % 10, 2);
  1548  000E4E  0E02               	movlw	2
  1549  000E50  6E19               	movwf	ssdDigit@pos^0,c
  1550  000E52  C035  F00B         	movff	timer@dSeg,___awmod@dividend
  1551  000E56  C036  F00C         	movff	timer@dSeg+1,___awmod@dividend+1
  1552  000E5A  0E00               	movlw	0
  1553  000E5C  6E0E               	movwf	(___awmod@divisor+1)^0,c
  1554  000E5E  0E0A               	movlw	10
  1555  000E60  6E0D               	movwf	___awmod@divisor^0,c
  1556  000E62  EC81  F011         	call	___awmod	;wreg free
  1557  000E66  500B               	movf	?___awmod^0,w,c
  1558  000E68  EC30  F013         	call	_ssdDigit
  1559                           
  1560                           ;funcoes.c: 283:         ssdDigit(seg % 10, 3);
  1561  000E6C  0E03               	movlw	3
  1562  000E6E  6E19               	movwf	ssdDigit@pos^0,c
  1563  000E70  C037  F00B         	movff	timer@seg,___awmod@dividend
  1564  000E74  C038  F00C         	movff	timer@seg+1,___awmod@dividend+1
  1565  000E78  0E00               	movlw	0
  1566  000E7A  6E0E               	movwf	(___awmod@divisor+1)^0,c
  1567  000E7C  0E0A               	movlw	10
  1568  000E7E  6E0D               	movwf	___awmod@divisor^0,c
  1569  000E80  EC81  F011         	call	___awmod	;wreg free
  1570  000E84  500B               	movf	?___awmod^0,w,c
  1571  000E86  EC30  F013         	call	_ssdDigit
  1572  000E8A                     
  1573                           ;funcoes.c: 284:         for (j = 0; j < 5; j++);
  1574  000E8A  0E00               	movlw	0
  1575  000E8C  6E2D               	movwf	timer@j^0,c
  1576  000E8E  0E00               	movlw	0
  1577  000E90  6E2E               	movwf	(timer@j+1)^0,c
  1578  000E92  0E00               	movlw	0
  1579  000E94  6E2F               	movwf	(timer@j+2)^0,c
  1580  000E96  0E00               	movlw	0
  1581  000E98  6E30               	movwf	(timer@j+3)^0,c
  1582  000E9A  C02D  F001         	movff	timer@j,___flge@ff1
  1583  000E9E  C02E  F002         	movff	timer@j+1,___flge@ff1+1
  1584  000EA2  C02F  F003         	movff	timer@j+2,___flge@ff1+2
  1585  000EA6  C030  F004         	movff	timer@j+3,___flge@ff1+3
  1586  000EAA  0E00               	movlw	0
  1587  000EAC  6E05               	movwf	___flge@ff2^0,c
  1588  000EAE  0E00               	movlw	0
  1589  000EB0  6E06               	movwf	(___flge@ff2+1)^0,c
  1590  000EB2  0EA0               	movlw	160
  1591  000EB4  6E07               	movwf	(___flge@ff2+2)^0,c
  1592  000EB6  0E40               	movlw	64
  1593  000EB8  6E08               	movwf	(___flge@ff2+3)^0,c
  1594  000EBA  EC5D  F00F         	call	___flge	;wreg free
  1595  000EBE  A0D8               	btfss	status,0,c
  1596  000EC0  EF64  F007         	goto	u3901
  1597  000EC4  EF66  F007         	goto	u3900
  1598  000EC8                     u3901:
  1599  000EC8  EF68  F007         	goto	l3606
  1600  000ECC                     u3900:
  1601  000ECC  EF9B  F007         	goto	l3608
  1602  000ED0                     l3606:
  1603  000ED0  C02D  F001         	movff	timer@j,___fladd@b
  1604  000ED4  C02E  F002         	movff	timer@j+1,___fladd@b+1
  1605  000ED8  C02F  F003         	movff	timer@j+2,___fladd@b+2
  1606  000EDC  C030  F004         	movff	timer@j+3,___fladd@b+3
  1607  000EE0  0E00               	movlw	0
  1608  000EE2  6E05               	movwf	___fladd@a^0,c
  1609  000EE4  0E00               	movlw	0
  1610  000EE6  6E06               	movwf	(___fladd@a+1)^0,c
  1611  000EE8  0E80               	movlw	128
  1612  000EEA  6E07               	movwf	(___fladd@a+2)^0,c
  1613  000EEC  0E3F               	movlw	63
  1614  000EEE  6E08               	movwf	(___fladd@a+3)^0,c
  1615  000EF0  EC4C  F003         	call	___fladd	;wreg free
  1616  000EF4  C001  F02D         	movff	?___fladd,timer@j
  1617  000EF8  C002  F02E         	movff	?___fladd+1,timer@j+1
  1618  000EFC  C003  F02F         	movff	?___fladd+2,timer@j+2
  1619  000F00  C004  F030         	movff	?___fladd+3,timer@j+3
  1620  000F04  C02D  F001         	movff	timer@j,___flge@ff1
  1621  000F08  C02E  F002         	movff	timer@j+1,___flge@ff1+1
  1622  000F0C  C02F  F003         	movff	timer@j+2,___flge@ff1+2
  1623  000F10  C030  F004         	movff	timer@j+3,___flge@ff1+3
  1624  000F14  0E00               	movlw	0
  1625  000F16  6E05               	movwf	___flge@ff2^0,c
  1626  000F18  0E00               	movlw	0
  1627  000F1A  6E06               	movwf	(___flge@ff2+1)^0,c
  1628  000F1C  0EA0               	movlw	160
  1629  000F1E  6E07               	movwf	(___flge@ff2+2)^0,c
  1630  000F20  0E40               	movlw	64
  1631  000F22  6E08               	movwf	(___flge@ff2+3)^0,c
  1632  000F24  EC5D  F00F         	call	___flge	;wreg free
  1633  000F28  A0D8               	btfss	status,0,c
  1634  000F2A  EF99  F007         	goto	u3911
  1635  000F2E  EF9B  F007         	goto	u3910
  1636  000F32                     u3911:
  1637  000F32  EF68  F007         	goto	l3606
  1638  000F36                     u3910:
  1639  000F36                     l3608:
  1640                           
  1641                           ;funcoes.c: 285:         ssdUpdate();
  1642  000F36  ECAC  F00D         	call	_ssdUpdate	;wreg free
  1643                           
  1644                           ;funcoes.c: 286:     }
  1645  000F3A  EFC7  F005         	goto	l3500
  1646  000F3E                     l304:
  1647  000F3E  0012               	return		;funcret
  1648  000F40                     __end_of_timer:
  1649                           	callstack 0
  1650                           
  1651 ;; *************** function _contagem *****************
  1652 ;; Defined at:
  1653 ;;		line 177 in file "funcoes.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  dMin            2   26[COMRAM] int 
  1656 ;;  min             2   28[COMRAM] int 
  1657 ;;  dSeg            2   30[COMRAM] int 
  1658 ;;  seg             2   32[COMRAM] int 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  cont            4   40[COMRAM] long 
  1661 ;;  i               4   36[COMRAM] float 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1671 ;;      Params:         8       0       0       0       0       0       0
  1672 ;;      Locals:         8       0       0       0       0       0       0
  1673 ;;      Temps:          2       0       0       0       0       0       0
  1674 ;;      Totals:        18       0       0       0       0       0       0
  1675 ;;Total ram usage:       18 bytes
  1676 ;; Hardware stack levels used: 1
  1677 ;; Hardware stack levels required when called: 2
  1678 ;; This function calls:
  1679 ;;		___aldiv
  1680 ;;		___almod
  1681 ;;		___awmod
  1682 ;;		___fladd
  1683 ;;		___flge
  1684 ;;		___fltol
  1685 ;;		___wmul
  1686 ;;		_atraso_ms
  1687 ;;		_pwmSet1
  1688 ;;		_ssdDigit
  1689 ;;		_ssdUpdate
  1690 ;;		_timerInit
  1691 ;; This function is called by:
  1692 ;;		_timer
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text4
  1697  000F40                     __ptext4:
  1698                           	callstack 0
  1699  000F40                     _contagem:
  1700                           	callstack 26
  1701  000F40                     
  1702                           ;funcoes.c: 178:     long int cont = dMin * 600 + min * 60 + dSeg * 10 + seg;
  1703  000F40  C01B  F001         	movff	contagem@dMin,___wmul@multiplier
  1704  000F44  C01C  F002         	movff	contagem@dMin+1,___wmul@multiplier+1
  1705  000F48  0E02               	movlw	2
  1706  000F4A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1707  000F4C  0E58               	movlw	88
  1708  000F4E  6E03               	movwf	___wmul@multiplicand^0,c
  1709  000F50  EC1F  F014         	call	___wmul	;wreg free
  1710  000F54  C001  F023         	movff	?___wmul,??_contagem
  1711  000F58  C002  F024         	movff	?___wmul+1,??_contagem+1
  1712  000F5C  C01D  F001         	movff	contagem@min,___wmul@multiplier
  1713  000F60  C01E  F002         	movff	contagem@min+1,___wmul@multiplier+1
  1714  000F64  0E00               	movlw	0
  1715  000F66  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1716  000F68  0E3C               	movlw	60
  1717  000F6A  6E03               	movwf	___wmul@multiplicand^0,c
  1718  000F6C  EC1F  F014         	call	___wmul	;wreg free
  1719  000F70  5001               	movf	?___wmul^0,w,c
  1720  000F72  2623               	addwf	??_contagem^0,f,c
  1721  000F74  5002               	movf	(?___wmul+1)^0,w,c
  1722  000F76  2224               	addwfc	(??_contagem+1)^0,f,c
  1723  000F78  C01F  F001         	movff	contagem@dSeg,___wmul@multiplier
  1724  000F7C  C020  F002         	movff	contagem@dSeg+1,___wmul@multiplier+1
  1725  000F80  0E00               	movlw	0
  1726  000F82  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1727  000F84  0E0A               	movlw	10
  1728  000F86  6E03               	movwf	___wmul@multiplicand^0,c
  1729  000F88  EC1F  F014         	call	___wmul	;wreg free
  1730  000F8C  5001               	movf	?___wmul^0,w,c
  1731  000F8E  2623               	addwf	??_contagem^0,f,c
  1732  000F90  5002               	movf	(?___wmul+1)^0,w,c
  1733  000F92  2224               	addwfc	(??_contagem+1)^0,f,c
  1734  000F94  5021               	movf	contagem@seg^0,w,c
  1735  000F96  2623               	addwf	??_contagem^0,f,c
  1736  000F98  5022               	movf	(contagem@seg+1)^0,w,c
  1737  000F9A  2224               	addwfc	(??_contagem+1)^0,f,c
  1738  000F9C  C023  F029         	movff	??_contagem,contagem@cont
  1739  000FA0  C024  F02A         	movff	??_contagem+1,contagem@cont+1
  1740  000FA4  0E00               	movlw	0
  1741  000FA6  BE2A               	btfsc	(contagem@cont+1)^0,7,c
  1742  000FA8  0EFF               	movlw	-1
  1743  000FAA  6E2B               	movwf	(contagem@cont+2)^0,c
  1744  000FAC  6E2C               	movwf	(contagem@cont+3)^0,c
  1745  000FAE                     
  1746                           ;funcoes.c: 179:     timerInit();
  1747  000FAE  EC6E  F014         	call	_timerInit	;wreg free
  1748  000FB2                     l3350:
  1749                           
  1750                           ;funcoes.c: 182:         for(i=0; i<2500; i++){
  1751  000FB2  0E00               	movlw	0
  1752  000FB4  6E25               	movwf	contagem@i^0,c
  1753  000FB6  0E00               	movlw	0
  1754  000FB8  6E26               	movwf	(contagem@i+1)^0,c
  1755  000FBA  0E00               	movlw	0
  1756  000FBC  6E27               	movwf	(contagem@i+2)^0,c
  1757  000FBE  0E00               	movlw	0
  1758  000FC0  6E28               	movwf	(contagem@i+3)^0,c
  1759  000FC2  C025  F001         	movff	contagem@i,___flge@ff1
  1760  000FC6  C026  F002         	movff	contagem@i+1,___flge@ff1+1
  1761  000FCA  C027  F003         	movff	contagem@i+2,___flge@ff1+2
  1762  000FCE  C028  F004         	movff	contagem@i+3,___flge@ff1+3
  1763  000FD2  0E00               	movlw	0
  1764  000FD4  6E05               	movwf	___flge@ff2^0,c
  1765  000FD6  0E40               	movlw	64
  1766  000FD8  6E06               	movwf	(___flge@ff2+1)^0,c
  1767  000FDA  0E1C               	movlw	28
  1768  000FDC  6E07               	movwf	(___flge@ff2+2)^0,c
  1769  000FDE  0E45               	movlw	69
  1770  000FE0  6E08               	movwf	(___flge@ff2+3)^0,c
  1771  000FE2  EC5D  F00F         	call	___flge	;wreg free
  1772  000FE6  A0D8               	btfss	status,0,c
  1773  000FE8  EFF8  F007         	goto	u3551
  1774  000FEC  EFFA  F007         	goto	u3550
  1775  000FF0                     u3551:
  1776  000FF0  EFFC  F007         	goto	l3356
  1777  000FF4                     u3550:
  1778  000FF4  EF4E  F008         	goto	l3364
  1779  000FF8                     l3356:
  1780                           
  1781                           ;funcoes.c: 183:             if((int)i%7==0){
  1782  000FF8  C025  F001         	movff	contagem@i,___fltol@f1
  1783  000FFC  C026  F002         	movff	contagem@i+1,___fltol@f1+1
  1784  001000  C027  F003         	movff	contagem@i+2,___fltol@f1+2
  1785  001004  C028  F004         	movff	contagem@i+3,___fltol@f1+3
  1786  001008  ECDA  F00E         	call	___fltol	;wreg free
  1787  00100C  C001  F00B         	movff	?___fltol,___awmod@dividend
  1788  001010  C002  F00C         	movff	?___fltol+1,___awmod@dividend+1
  1789  001014  0E00               	movlw	0
  1790  001016  6E0E               	movwf	(___awmod@divisor+1)^0,c
  1791  001018  0E07               	movlw	7
  1792  00101A  6E0D               	movwf	___awmod@divisor^0,c
  1793  00101C  EC81  F011         	call	___awmod	;wreg free
  1794  001020  500B               	movf	?___awmod^0,w,c
  1795  001022  100C               	iorwf	(?___awmod+1)^0,w,c
  1796  001024  A4D8               	btfss	status,2,c
  1797  001026  EF17  F008         	goto	u3561
  1798  00102A  EF19  F008         	goto	u3560
  1799  00102E                     u3561:
  1800  00102E  EF1B  F008         	goto	l3360
  1801  001032                     u3560:
  1802  001032                     
  1803                           ;funcoes.c: 184:                 ssdUpdate();
  1804  001032  ECAC  F00D         	call	_ssdUpdate	;wreg free
  1805  001036                     l3360:
  1806                           
  1807                           ;funcoes.c: 186:         }
  1808  001036  C025  F001         	movff	contagem@i,___fladd@b
  1809  00103A  C026  F002         	movff	contagem@i+1,___fladd@b+1
  1810  00103E  C027  F003         	movff	contagem@i+2,___fladd@b+2
  1811  001042  C028  F004         	movff	contagem@i+3,___fladd@b+3
  1812  001046  0E00               	movlw	0
  1813  001048  6E05               	movwf	___fladd@a^0,c
  1814  00104A  0E00               	movlw	0
  1815  00104C  6E06               	movwf	(___fladd@a+1)^0,c
  1816  00104E  0E80               	movlw	128
  1817  001050  6E07               	movwf	(___fladd@a+2)^0,c
  1818  001052  0E3F               	movlw	63
  1819  001054  6E08               	movwf	(___fladd@a+3)^0,c
  1820  001056  EC4C  F003         	call	___fladd	;wreg free
  1821  00105A  C001  F025         	movff	?___fladd,contagem@i
  1822  00105E  C002  F026         	movff	?___fladd+1,contagem@i+1
  1823  001062  C003  F027         	movff	?___fladd+2,contagem@i+2
  1824  001066  C004  F028         	movff	?___fladd+3,contagem@i+3
  1825  00106A  C025  F001         	movff	contagem@i,___flge@ff1
  1826  00106E  C026  F002         	movff	contagem@i+1,___flge@ff1+1
  1827  001072  C027  F003         	movff	contagem@i+2,___flge@ff1+2
  1828  001076  C028  F004         	movff	contagem@i+3,___flge@ff1+3
  1829  00107A  0E00               	movlw	0
  1830  00107C  6E05               	movwf	___flge@ff2^0,c
  1831  00107E  0E40               	movlw	64
  1832  001080  6E06               	movwf	(___flge@ff2+1)^0,c
  1833  001082  0E1C               	movlw	28
  1834  001084  6E07               	movwf	(___flge@ff2+2)^0,c
  1835  001086  0E45               	movlw	69
  1836  001088  6E08               	movwf	(___flge@ff2+3)^0,c
  1837  00108A  EC5D  F00F         	call	___flge	;wreg free
  1838  00108E  A0D8               	btfss	status,0,c
  1839  001090  EF4C  F008         	goto	u3571
  1840  001094  EF4E  F008         	goto	u3570
  1841  001098                     u3571:
  1842  001098  EFFC  F007         	goto	l3356
  1843  00109C                     u3570:
  1844  00109C                     l3364:
  1845                           
  1846                           ;funcoes.c: 187:         cont--;
  1847  00109C  0EFF               	movlw	255
  1848  00109E  2629               	addwf	contagem@cont^0,f,c
  1849  0010A0  0EFF               	movlw	255
  1850  0010A2  222A               	addwfc	(contagem@cont+1)^0,f,c
  1851  0010A4  0EFF               	movlw	255
  1852  0010A6  222B               	addwfc	(contagem@cont+2)^0,f,c
  1853  0010A8  0EFF               	movlw	255
  1854  0010AA  222C               	addwfc	(contagem@cont+3)^0,f,c
  1855  0010AC                     
  1856                           ;funcoes.c: 188:         ssdDigit((cont/600)%10,0);
  1857  0010AC  0E00               	movlw	0
  1858  0010AE  6E19               	movwf	ssdDigit@pos^0,c
  1859  0010B0  0E58               	movlw	88
  1860  0010B2  6E05               	movwf	___aldiv@divisor^0,c
  1861  0010B4  0E02               	movlw	2
  1862  0010B6  6E06               	movwf	(___aldiv@divisor+1)^0,c
  1863  0010B8  0E00               	movlw	0
  1864  0010BA  6E07               	movwf	(___aldiv@divisor+2)^0,c
  1865  0010BC  0E00               	movlw	0
  1866  0010BE  6E08               	movwf	(___aldiv@divisor+3)^0,c
  1867  0010C0  C029  F001         	movff	contagem@cont,___aldiv@dividend
  1868  0010C4  C02A  F002         	movff	contagem@cont+1,___aldiv@dividend+1
  1869  0010C8  C02B  F003         	movff	contagem@cont+2,___aldiv@dividend+2
  1870  0010CC  C02C  F004         	movff	contagem@cont+3,___aldiv@dividend+3
  1871  0010D0  EC54  F00E         	call	___aldiv	;wreg free
  1872  0010D4  C001  F00F         	movff	?___aldiv,___almod@dividend
  1873  0010D8  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
  1874  0010DC  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
  1875  0010E0  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
  1876  0010E4  0E0A               	movlw	10
  1877  0010E6  6E13               	movwf	___almod@divisor^0,c
  1878  0010E8  0E00               	movlw	0
  1879  0010EA  6E14               	movwf	(___almod@divisor+1)^0,c
  1880  0010EC  0E00               	movlw	0
  1881  0010EE  6E15               	movwf	(___almod@divisor+2)^0,c
  1882  0010F0  0E00               	movlw	0
  1883  0010F2  6E16               	movwf	(___almod@divisor+3)^0,c
  1884  0010F4  ECDF  F00F         	call	___almod	;wreg free
  1885  0010F8  500F               	movf	?___almod^0,w,c
  1886  0010FA  EC30  F013         	call	_ssdDigit
  1887  0010FE                     
  1888                           ;funcoes.c: 189:         ssdDigit((cont/60)%10,1);
  1889  0010FE  0E01               	movlw	1
  1890  001100  6E19               	movwf	ssdDigit@pos^0,c
  1891  001102  0E3C               	movlw	60
  1892  001104  6E05               	movwf	___aldiv@divisor^0,c
  1893  001106  0E00               	movlw	0
  1894  001108  6E06               	movwf	(___aldiv@divisor+1)^0,c
  1895  00110A  0E00               	movlw	0
  1896  00110C  6E07               	movwf	(___aldiv@divisor+2)^0,c
  1897  00110E  0E00               	movlw	0
  1898  001110  6E08               	movwf	(___aldiv@divisor+3)^0,c
  1899  001112  C029  F001         	movff	contagem@cont,___aldiv@dividend
  1900  001116  C02A  F002         	movff	contagem@cont+1,___aldiv@dividend+1
  1901  00111A  C02B  F003         	movff	contagem@cont+2,___aldiv@dividend+2
  1902  00111E  C02C  F004         	movff	contagem@cont+3,___aldiv@dividend+3
  1903  001122  EC54  F00E         	call	___aldiv	;wreg free
  1904  001126  C001  F00F         	movff	?___aldiv,___almod@dividend
  1905  00112A  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
  1906  00112E  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
  1907  001132  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
  1908  001136  0E0A               	movlw	10
  1909  001138  6E13               	movwf	___almod@divisor^0,c
  1910  00113A  0E00               	movlw	0
  1911  00113C  6E14               	movwf	(___almod@divisor+1)^0,c
  1912  00113E  0E00               	movlw	0
  1913  001140  6E15               	movwf	(___almod@divisor+2)^0,c
  1914  001142  0E00               	movlw	0
  1915  001144  6E16               	movwf	(___almod@divisor+3)^0,c
  1916  001146  ECDF  F00F         	call	___almod	;wreg free
  1917  00114A  500F               	movf	?___almod^0,w,c
  1918  00114C  EC30  F013         	call	_ssdDigit
  1919  001150                     
  1920                           ;funcoes.c: 190:         ssdDigit((cont/10)%6,2);
  1921  001150  0E02               	movlw	2
  1922  001152  6E19               	movwf	ssdDigit@pos^0,c
  1923  001154  0E0A               	movlw	10
  1924  001156  6E05               	movwf	___aldiv@divisor^0,c
  1925  001158  0E00               	movlw	0
  1926  00115A  6E06               	movwf	(___aldiv@divisor+1)^0,c
  1927  00115C  0E00               	movlw	0
  1928  00115E  6E07               	movwf	(___aldiv@divisor+2)^0,c
  1929  001160  0E00               	movlw	0
  1930  001162  6E08               	movwf	(___aldiv@divisor+3)^0,c
  1931  001164  C029  F001         	movff	contagem@cont,___aldiv@dividend
  1932  001168  C02A  F002         	movff	contagem@cont+1,___aldiv@dividend+1
  1933  00116C  C02B  F003         	movff	contagem@cont+2,___aldiv@dividend+2
  1934  001170  C02C  F004         	movff	contagem@cont+3,___aldiv@dividend+3
  1935  001174  EC54  F00E         	call	___aldiv	;wreg free
  1936  001178  C001  F00F         	movff	?___aldiv,___almod@dividend
  1937  00117C  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
  1938  001180  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
  1939  001184  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
  1940  001188  0E06               	movlw	6
  1941  00118A  6E13               	movwf	___almod@divisor^0,c
  1942  00118C  0E00               	movlw	0
  1943  00118E  6E14               	movwf	(___almod@divisor+1)^0,c
  1944  001190  0E00               	movlw	0
  1945  001192  6E15               	movwf	(___almod@divisor+2)^0,c
  1946  001194  0E00               	movlw	0
  1947  001196  6E16               	movwf	(___almod@divisor+3)^0,c
  1948  001198  ECDF  F00F         	call	___almod	;wreg free
  1949  00119C  500F               	movf	?___almod^0,w,c
  1950  00119E  EC30  F013         	call	_ssdDigit
  1951  0011A2                     
  1952                           ;funcoes.c: 191:         ssdDigit((cont)%10,3);
  1953  0011A2  0E03               	movlw	3
  1954  0011A4  6E19               	movwf	ssdDigit@pos^0,c
  1955  0011A6  C029  F00F         	movff	contagem@cont,___almod@dividend
  1956  0011AA  C02A  F010         	movff	contagem@cont+1,___almod@dividend+1
  1957  0011AE  C02B  F011         	movff	contagem@cont+2,___almod@dividend+2
  1958  0011B2  C02C  F012         	movff	contagem@cont+3,___almod@dividend+3
  1959  0011B6  0E0A               	movlw	10
  1960  0011B8  6E13               	movwf	___almod@divisor^0,c
  1961  0011BA  0E00               	movlw	0
  1962  0011BC  6E14               	movwf	(___almod@divisor+1)^0,c
  1963  0011BE  0E00               	movlw	0
  1964  0011C0  6E15               	movwf	(___almod@divisor+2)^0,c
  1965  0011C2  0E00               	movlw	0
  1966  0011C4  6E16               	movwf	(___almod@divisor+3)^0,c
  1967  0011C6  ECDF  F00F         	call	___almod	;wreg free
  1968  0011CA  500F               	movf	?___almod^0,w,c
  1969  0011CC  EC30  F013         	call	_ssdDigit
  1970                           
  1971                           ;funcoes.c: 192:         if(cont==0){
  1972  0011D0  5029               	movf	contagem@cont^0,w,c
  1973  0011D2  102A               	iorwf	(contagem@cont+1)^0,w,c
  1974  0011D4  102B               	iorwf	(contagem@cont+2)^0,w,c
  1975  0011D6  102C               	iorwf	(contagem@cont+3)^0,w,c
  1976  0011D8  A4D8               	btfss	status,2,c
  1977  0011DA  EFF1  F008         	goto	u3581
  1978  0011DE  EFF3  F008         	goto	u3580
  1979  0011E2                     u3581:
  1980  0011E2  EFD9  F007         	goto	l3350
  1981  0011E6                     u3580:
  1982  0011E6                     
  1983                           ;funcoes.c: 194:             pwmSet1(0);
  1984  0011E6  0E00               	movlw	0
  1985  0011E8  ECC8  F012         	call	_pwmSet1
  1986  0011EC                     
  1987                           ;funcoes.c: 196:             (((*(volatile __near unsigned char*)0xF94)) |= (1<<(1)));
  1988  0011EC  8294               	bsf	148,1,c	;volatile
  1989  0011EE                     
  1990                           ;funcoes.c: 197:             atraso_ms(600);
  1991  0011EE  0E02               	movlw	2
  1992  0011F0  6E02               	movwf	(atraso_ms@t+1)^0,c
  1993  0011F2  0E58               	movlw	88
  1994  0011F4  6E01               	movwf	atraso_ms@t^0,c
  1995  0011F6  ECFE  F012         	call	_atraso_ms	;wreg free
  1996  0011FA                     
  1997                           ;funcoes.c: 198:             (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<(1)));
  1998  0011FA  9294               	bcf	148,1,c	;volatile
  1999  0011FC  0012               	return		;funcret
  2000  0011FE                     __end_of_contagem:
  2001                           	callstack 0
  2002                           
  2003 ;; *************** function _timerInit *****************
  2004 ;; Defined at:
  2005 ;;		line 49 in file "timer.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;		None
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;		None
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  1    wreg      void 
  2012 ;; Registers used:
  2013 ;;		wreg, status,2, status,0
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2019 ;;      Params:         0       0       0       0       0       0       0
  2020 ;;      Locals:         0       0       0       0       0       0       0
  2021 ;;      Temps:          0       0       0       0       0       0       0
  2022 ;;      Totals:         0       0       0       0       0       0       0
  2023 ;;Total ram usage:        0 bytes
  2024 ;; Hardware stack levels used: 1
  2025 ;; This function calls:
  2026 ;;		Nothing
  2027 ;; This function is called by:
  2028 ;;		_contagem
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text5
  2033  0028DC                     __ptext5:
  2034                           	callstack 0
  2035  0028DC                     _timerInit:
  2036                           	callstack 27
  2037  0028DC                     
  2038                           ;timer.c: 51:  (*(volatile __near unsigned char*)0xFD5) = 0b00001000;
  2039  0028DC  0E08               	movlw	8
  2040  0028DE  6ED5               	movwf	213,c	;volatile
  2041  0028E0                     
  2042                           ;timer.c: 52:  (((*(volatile __near unsigned char*)0xFD5)) |= (1<<7));
  2043  0028E0  8ED5               	bsf	213,7,c	;volatile
  2044  0028E2  0012               	return		;funcret
  2045  0028E4                     __end_of_timerInit:
  2046                           	callstack 0
  2047                           
  2048 ;; *************** function ___fltol *****************
  2049 ;; Defined at:
  2050 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  f1              4    0[COMRAM] void 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  exp1            1    9[COMRAM] unsigned char 
  2055 ;;  sign1           1    8[COMRAM] unsigned char 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  4    0[COMRAM] long 
  2058 ;; Registers used:
  2059 ;;		wreg, status,2, status,0
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2065 ;;      Params:         4       0       0       0       0       0       0
  2066 ;;      Locals:         2       0       0       0       0       0       0
  2067 ;;      Temps:          4       0       0       0       0       0       0
  2068 ;;      Totals:        10       0       0       0       0       0       0
  2069 ;;Total ram usage:       10 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; This function calls:
  2072 ;;		Nothing
  2073 ;; This function is called by:
  2074 ;;		_contagem
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text6
  2079  001DB4                     __ptext6:
  2080                           	callstack 0
  2081  001DB4                     ___fltol:
  2082                           	callstack 27
  2083  001DB4  3403               	rlcf	(___fltol@f1+2)^0,w,c
  2084  001DB6  3404               	rlcf	(___fltol@f1+3)^0,w,c
  2085  001DB8  6E0A               	movwf	___fltol@exp1^0,c
  2086  001DBA  500A               	movf	___fltol@exp1^0,w,c
  2087  001DBC  A4D8               	btfss	status,2,c
  2088  001DBE  EFE3  F00E         	goto	u3311
  2089  001DC2  EFE5  F00E         	goto	u3310
  2090  001DC6                     u3311:
  2091  001DC6  EFEF  F00E         	goto	l3192
  2092  001DCA                     u3310:
  2093  001DCA                     l3188:
  2094  001DCA  0E00               	movlw	0
  2095  001DCC  6E01               	movwf	?___fltol^0,c
  2096  001DCE  0E00               	movlw	0
  2097  001DD0  6E02               	movwf	(?___fltol+1)^0,c
  2098  001DD2  0E00               	movlw	0
  2099  001DD4  6E03               	movwf	(?___fltol+2)^0,c
  2100  001DD6  0E00               	movlw	0
  2101  001DD8  6E04               	movwf	(?___fltol+3)^0,c
  2102  001DDA  EF5C  F00F         	goto	l712
  2103  001DDE                     l3192:
  2104  001DDE  C001  F005         	movff	___fltol@f1,??___fltol
  2105  001DE2  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  2106  001DE6  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  2107  001DEA  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  2108  001DEE  0E20               	movlw	32
  2109  001DF0  EFFF  F00E         	goto	u3320
  2110  001DF4                     u3325:
  2111  001DF4  90D8               	bcf	status,0,c
  2112  001DF6  3208               	rrcf	(??___fltol+3)^0,f,c
  2113  001DF8  3207               	rrcf	(??___fltol+2)^0,f,c
  2114  001DFA  3206               	rrcf	(??___fltol+1)^0,f,c
  2115  001DFC  3205               	rrcf	??___fltol^0,f,c
  2116  001DFE                     u3320:
  2117  001DFE  2EE8               	decfsz	wreg,f,c
  2118  001E00  EFFA  F00E         	goto	u3325
  2119  001E04  5005               	movf	??___fltol^0,w,c
  2120  001E06  6E09               	movwf	___fltol@sign1^0,c
  2121  001E08  8E03               	bsf	(___fltol@f1+2)^0,7,c
  2122  001E0A  0EFF               	movlw	255
  2123  001E0C  1601               	andwf	___fltol@f1^0,f,c
  2124  001E0E  0EFF               	movlw	255
  2125  001E10  1602               	andwf	(___fltol@f1+1)^0,f,c
  2126  001E12  0EFF               	movlw	255
  2127  001E14  1603               	andwf	(___fltol@f1+2)^0,f,c
  2128  001E16  0E00               	movlw	0
  2129  001E18  1604               	andwf	(___fltol@f1+3)^0,f,c
  2130  001E1A  0E96               	movlw	150
  2131  001E1C  5E0A               	subwf	___fltol@exp1^0,f,c
  2132  001E1E  BE0A               	btfsc	___fltol@exp1^0,7,c
  2133  001E20  EF16  F00F         	goto	u3330
  2134  001E24  EF14  F00F         	goto	u3331
  2135  001E28                     u3331:
  2136  001E28  EF2C  F00F         	goto	l3212
  2137  001E2C                     u3330:
  2138  001E2C  500A               	movf	___fltol@exp1^0,w,c
  2139  001E2E  0A80               	xorlw	128
  2140  001E30  0F97               	addlw	151
  2141  001E32  B0D8               	btfsc	status,0,c
  2142  001E34  EF1E  F00F         	goto	u3341
  2143  001E38  EF20  F00F         	goto	u3340
  2144  001E3C                     u3341:
  2145  001E3C  EF22  F00F         	goto	l3208
  2146  001E40                     u3340:
  2147  001E40  EFE5  F00E         	goto	l3188
  2148  001E44                     l3208:
  2149  001E44  90D8               	bcf	status,0,c
  2150  001E46  3204               	rrcf	(___fltol@f1+3)^0,f,c
  2151  001E48  3203               	rrcf	(___fltol@f1+2)^0,f,c
  2152  001E4A  3202               	rrcf	(___fltol@f1+1)^0,f,c
  2153  001E4C  3201               	rrcf	___fltol@f1^0,f,c
  2154  001E4E  3E0A               	incfsz	___fltol@exp1^0,f,c
  2155  001E50  EF22  F00F         	goto	l3208
  2156  001E54  EF44  F00F         	goto	l3222
  2157  001E58                     l3212:
  2158  001E58  0E1F               	movlw	31
  2159  001E5A  640A               	cpfsgt	___fltol@exp1^0,c
  2160  001E5C  EF32  F00F         	goto	u3351
  2161  001E60  EF34  F00F         	goto	u3350
  2162  001E64                     u3351:
  2163  001E64  EF3C  F00F         	goto	l3220
  2164  001E68                     u3350:
  2165  001E68  EFE5  F00E         	goto	l3188
  2166  001E6C                     l3218:
  2167  001E6C  90D8               	bcf	status,0,c
  2168  001E6E  3601               	rlcf	___fltol@f1^0,f,c
  2169  001E70  3602               	rlcf	(___fltol@f1+1)^0,f,c
  2170  001E72  3603               	rlcf	(___fltol@f1+2)^0,f,c
  2171  001E74  3604               	rlcf	(___fltol@f1+3)^0,f,c
  2172  001E76  060A               	decf	___fltol@exp1^0,f,c
  2173  001E78                     l3220:
  2174  001E78  500A               	movf	___fltol@exp1^0,w,c
  2175  001E7A  A4D8               	btfss	status,2,c
  2176  001E7C  EF42  F00F         	goto	u3361
  2177  001E80  EF44  F00F         	goto	u3360
  2178  001E84                     u3361:
  2179  001E84  EF36  F00F         	goto	l3218
  2180  001E88                     u3360:
  2181  001E88                     l3222:
  2182  001E88  5009               	movf	___fltol@sign1^0,w,c
  2183  001E8A  B4D8               	btfsc	status,2,c
  2184  001E8C  EF4A  F00F         	goto	u3371
  2185  001E90  EF4C  F00F         	goto	u3370
  2186  001E94                     u3371:
  2187  001E94  EF54  F00F         	goto	l3226
  2188  001E98                     u3370:
  2189  001E98  1E04               	comf	(___fltol@f1+3)^0,f,c
  2190  001E9A  1E03               	comf	(___fltol@f1+2)^0,f,c
  2191  001E9C  1E02               	comf	(___fltol@f1+1)^0,f,c
  2192  001E9E  6C01               	negf	___fltol@f1^0,c
  2193  001EA0  0E00               	movlw	0
  2194  001EA2  2202               	addwfc	(___fltol@f1+1)^0,f,c
  2195  001EA4  2203               	addwfc	(___fltol@f1+2)^0,f,c
  2196  001EA6  2204               	addwfc	(___fltol@f1+3)^0,f,c
  2197  001EA8                     l3226:
  2198  001EA8  C001  F001         	movff	___fltol@f1,?___fltol
  2199  001EAC  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  2200  001EB0  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  2201  001EB4  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  2202  001EB8                     l712:
  2203  001EB8  0012               	return		;funcret
  2204  001EBA                     __end_of___fltol:
  2205                           	callstack 0
  2206                           
  2207 ;; *************** function ___almod *****************
  2208 ;; Defined at:
  2209 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\almod.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  dividend        4   14[COMRAM] long 
  2212 ;;  divisor         4   18[COMRAM] long 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  sign            1   23[COMRAM] unsigned char 
  2215 ;;  counter         1   22[COMRAM] unsigned char 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  4   14[COMRAM] long 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2, status,0
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2225 ;;      Params:         8       0       0       0       0       0       0
  2226 ;;      Locals:         2       0       0       0       0       0       0
  2227 ;;      Temps:          0       0       0       0       0       0       0
  2228 ;;      Totals:        10       0       0       0       0       0       0
  2229 ;;Total ram usage:       10 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; This function calls:
  2232 ;;		Nothing
  2233 ;; This function is called by:
  2234 ;;		_contagem
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text7
  2239  001FBE                     __ptext7:
  2240                           	callstack 0
  2241  001FBE                     ___almod:
  2242                           	callstack 27
  2243  001FBE  0E00               	movlw	0
  2244  001FC0  6E18               	movwf	___almod@sign^0,c
  2245  001FC2  BE12               	btfsc	(___almod@dividend+3)^0,7,c
  2246  001FC4  EFE8  F00F         	goto	u2690
  2247  001FC8  EFE6  F00F         	goto	u2691
  2248  001FCC                     u2691:
  2249  001FCC  EFF2  F00F         	goto	l2854
  2250  001FD0                     u2690:
  2251  001FD0  1E12               	comf	(___almod@dividend+3)^0,f,c
  2252  001FD2  1E11               	comf	(___almod@dividend+2)^0,f,c
  2253  001FD4  1E10               	comf	(___almod@dividend+1)^0,f,c
  2254  001FD6  6C0F               	negf	___almod@dividend^0,c
  2255  001FD8  0E00               	movlw	0
  2256  001FDA  2210               	addwfc	(___almod@dividend+1)^0,f,c
  2257  001FDC  2211               	addwfc	(___almod@dividend+2)^0,f,c
  2258  001FDE  2212               	addwfc	(___almod@dividend+3)^0,f,c
  2259  001FE0  0E01               	movlw	1
  2260  001FE2  6E18               	movwf	___almod@sign^0,c
  2261  001FE4                     l2854:
  2262  001FE4  BE16               	btfsc	(___almod@divisor+3)^0,7,c
  2263  001FE6  EFF9  F00F         	goto	u2700
  2264  001FEA  EFF7  F00F         	goto	u2701
  2265  001FEE                     u2701:
  2266  001FEE  EF01  F010         	goto	l2858
  2267  001FF2                     u2700:
  2268  001FF2  1E16               	comf	(___almod@divisor+3)^0,f,c
  2269  001FF4  1E15               	comf	(___almod@divisor+2)^0,f,c
  2270  001FF6  1E14               	comf	(___almod@divisor+1)^0,f,c
  2271  001FF8  6C13               	negf	___almod@divisor^0,c
  2272  001FFA  0E00               	movlw	0
  2273  001FFC  2214               	addwfc	(___almod@divisor+1)^0,f,c
  2274  001FFE  2215               	addwfc	(___almod@divisor+2)^0,f,c
  2275  002000  2216               	addwfc	(___almod@divisor+3)^0,f,c
  2276  002002                     l2858:
  2277  002002  5013               	movf	___almod@divisor^0,w,c
  2278  002004  1014               	iorwf	(___almod@divisor+1)^0,w,c
  2279  002006  1015               	iorwf	(___almod@divisor+2)^0,w,c
  2280  002008  1016               	iorwf	(___almod@divisor+3)^0,w,c
  2281  00200A  B4D8               	btfsc	status,2,c
  2282  00200C  EF0A  F010         	goto	u2711
  2283  002010  EF0C  F010         	goto	u2710
  2284  002014                     u2711:
  2285  002014  EF3C  F010         	goto	l2874
  2286  002018                     u2710:
  2287  002018  0E01               	movlw	1
  2288  00201A  6E17               	movwf	___almod@counter^0,c
  2289  00201C  EF16  F010         	goto	l2864
  2290  002020                     l2862:
  2291  002020  90D8               	bcf	status,0,c
  2292  002022  3613               	rlcf	___almod@divisor^0,f,c
  2293  002024  3614               	rlcf	(___almod@divisor+1)^0,f,c
  2294  002026  3615               	rlcf	(___almod@divisor+2)^0,f,c
  2295  002028  3616               	rlcf	(___almod@divisor+3)^0,f,c
  2296  00202A  2A17               	incf	___almod@counter^0,f,c
  2297  00202C                     l2864:
  2298  00202C  AE16               	btfss	(___almod@divisor+3)^0,7,c
  2299  00202E  EF1B  F010         	goto	u2721
  2300  002032  EF1D  F010         	goto	u2720
  2301  002036                     u2721:
  2302  002036  EF10  F010         	goto	l2862
  2303  00203A                     u2720:
  2304  00203A                     l2866:
  2305  00203A  5013               	movf	___almod@divisor^0,w,c
  2306  00203C  5C0F               	subwf	___almod@dividend^0,w,c
  2307  00203E  5014               	movf	(___almod@divisor+1)^0,w,c
  2308  002040  5810               	subwfb	(___almod@dividend+1)^0,w,c
  2309  002042  5015               	movf	(___almod@divisor+2)^0,w,c
  2310  002044  5811               	subwfb	(___almod@dividend+2)^0,w,c
  2311  002046  5016               	movf	(___almod@divisor+3)^0,w,c
  2312  002048  5812               	subwfb	(___almod@dividend+3)^0,w,c
  2313  00204A  A0D8               	btfss	status,0,c
  2314  00204C  EF2A  F010         	goto	u2731
  2315  002050  EF2C  F010         	goto	u2730
  2316  002054                     u2731:
  2317  002054  EF34  F010         	goto	l2870
  2318  002058                     u2730:
  2319  002058  5013               	movf	___almod@divisor^0,w,c
  2320  00205A  5E0F               	subwf	___almod@dividend^0,f,c
  2321  00205C  5014               	movf	(___almod@divisor+1)^0,w,c
  2322  00205E  5A10               	subwfb	(___almod@dividend+1)^0,f,c
  2323  002060  5015               	movf	(___almod@divisor+2)^0,w,c
  2324  002062  5A11               	subwfb	(___almod@dividend+2)^0,f,c
  2325  002064  5016               	movf	(___almod@divisor+3)^0,w,c
  2326  002066  5A12               	subwfb	(___almod@dividend+3)^0,f,c
  2327  002068                     l2870:
  2328  002068  90D8               	bcf	status,0,c
  2329  00206A  3216               	rrcf	(___almod@divisor+3)^0,f,c
  2330  00206C  3215               	rrcf	(___almod@divisor+2)^0,f,c
  2331  00206E  3214               	rrcf	(___almod@divisor+1)^0,f,c
  2332  002070  3213               	rrcf	___almod@divisor^0,f,c
  2333  002072  2E17               	decfsz	___almod@counter^0,f,c
  2334  002074  EF1D  F010         	goto	l2866
  2335  002078                     l2874:
  2336  002078  5018               	movf	___almod@sign^0,w,c
  2337  00207A  B4D8               	btfsc	status,2,c
  2338  00207C  EF42  F010         	goto	u2741
  2339  002080  EF44  F010         	goto	u2740
  2340  002084                     u2741:
  2341  002084  EF4C  F010         	goto	l2878
  2342  002088                     u2740:
  2343  002088  1E12               	comf	(___almod@dividend+3)^0,f,c
  2344  00208A  1E11               	comf	(___almod@dividend+2)^0,f,c
  2345  00208C  1E10               	comf	(___almod@dividend+1)^0,f,c
  2346  00208E  6C0F               	negf	___almod@dividend^0,c
  2347  002090  0E00               	movlw	0
  2348  002092  2210               	addwfc	(___almod@dividend+1)^0,f,c
  2349  002094  2211               	addwfc	(___almod@dividend+2)^0,f,c
  2350  002096  2212               	addwfc	(___almod@dividend+3)^0,f,c
  2351  002098                     l2878:
  2352  002098  C00F  F00F         	movff	___almod@dividend,?___almod
  2353  00209C  C010  F010         	movff	___almod@dividend+1,?___almod+1
  2354  0020A0  C011  F011         	movff	___almod@dividend+2,?___almod+2
  2355  0020A4  C012  F012         	movff	___almod@dividend+3,?___almod+3
  2356  0020A8  0012               	return		;funcret
  2357  0020AA                     __end_of___almod:
  2358                           	callstack 0
  2359                           
  2360 ;; *************** function ___aldiv *****************
  2361 ;; Defined at:
  2362 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  dividend        4    0[COMRAM] long 
  2365 ;;  divisor         4    4[COMRAM] long 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;  quotient        4   10[COMRAM] long 
  2368 ;;  sign            1    9[COMRAM] unsigned char 
  2369 ;;  counter         1    8[COMRAM] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  4    0[COMRAM] long 
  2372 ;; Registers used:
  2373 ;;		wreg, status,2, status,0
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2379 ;;      Params:         8       0       0       0       0       0       0
  2380 ;;      Locals:         6       0       0       0       0       0       0
  2381 ;;      Temps:          0       0       0       0       0       0       0
  2382 ;;      Totals:        14       0       0       0       0       0       0
  2383 ;;Total ram usage:       14 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; This function calls:
  2386 ;;		Nothing
  2387 ;; This function is called by:
  2388 ;;		_contagem
  2389 ;;		_pwmFrequency
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text8
  2394  001CA8                     __ptext8:
  2395                           	callstack 0
  2396  001CA8                     ___aldiv:
  2397                           	callstack 27
  2398  001CA8  0E00               	movlw	0
  2399  001CAA  6E0A               	movwf	___aldiv@sign^0,c
  2400  001CAC  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2401  001CAE  EF5D  F00E         	goto	u2630
  2402  001CB2  EF5B  F00E         	goto	u2631
  2403  001CB6                     u2631:
  2404  001CB6  EF67  F00E         	goto	l2810
  2405  001CBA                     u2630:
  2406  001CBA  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2407  001CBC  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2408  001CBE  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2409  001CC0  6C05               	negf	___aldiv@divisor^0,c
  2410  001CC2  0E00               	movlw	0
  2411  001CC4  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2412  001CC6  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2413  001CC8  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2414  001CCA  0E01               	movlw	1
  2415  001CCC  6E0A               	movwf	___aldiv@sign^0,c
  2416  001CCE                     l2810:
  2417  001CCE  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2418  001CD0  EF6E  F00E         	goto	u2640
  2419  001CD4  EF6C  F00E         	goto	u2641
  2420  001CD8                     u2641:
  2421  001CD8  EF78  F00E         	goto	l2816
  2422  001CDC                     u2640:
  2423  001CDC  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2424  001CDE  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2425  001CE0  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2426  001CE2  6C01               	negf	___aldiv@dividend^0,c
  2427  001CE4  0E00               	movlw	0
  2428  001CE6  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2429  001CE8  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2430  001CEA  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2431  001CEC  0E01               	movlw	1
  2432  001CEE  1A0A               	xorwf	___aldiv@sign^0,f,c
  2433  001CF0                     l2816:
  2434  001CF0  0E00               	movlw	0
  2435  001CF2  6E0B               	movwf	___aldiv@quotient^0,c
  2436  001CF4  0E00               	movlw	0
  2437  001CF6  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2438  001CF8  0E00               	movlw	0
  2439  001CFA  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2440  001CFC  0E00               	movlw	0
  2441  001CFE  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2442  001D00  5005               	movf	___aldiv@divisor^0,w,c
  2443  001D02  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2444  001D04  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2445  001D06  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2446  001D08  B4D8               	btfsc	status,2,c
  2447  001D0A  EF89  F00E         	goto	u2651
  2448  001D0E  EF8B  F00E         	goto	u2650
  2449  001D12                     u2651:
  2450  001D12  EFC1  F00E         	goto	l2838
  2451  001D16                     u2650:
  2452  001D16  0E01               	movlw	1
  2453  001D18  6E09               	movwf	___aldiv@counter^0,c
  2454  001D1A  EF95  F00E         	goto	l2824
  2455  001D1E                     l2822:
  2456  001D1E  90D8               	bcf	status,0,c
  2457  001D20  3605               	rlcf	___aldiv@divisor^0,f,c
  2458  001D22  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2459  001D24  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2460  001D26  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2461  001D28  2A09               	incf	___aldiv@counter^0,f,c
  2462  001D2A                     l2824:
  2463  001D2A  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2464  001D2C  EF9A  F00E         	goto	u2661
  2465  001D30  EF9C  F00E         	goto	u2660
  2466  001D34                     u2661:
  2467  001D34  EF8F  F00E         	goto	l2822
  2468  001D38                     u2660:
  2469  001D38                     l2826:
  2470  001D38  90D8               	bcf	status,0,c
  2471  001D3A  360B               	rlcf	___aldiv@quotient^0,f,c
  2472  001D3C  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2473  001D3E  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2474  001D40  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2475  001D42  5005               	movf	___aldiv@divisor^0,w,c
  2476  001D44  5C01               	subwf	___aldiv@dividend^0,w,c
  2477  001D46  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2478  001D48  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2479  001D4A  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2480  001D4C  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2481  001D4E  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2482  001D50  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2483  001D52  A0D8               	btfss	status,0,c
  2484  001D54  EFAE  F00E         	goto	u2671
  2485  001D58  EFB0  F00E         	goto	u2670
  2486  001D5C                     u2671:
  2487  001D5C  EFB9  F00E         	goto	l2834
  2488  001D60                     u2670:
  2489  001D60  5005               	movf	___aldiv@divisor^0,w,c
  2490  001D62  5E01               	subwf	___aldiv@dividend^0,f,c
  2491  001D64  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2492  001D66  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2493  001D68  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2494  001D6A  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2495  001D6C  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2496  001D6E  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2497  001D70  800B               	bsf	___aldiv@quotient^0,0,c
  2498  001D72                     l2834:
  2499  001D72  90D8               	bcf	status,0,c
  2500  001D74  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2501  001D76  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2502  001D78  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2503  001D7A  3205               	rrcf	___aldiv@divisor^0,f,c
  2504  001D7C  2E09               	decfsz	___aldiv@counter^0,f,c
  2505  001D7E  EF9C  F00E         	goto	l2826
  2506  001D82                     l2838:
  2507  001D82  500A               	movf	___aldiv@sign^0,w,c
  2508  001D84  B4D8               	btfsc	status,2,c
  2509  001D86  EFC7  F00E         	goto	u2681
  2510  001D8A  EFC9  F00E         	goto	u2680
  2511  001D8E                     u2681:
  2512  001D8E  EFD1  F00E         	goto	l2842
  2513  001D92                     u2680:
  2514  001D92  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2515  001D94  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2516  001D96  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2517  001D98  6C0B               	negf	___aldiv@quotient^0,c
  2518  001D9A  0E00               	movlw	0
  2519  001D9C  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2520  001D9E  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2521  001DA0  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2522  001DA2                     l2842:
  2523  001DA2  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2524  001DA6  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2525  001DAA  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2526  001DAE  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2527  001DB2  0012               	return		;funcret
  2528  001DB4                     __end_of___aldiv:
  2529                           	callstack 0
  2530                           
  2531 ;; *************** function _standBy *****************
  2532 ;; Defined at:
  2533 ;;		line 11 in file "funcoes.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;		None
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;  tecla           2   70[COMRAM] unsigned int 
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1    wreg      void 
  2540 ;; Registers used:
  2541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2547 ;;      Params:         0       0       0       0       0       0       0
  2548 ;;      Locals:         2       0       0       0       0       0       0
  2549 ;;      Temps:          0       0       0       0       0       0       0
  2550 ;;      Totals:         2       0       0       0       0       0       0
  2551 ;;Total ram usage:        2 bytes
  2552 ;; Hardware stack levels used: 1
  2553 ;; Hardware stack levels required when called: 5
  2554 ;; This function calls:
  2555 ;;		_kpDebounce
  2556 ;;		_kpInit
  2557 ;;		_kpRead
  2558 ;;		_lcdCommand
  2559 ;;		_lcdInit
  2560 ;;		_lcdString
  2561 ;;		_menuLigando
  2562 ;;		_ssdDigit
  2563 ;;		_ssdInit
  2564 ;;		_ssdUpdate
  2565 ;; This function is called by:
  2566 ;;		_menu
  2567 ;;		_main
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text9
  2572  002240                     __ptext9:
  2573                           	callstack 0
  2574  002240                     _standBy:
  2575                           	callstack 25
  2576  002240                     
  2577                           ;funcoes.c: 12:     kpInit();
  2578  002240  EC64  F014         	call	_kpInit	;wreg free
  2579                           
  2580                           ;funcoes.c: 13:     lcdInit();
  2581  002244  EC18  F012         	call	_lcdInit	;wreg free
  2582  002248                     
  2583                           ;funcoes.c: 14:     unsigned int tecla = 0;
  2584  002248  0E00               	movlw	0
  2585  00224A  6E48               	movwf	(standBy@tecla+1)^0,c
  2586  00224C  0E00               	movlw	0
  2587  00224E  6E47               	movwf	standBy@tecla^0,c
  2588  002250                     
  2589                           ;funcoes.c: 15:     lcdCommand(0x80 + 4);
  2590  002250  0E84               	movlw	132
  2591  002252  ECD9  F011         	call	_lcdCommand
  2592  002256                     
  2593                           ;funcoes.c: 16:     lcdString("Stand By");
  2594  002256  0E7F               	movlw	low STR_1
  2595  002258  6E09               	movwf	lcdString@msg^0,c
  2596  00225A  0E06               	movlw	high STR_1
  2597  00225C  6E0A               	movwf	(lcdString@msg+1)^0,c
  2598  00225E  EC87  F013         	call	_lcdString	;wreg free
  2599  002262                     
  2600                           ;funcoes.c: 17:     lcdCommand(0xC0);
  2601  002262  0EC0               	movlw	192
  2602  002264  ECD9  F011         	call	_lcdCommand
  2603  002268                     
  2604                           ;funcoes.c: 18:     lcdString("Aperte a tecla 9");
  2605  002268  0E11               	movlw	low STR_2
  2606  00226A  6E09               	movwf	lcdString@msg^0,c
  2607  00226C  0E06               	movlw	high STR_2
  2608  00226E  6E0A               	movwf	(lcdString@msg+1)^0,c
  2609  002270  EC87  F013         	call	_lcdString	;wreg free
  2610  002274                     
  2611                           ;funcoes.c: 19:     lcdCommand(0x90 + 2);
  2612  002274  0E92               	movlw	146
  2613  002276  ECD9  F011         	call	_lcdCommand
  2614  00227A                     
  2615                           ;funcoes.c: 20:     lcdString("para iniciar");
  2616  00227A  0E32               	movlw	low STR_3
  2617  00227C  6E09               	movwf	lcdString@msg^0,c
  2618  00227E  0E06               	movlw	high STR_3
  2619  002280  6E0A               	movwf	(lcdString@msg+1)^0,c
  2620  002282  EC87  F013         	call	_lcdString	;wreg free
  2621  002286                     l3400:
  2622                           
  2623                           ;funcoes.c: 22:         ssdInit();
  2624  002286  EC5C  F013         	call	_ssdInit	;wreg free
  2625  00228A                     
  2626                           ;funcoes.c: 23:         ssdDigit(0,0);
  2627  00228A  0E00               	movlw	0
  2628  00228C  6E19               	movwf	ssdDigit@pos^0,c
  2629  00228E  0E00               	movlw	0
  2630  002290  EC30  F013         	call	_ssdDigit
  2631  002294                     
  2632                           ;funcoes.c: 24:         ssdDigit(0,1);
  2633  002294  0E01               	movlw	1
  2634  002296  6E19               	movwf	ssdDigit@pos^0,c
  2635  002298  0E00               	movlw	0
  2636  00229A  EC30  F013         	call	_ssdDigit
  2637  00229E                     
  2638                           ;funcoes.c: 25:         ssdDigit(0,2);
  2639  00229E  0E02               	movlw	2
  2640  0022A0  6E19               	movwf	ssdDigit@pos^0,c
  2641  0022A2  0E00               	movlw	0
  2642  0022A4  EC30  F013         	call	_ssdDigit
  2643  0022A8                     
  2644                           ;funcoes.c: 26:         ssdDigit(0,3);
  2645  0022A8  0E03               	movlw	3
  2646  0022AA  6E19               	movwf	ssdDigit@pos^0,c
  2647  0022AC  0E00               	movlw	0
  2648  0022AE  EC30  F013         	call	_ssdDigit
  2649  0022B2                     
  2650                           ;funcoes.c: 27:         ssdUpdate();
  2651  0022B2  ECAC  F00D         	call	_ssdUpdate	;wreg free
  2652  0022B6                     
  2653                           ;funcoes.c: 28:         kpDebounce();
  2654  0022B6  ECEF  F00C         	call	_kpDebounce	;wreg free
  2655  0022BA                     
  2656                           ;funcoes.c: 29:         if (tecla != kpRead()) {
  2657  0022BA  EC69  F014         	call	_kpRead	;wreg free
  2658  0022BE  5047               	movf	standBy@tecla^0,w,c
  2659  0022C0  1801               	xorwf	?_kpRead^0,w,c
  2660  0022C2  E109               	bnz	u3590
  2661  0022C4  5048               	movf	(standBy@tecla+1)^0,w,c
  2662  0022C6  1802               	xorwf	(?_kpRead+1)^0,w,c
  2663  0022C8  B4D8               	btfsc	status,2,c
  2664  0022CA  EF69  F011         	goto	u3591
  2665  0022CE  EF6B  F011         	goto	u3590
  2666  0022D2                     u3591:
  2667  0022D2  EF43  F011         	goto	l3400
  2668  0022D6                     u3590:
  2669  0022D6                     
  2670                           ;funcoes.c: 30:             tecla = kpRead();
  2671  0022D6  EC69  F014         	call	_kpRead	;wreg free
  2672  0022DA  C001  F047         	movff	?_kpRead,standBy@tecla
  2673  0022DE  C002  F048         	movff	?_kpRead+1,standBy@tecla+1
  2674  0022E2                     
  2675                           ;funcoes.c: 31:             if (((tecla) & (1<<(9)))) {
  2676  0022E2  A248               	btfss	(standBy@tecla+1)^0,1,c
  2677  0022E4  EF76  F011         	goto	u3601
  2678  0022E8  EF78  F011         	goto	u3600
  2679  0022EC                     u3601:
  2680  0022EC  EF43  F011         	goto	l3400
  2681  0022F0                     u3600:
  2682  0022F0                     
  2683                           ;funcoes.c: 32:                 lcdCommand(0x01);
  2684  0022F0  0E01               	movlw	1
  2685  0022F2  ECD9  F011         	call	_lcdCommand
  2686                           
  2687                           ;funcoes.c: 33:                 lcdCommand(0x40);
  2688  0022F6  0E40               	movlw	64
  2689  0022F8  ECD9  F011         	call	_lcdCommand
  2690  0022FC                     
  2691                           ;funcoes.c: 34:                 menuLigando();
  2692  0022FC  EC1F  F00C         	call	_menuLigando	;wreg free
  2693  002300  0012               	return		;funcret
  2694  002302                     __end_of_standBy:
  2695                           	callstack 0
  2696                           
  2697 ;; *************** function _ssdUpdate *****************
  2698 ;; Defined at:
  2699 ;;		line 54 in file "ssd.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;		None
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;		None
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      void 
  2706 ;; Registers used:
  2707 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2713 ;;      Params:         0       0       0       0       0       0       0
  2714 ;;      Locals:         0       0       0       0       0       0       0
  2715 ;;      Temps:          2       0       0       0       0       0       0
  2716 ;;      Totals:         2       0       0       0       0       0       0
  2717 ;;Total ram usage:        2 bytes
  2718 ;; Hardware stack levels used: 1
  2719 ;; Hardware stack levels required when called: 1
  2720 ;; This function calls:
  2721 ;;		_digitalWrite
  2722 ;; This function is called by:
  2723 ;;		_standBy
  2724 ;;		_menu
  2725 ;;		_contagem
  2726 ;;		_timer
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text10
  2731  001B58                     __ptext10:
  2732                           	callstack 0
  2733  001B58                     _ssdUpdate:
  2734                           	callstack 28
  2735  001B58                     
  2736                           ;ssd.c: 58:     TRISD= 0x00;
  2737  001B58  0E00               	movlw	0
  2738  001B5A  6E95               	movwf	149,c	;volatile
  2739  001B5C                     
  2740                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  2741  001B5C  0E00               	movlw	0
  2742  001B5E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2743  001B60  0E02               	movlw	2
  2744  001B62  6E01               	movwf	digitalWrite@pin^0,c
  2745  001B64  0E00               	movlw	0
  2746  001B66  6E04               	movwf	(digitalWrite@value+1)^0,c
  2747  001B68  0E00               	movlw	0
  2748  001B6A  6E03               	movwf	digitalWrite@value^0,c
  2749  001B6C  EC26  F00A         	call	_digitalWrite	;wreg free
  2750  001B70                     
  2751                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  2752  001B70  0E00               	movlw	0
  2753  001B72  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2754  001B74  0E03               	movlw	3
  2755  001B76  6E01               	movwf	digitalWrite@pin^0,c
  2756  001B78  0E00               	movlw	0
  2757  001B7A  6E04               	movwf	(digitalWrite@value+1)^0,c
  2758  001B7C  0E00               	movlw	0
  2759  001B7E  6E03               	movwf	digitalWrite@value^0,c
  2760  001B80  EC26  F00A         	call	_digitalWrite	;wreg free
  2761  001B84                     
  2762                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  2763  001B84  0E00               	movlw	0
  2764  001B86  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2765  001B88  0E04               	movlw	4
  2766  001B8A  6E01               	movwf	digitalWrite@pin^0,c
  2767  001B8C  0E00               	movlw	0
  2768  001B8E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2769  001B90  0E00               	movlw	0
  2770  001B92  6E03               	movwf	digitalWrite@value^0,c
  2771  001B94  EC26  F00A         	call	_digitalWrite	;wreg free
  2772  001B98                     
  2773                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  2774  001B98  0E00               	movlw	0
  2775  001B9A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2776  001B9C  0E05               	movlw	5
  2777  001B9E  6E01               	movwf	digitalWrite@pin^0,c
  2778  001BA0  0E00               	movlw	0
  2779  001BA2  6E04               	movwf	(digitalWrite@value+1)^0,c
  2780  001BA4  0E00               	movlw	0
  2781  001BA6  6E03               	movwf	digitalWrite@value^0,c
  2782  001BA8  EC26  F00A         	call	_digitalWrite	;wreg free
  2783                           
  2784                           ;ssd.c: 66:     PORTD = 0x00;
  2785  001BAC  0E00               	movlw	0
  2786  001BAE  6E83               	movwf	131,c	;volatile
  2787                           
  2788                           ;ssd.c: 69:     switch (display)
  2789  001BB0  EF36  F00E         	goto	l2760
  2790  001BB4                     l2732:
  2791                           
  2792                           ;ssd.c: 72:             PORTD = valor[v0];
  2793  001BB4  0E01               	movlw	low _valor@ssd$F170
  2794  001BB6  2468               	addwf	_v0^0,w,c
  2795  001BB8  6EF6               	movwf	tblptrl,c
  2796  001BBA  6AF7               	clrf	tblptrh,c
  2797  001BBC  0E06               	movlw	high _valor@ssd$F170
  2798  001BBE  22F7               	addwfc	tblptrh,f,c
  2799  001BC0                     	if	0	;There are less than 3 active tblptr bytes
  2800  001BC0                     	endif
  2801  001BC0  0008               	tblrd		*
  2802  001BC2  CFF5 FF83          	movff	tablat,3971	;volatile
  2803  001BC6                     
  2804                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  2805  001BC6  0E00               	movlw	0
  2806  001BC8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2807  001BCA  0E02               	movlw	2
  2808  001BCC  6E01               	movwf	digitalWrite@pin^0,c
  2809  001BCE  0E00               	movlw	0
  2810  001BD0  6E04               	movwf	(digitalWrite@value+1)^0,c
  2811  001BD2  0E01               	movlw	1
  2812  001BD4  6E03               	movwf	digitalWrite@value^0,c
  2813  001BD6  EC26  F00A         	call	_digitalWrite	;wreg free
  2814  001BDA                     
  2815                           ;ssd.c: 74:             display = 1;
  2816  001BDA  0E01               	movlw	1
  2817  001BDC  6E69               	movwf	_display^0,c
  2818                           
  2819                           ;ssd.c: 75:             break;
  2820  001BDE  EF53  F00E         	goto	l192
  2821  001BE2                     l2738:
  2822                           
  2823                           ;ssd.c: 78:             PORTD = valor[v1];
  2824  001BE2  0E01               	movlw	low _valor@ssd$F170
  2825  001BE4  2467               	addwf	_v1^0,w,c
  2826  001BE6  6EF6               	movwf	tblptrl,c
  2827  001BE8  6AF7               	clrf	tblptrh,c
  2828  001BEA  0E06               	movlw	high _valor@ssd$F170
  2829  001BEC  22F7               	addwfc	tblptrh,f,c
  2830  001BEE                     	if	0	;There are less than 3 active tblptr bytes
  2831  001BEE                     	endif
  2832  001BEE  0008               	tblrd		*
  2833  001BF0  CFF5 FF83          	movff	tablat,3971	;volatile
  2834  001BF4                     
  2835                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  2836  001BF4  0E00               	movlw	0
  2837  001BF6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2838  001BF8  0E03               	movlw	3
  2839  001BFA  6E01               	movwf	digitalWrite@pin^0,c
  2840  001BFC  0E00               	movlw	0
  2841  001BFE  6E04               	movwf	(digitalWrite@value+1)^0,c
  2842  001C00  0E01               	movlw	1
  2843  001C02  6E03               	movwf	digitalWrite@value^0,c
  2844  001C04  EC26  F00A         	call	_digitalWrite	;wreg free
  2845  001C08                     
  2846                           ;ssd.c: 80:             display = 2;
  2847  001C08  0E02               	movlw	2
  2848  001C0A  6E69               	movwf	_display^0,c
  2849                           
  2850                           ;ssd.c: 81:             break;
  2851  001C0C  EF53  F00E         	goto	l192
  2852  001C10                     l2744:
  2853                           
  2854                           ;ssd.c: 84:             PORTD = valor[v2];
  2855  001C10  0E01               	movlw	low _valor@ssd$F170
  2856  001C12  2466               	addwf	_v2^0,w,c
  2857  001C14  6EF6               	movwf	tblptrl,c
  2858  001C16  6AF7               	clrf	tblptrh,c
  2859  001C18  0E06               	movlw	high _valor@ssd$F170
  2860  001C1A  22F7               	addwfc	tblptrh,f,c
  2861  001C1C                     	if	0	;There are less than 3 active tblptr bytes
  2862  001C1C                     	endif
  2863  001C1C  0008               	tblrd		*
  2864  001C1E  CFF5 FF83          	movff	tablat,3971	;volatile
  2865  001C22                     
  2866                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  2867  001C22  0E00               	movlw	0
  2868  001C24  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2869  001C26  0E04               	movlw	4
  2870  001C28  6E01               	movwf	digitalWrite@pin^0,c
  2871  001C2A  0E00               	movlw	0
  2872  001C2C  6E04               	movwf	(digitalWrite@value+1)^0,c
  2873  001C2E  0E01               	movlw	1
  2874  001C30  6E03               	movwf	digitalWrite@value^0,c
  2875  001C32  EC26  F00A         	call	_digitalWrite	;wreg free
  2876  001C36                     
  2877                           ;ssd.c: 86:             display = 3;
  2878  001C36  0E03               	movlw	3
  2879  001C38  6E69               	movwf	_display^0,c
  2880                           
  2881                           ;ssd.c: 87:             break;
  2882  001C3A  EF53  F00E         	goto	l192
  2883  001C3E                     l2750:
  2884                           
  2885                           ;ssd.c: 90:             PORTD = valor[v3];
  2886  001C3E  0E01               	movlw	low _valor@ssd$F170
  2887  001C40  2465               	addwf	_v3^0,w,c
  2888  001C42  6EF6               	movwf	tblptrl,c
  2889  001C44  6AF7               	clrf	tblptrh,c
  2890  001C46  0E06               	movlw	high _valor@ssd$F170
  2891  001C48  22F7               	addwfc	tblptrh,f,c
  2892  001C4A                     	if	0	;There are less than 3 active tblptr bytes
  2893  001C4A                     	endif
  2894  001C4A  0008               	tblrd		*
  2895  001C4C  CFF5 FF83          	movff	tablat,3971	;volatile
  2896  001C50                     
  2897                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  2898  001C50  0E00               	movlw	0
  2899  001C52  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2900  001C54  0E05               	movlw	5
  2901  001C56  6E01               	movwf	digitalWrite@pin^0,c
  2902  001C58  0E00               	movlw	0
  2903  001C5A  6E04               	movwf	(digitalWrite@value+1)^0,c
  2904  001C5C  0E01               	movlw	1
  2905  001C5E  6E03               	movwf	digitalWrite@value^0,c
  2906  001C60  EC26  F00A         	call	_digitalWrite	;wreg free
  2907  001C64                     l2754:
  2908                           
  2909                           ;ssd.c: 92:             display = 0;
  2910  001C64  0E00               	movlw	0
  2911  001C66  6E69               	movwf	_display^0,c
  2912                           
  2913                           ;ssd.c: 93:             break;
  2914  001C68  EF53  F00E         	goto	l192
  2915  001C6C                     l2760:
  2916  001C6C  5069               	movf	_display^0,w,c
  2917  001C6E  6E07               	movwf	??_ssdUpdate^0,c
  2918  001C70  6A08               	clrf	(??_ssdUpdate+1)^0,c
  2919                           
  2920                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2921                           ; Switch size 1, requested type "simple"
  2922                           ; Number of cases is 1, Range of values is 0 to 0
  2923                           ; switch strategies available:
  2924                           ; Name         Instructions Cycles
  2925                           ; simple_byte            4     3 (average)
  2926                           ;	Chosen strategy is simple_byte
  2927  001C72  5008               	movf	(??_ssdUpdate+1)^0,w,c
  2928  001C74  0A00               	xorlw	0	; case 0
  2929  001C76  B4D8               	btfsc	status,2,c
  2930  001C78  EF40  F00E         	goto	l3676
  2931  001C7C  EF32  F00E         	goto	l2754
  2932  001C80                     l3676:
  2933                           
  2934                           ; Switch size 1, requested type "simple"
  2935                           ; Number of cases is 4, Range of values is 0 to 3
  2936                           ; switch strategies available:
  2937                           ; Name         Instructions Cycles
  2938                           ; simple_byte           13     7 (average)
  2939                           ;	Chosen strategy is simple_byte
  2940  001C80  5007               	movf	??_ssdUpdate^0,w,c
  2941  001C82  0A00               	xorlw	0	; case 0
  2942  001C84  B4D8               	btfsc	status,2,c
  2943  001C86  EFDA  F00D         	goto	l2732
  2944  001C8A  0A01               	xorlw	1	; case 1
  2945  001C8C  B4D8               	btfsc	status,2,c
  2946  001C8E  EFF1  F00D         	goto	l2738
  2947  001C92  0A03               	xorlw	3	; case 2
  2948  001C94  B4D8               	btfsc	status,2,c
  2949  001C96  EF08  F00E         	goto	l2744
  2950  001C9A  0A01               	xorlw	1	; case 3
  2951  001C9C  B4D8               	btfsc	status,2,c
  2952  001C9E  EF1F  F00E         	goto	l2750
  2953  001CA2  EF32  F00E         	goto	l2754
  2954  001CA6                     l192:
  2955  001CA6  0012               	return		;funcret
  2956  001CA8                     __end_of_ssdUpdate:
  2957                           	callstack 0
  2958                           
  2959 ;; *************** function _ssdInit *****************
  2960 ;; Defined at:
  2961 ;;		line 101 in file "ssd.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2, status,0, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2975 ;;      Params:         0       0       0       0       0       0       0
  2976 ;;      Locals:         0       0       0       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0       0
  2978 ;;      Totals:         0       0       0       0       0       0       0
  2979 ;;Total ram usage:        0 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 1
  2982 ;; This function calls:
  2983 ;;		_pinMode
  2984 ;; This function is called by:
  2985 ;;		_standBy
  2986 ;;		_menu
  2987 ;;		_timer
  2988 ;;		_main
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           	psect	text11
  2993  0026B8                     __ptext11:
  2994                           	callstack 0
  2995  0026B8                     _ssdInit:
  2996                           	callstack 28
  2997  0026B8                     
  2998                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
  2999  0026B8  0E00               	movlw	0
  3000  0026BA  6E02               	movwf	(pinMode@pin+1)^0,c
  3001  0026BC  0E02               	movlw	2
  3002  0026BE  6E01               	movwf	pinMode@pin^0,c
  3003  0026C0  0E00               	movlw	0
  3004  0026C2  6E04               	movwf	(pinMode@type+1)^0,c
  3005  0026C4  0E00               	movlw	0
  3006  0026C6  6E03               	movwf	pinMode@type^0,c
  3007  0026C8  ECFF  F008         	call	_pinMode	;wreg free
  3008                           
  3009                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
  3010  0026CC  0E00               	movlw	0
  3011  0026CE  6E02               	movwf	(pinMode@pin+1)^0,c
  3012  0026D0  0E03               	movlw	3
  3013  0026D2  6E01               	movwf	pinMode@pin^0,c
  3014  0026D4  0E00               	movlw	0
  3015  0026D6  6E04               	movwf	(pinMode@type+1)^0,c
  3016  0026D8  0E00               	movlw	0
  3017  0026DA  6E03               	movwf	pinMode@type^0,c
  3018  0026DC  ECFF  F008         	call	_pinMode	;wreg free
  3019                           
  3020                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
  3021  0026E0  0E00               	movlw	0
  3022  0026E2  6E02               	movwf	(pinMode@pin+1)^0,c
  3023  0026E4  0E04               	movlw	4
  3024  0026E6  6E01               	movwf	pinMode@pin^0,c
  3025  0026E8  0E00               	movlw	0
  3026  0026EA  6E04               	movwf	(pinMode@type+1)^0,c
  3027  0026EC  0E00               	movlw	0
  3028  0026EE  6E03               	movwf	pinMode@type^0,c
  3029  0026F0  ECFF  F008         	call	_pinMode	;wreg free
  3030                           
  3031                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
  3032  0026F4  0E00               	movlw	0
  3033  0026F6  6E02               	movwf	(pinMode@pin+1)^0,c
  3034  0026F8  0E05               	movlw	5
  3035  0026FA  6E01               	movwf	pinMode@pin^0,c
  3036  0026FC  0E00               	movlw	0
  3037  0026FE  6E04               	movwf	(pinMode@type+1)^0,c
  3038  002700  0E00               	movlw	0
  3039  002702  6E03               	movwf	pinMode@type^0,c
  3040  002704  ECFF  F008         	call	_pinMode	;wreg free
  3041  002708                     
  3042                           ;ssd.c: 109:     TRISD = 0x00;
  3043  002708  0E00               	movlw	0
  3044  00270A  6E95               	movwf	149,c	;volatile
  3045  00270C  0012               	return		;funcret
  3046  00270E                     __end_of_ssdInit:
  3047                           	callstack 0
  3048                           
  3049 ;; *************** function _ssdDigit *****************
  3050 ;; Defined at:
  3051 ;;		line 38 in file "ssd.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  val             1    wreg     unsigned char 
  3054 ;;  pos             1   24[COMRAM] unsigned char 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  val             1   25[COMRAM] unsigned char 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		wreg, status,2, status,0
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3066 ;;      Params:         1       0       0       0       0       0       0
  3067 ;;      Locals:         1       0       0       0       0       0       0
  3068 ;;      Temps:          0       0       0       0       0       0       0
  3069 ;;      Totals:         2       0       0       0       0       0       0
  3070 ;;Total ram usage:        2 bytes
  3071 ;; Hardware stack levels used: 1
  3072 ;; This function calls:
  3073 ;;		Nothing
  3074 ;; This function is called by:
  3075 ;;		_standBy
  3076 ;;		_menu
  3077 ;;		_contagem
  3078 ;;		_timer
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text12
  3083  002660                     __ptext12:
  3084                           	callstack 0
  3085  002660                     _ssdDigit:
  3086                           	callstack 29
  3087                           
  3088                           ;incstack = 0
  3089                           ;ssdDigit@val stored from wreg
  3090  002660  6E1A               	movwf	ssdDigit@val^0,c
  3091  002662                     
  3092                           ;ssd.c: 39:     if (pos == 0) {
  3093  002662  5019               	movf	ssdDigit@pos^0,w,c
  3094  002664  A4D8               	btfss	status,2,c
  3095  002666  EF37  F013         	goto	u2561
  3096  00266A  EF39  F013         	goto	u2560
  3097  00266E                     u2561:
  3098  00266E  EF3B  F013         	goto	l2710
  3099  002672                     u2560:
  3100  002672                     
  3101                           ;ssd.c: 40:         v0 = val;
  3102  002672  C01A  F068         	movff	ssdDigit@val,_v0
  3103  002676                     l2710:
  3104                           
  3105                           ;ssd.c: 42:     if (pos == 1) {
  3106  002676  0419               	decf	ssdDigit@pos^0,w,c
  3107  002678  A4D8               	btfss	status,2,c
  3108  00267A  EF41  F013         	goto	u2571
  3109  00267E  EF43  F013         	goto	u2570
  3110  002682                     u2571:
  3111  002682  EF45  F013         	goto	l2714
  3112  002686                     u2570:
  3113  002686                     
  3114                           ;ssd.c: 43:         v1 = val;
  3115  002686  C01A  F067         	movff	ssdDigit@val,_v1
  3116  00268A                     l2714:
  3117                           
  3118                           ;ssd.c: 45:     if (pos == 2) {
  3119  00268A  0E02               	movlw	2
  3120  00268C  1819               	xorwf	ssdDigit@pos^0,w,c
  3121  00268E  A4D8               	btfss	status,2,c
  3122  002690  EF4C  F013         	goto	u2581
  3123  002694  EF4E  F013         	goto	u2580
  3124  002698                     u2581:
  3125  002698  EF50  F013         	goto	l2718
  3126  00269C                     u2580:
  3127  00269C                     
  3128                           ;ssd.c: 46:         v2 = val;
  3129  00269C  C01A  F066         	movff	ssdDigit@val,_v2
  3130  0026A0                     l2718:
  3131                           
  3132                           ;ssd.c: 48:     if (pos == 3) {
  3133  0026A0  0E03               	movlw	3
  3134  0026A2  1819               	xorwf	ssdDigit@pos^0,w,c
  3135  0026A4  A4D8               	btfss	status,2,c
  3136  0026A6  EF57  F013         	goto	u2591
  3137  0026AA  EF59  F013         	goto	u2590
  3138  0026AE                     u2591:
  3139  0026AE  EF5B  F013         	goto	l182
  3140  0026B2                     u2590:
  3141  0026B2                     
  3142                           ;ssd.c: 49:         v3 = val;
  3143  0026B2  C01A  F065         	movff	ssdDigit@val,_v3
  3144  0026B6                     l182:
  3145  0026B6  0012               	return		;funcret
  3146  0026B8                     __end_of_ssdDigit:
  3147                           	callstack 0
  3148                           
  3149 ;; *************** function _menuLigando *****************
  3150 ;; Defined at:
  3151 ;;		line 75 in file "funcoes.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;		None
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;  logo           48   16[COMRAM] unsigned char [48]
  3156 ;;  j               4   64[COMRAM] float 
  3157 ;;  i               2   68[COMRAM] int 
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  1    wreg      void 
  3160 ;; Registers used:
  3161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3167 ;;      Params:         0       0       0       0       0       0       0
  3168 ;;      Locals:        54       0       0       0       0       0       0
  3169 ;;      Temps:          0       0       0       0       0       0       0
  3170 ;;      Totals:        54       0       0       0       0       0       0
  3171 ;;Total ram usage:       54 bytes
  3172 ;; Hardware stack levels used: 1
  3173 ;; Hardware stack levels required when called: 4
  3174 ;; This function calls:
  3175 ;;		___fladd
  3176 ;;		___flge
  3177 ;;		_atraso_ms
  3178 ;;		_lcdCommand
  3179 ;;		_lcdData
  3180 ;;		_lcdInit
  3181 ;;		_lcdString
  3182 ;; This function is called by:
  3183 ;;		_standBy
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           	psect	text13
  3188  00183E                     __ptext13:
  3189                           	callstack 0
  3190  00183E                     _menuLigando:
  3191                           	callstack 25
  3192  00183E                     
  3193                           ;funcoes.c: 76:     char logo[48] = {
  3194  00183E  EE20  F080         	lfsr	2,menuLigando@F43
  3195  001842  EE10  F011         	lfsr	1,menuLigando@logo
  3196  001846  0E2F               	movlw	47
  3197  001848                     u3501:
  3198  001848  CFDB FFE3          	movff	plusw2,plusw1
  3199  00184C  06E8               	decf	wreg,f,c
  3200  00184E  E2FC               	bc	u3501
  3201  001850                     
  3202                           ;funcoes.c: 84:     int i;;funcoes.c: 85:     float j;;funcoes.c: 86:     lcdInit();
  3203  001850  EC18  F012         	call	_lcdInit	;wreg free
  3204  001854                     
  3205                           ;funcoes.c: 87:     lcdCommand(0x40);
  3206  001854  0E40               	movlw	64
  3207  001856  ECD9  F011         	call	_lcdCommand
  3208  00185A                     
  3209                           ;funcoes.c: 88:     for (i = 0; i < 48; i++) {
  3210  00185A  0E00               	movlw	0
  3211  00185C  6E46               	movwf	(menuLigando@i+1)^0,c
  3212  00185E  0E00               	movlw	0
  3213  001860  6E45               	movwf	menuLigando@i^0,c
  3214  001862                     l3308:
  3215                           
  3216                           ;funcoes.c: 89:         lcdData(logo[i]);
  3217  001862  0E11               	movlw	low menuLigando@logo
  3218  001864  2445               	addwf	menuLigando@i^0,w,c
  3219  001866  6ED9               	movwf	fsr2l,c
  3220  001868  0E00               	movlw	high menuLigando@logo
  3221  00186A  2046               	addwfc	(menuLigando@i+1)^0,w,c
  3222  00186C  6EDA               	movwf	fsr2h,c
  3223  00186E  50DF               	movf	indf2,w,c
  3224  001870  ECB2  F013         	call	_lcdData
  3225  001874                     
  3226                           ;funcoes.c: 90:     }
  3227  001874  4A45               	infsnz	menuLigando@i^0,f,c
  3228  001876  2A46               	incf	(menuLigando@i+1)^0,f,c
  3229  001878  BE46               	btfsc	(menuLigando@i+1)^0,7,c
  3230  00187A  EF48  F00C         	goto	u3511
  3231  00187E  5046               	movf	(menuLigando@i+1)^0,w,c
  3232  001880  E109               	bnz	u3510
  3233  001882  0E30               	movlw	48
  3234  001884  5C45               	subwf	menuLigando@i^0,w,c
  3235  001886  A0D8               	btfss	status,0,c
  3236  001888  EF48  F00C         	goto	u3511
  3237  00188C  EF4A  F00C         	goto	u3510
  3238  001890                     u3511:
  3239  001890  EF31  F00C         	goto	l3308
  3240  001894                     u3510:
  3241  001894                     
  3242                           ;funcoes.c: 92:     (*(volatile __near unsigned char*)0xF82)=0x01;
  3243  001894  0E01               	movlw	1
  3244  001896  6E82               	movwf	130,c	;volatile
  3245  001898                     
  3246                           ;funcoes.c: 93:     atraso_ms(1000);
  3247  001898  0E03               	movlw	3
  3248  00189A  6E02               	movwf	(atraso_ms@t+1)^0,c
  3249  00189C  0EE8               	movlw	232
  3250  00189E  6E01               	movwf	atraso_ms@t^0,c
  3251  0018A0  ECFE  F012         	call	_atraso_ms	;wreg free
  3252  0018A4                     
  3253                           ;funcoes.c: 94:     (*(volatile __near unsigned char*)0xF82)=0x00;
  3254  0018A4  0E00               	movlw	0
  3255  0018A6  6E82               	movwf	130,c	;volatile
  3256  0018A8                     
  3257                           ;funcoes.c: 95:     (*(volatile __near unsigned char*)0xF84)=0x01;
  3258  0018A8  0E01               	movlw	1
  3259  0018AA  6E84               	movwf	132,c	;volatile
  3260  0018AC                     
  3261                           ;funcoes.c: 96:     atraso_ms(1000);
  3262  0018AC  0E03               	movlw	3
  3263  0018AE  6E02               	movwf	(atraso_ms@t+1)^0,c
  3264  0018B0  0EE8               	movlw	232
  3265  0018B2  6E01               	movwf	atraso_ms@t^0,c
  3266  0018B4  ECFE  F012         	call	_atraso_ms	;wreg free
  3267                           
  3268                           ;funcoes.c: 97:     (*(volatile __near unsigned char*)0xF84)=0x00;
  3269  0018B8  0E00               	movlw	0
  3270  0018BA  6E84               	movwf	132,c	;volatile
  3271                           
  3272                           ;funcoes.c: 100:     for (i = 0; i < 22; i++) {
  3273  0018BC  0E00               	movlw	0
  3274  0018BE  6E46               	movwf	(menuLigando@i+1)^0,c
  3275  0018C0  0E00               	movlw	0
  3276  0018C2  6E45               	movwf	menuLigando@i^0,c
  3277  0018C4                     l3328:
  3278                           
  3279                           ;funcoes.c: 101:         lcdCommand(0x01);
  3280  0018C4  0E01               	movlw	1
  3281  0018C6  ECD9  F011         	call	_lcdCommand
  3282                           
  3283                           ;funcoes.c: 102:         lcdCommand(0x80 + i);
  3284  0018CA  5045               	movf	menuLigando@i^0,w,c
  3285  0018CC  0F80               	addlw	128
  3286  0018CE  ECD9  F011         	call	_lcdCommand
  3287                           
  3288                           ;funcoes.c: 103:         lcdData(0);
  3289  0018D2  0E00               	movlw	0
  3290  0018D4  ECB2  F013         	call	_lcdData
  3291                           
  3292                           ;funcoes.c: 104:         lcdData(1);
  3293  0018D8  0E01               	movlw	1
  3294  0018DA  ECB2  F013         	call	_lcdData
  3295                           
  3296                           ;funcoes.c: 105:         lcdData(2);
  3297  0018DE  0E02               	movlw	2
  3298  0018E0  ECB2  F013         	call	_lcdData
  3299                           
  3300                           ;funcoes.c: 106:         lcdCommand(0xC0 + i);
  3301  0018E4  5045               	movf	menuLigando@i^0,w,c
  3302  0018E6  0FC0               	addlw	192
  3303  0018E8  ECD9  F011         	call	_lcdCommand
  3304                           
  3305                           ;funcoes.c: 107:         lcdData(3);
  3306  0018EC  0E03               	movlw	3
  3307  0018EE  ECB2  F013         	call	_lcdData
  3308                           
  3309                           ;funcoes.c: 108:         lcdData(4);
  3310  0018F2  0E04               	movlw	4
  3311  0018F4  ECB2  F013         	call	_lcdData
  3312                           
  3313                           ;funcoes.c: 109:         lcdData(5);
  3314  0018F8  0E05               	movlw	5
  3315  0018FA  ECB2  F013         	call	_lcdData
  3316  0018FE                     
  3317                           ;funcoes.c: 111:         lcdString(" Ligando");
  3318  0018FE  0E76               	movlw	low STR_7
  3319  001900  6E09               	movwf	lcdString@msg^0,c
  3320  001902  0E06               	movlw	high STR_7
  3321  001904  6E0A               	movwf	(lcdString@msg+1)^0,c
  3322  001906  EC87  F013         	call	_lcdString	;wreg free
  3323  00190A                     
  3324                           ;funcoes.c: 113:         for (j = 0; j < 700; j++);
  3325  00190A  0E00               	movlw	0
  3326  00190C  6E41               	movwf	menuLigando@j^0,c
  3327  00190E  0E00               	movlw	0
  3328  001910  6E42               	movwf	(menuLigando@j+1)^0,c
  3329  001912  0E00               	movlw	0
  3330  001914  6E43               	movwf	(menuLigando@j+2)^0,c
  3331  001916  0E00               	movlw	0
  3332  001918  6E44               	movwf	(menuLigando@j+3)^0,c
  3333  00191A  C041  F001         	movff	menuLigando@j,___flge@ff1
  3334  00191E  C042  F002         	movff	menuLigando@j+1,___flge@ff1+1
  3335  001922  C043  F003         	movff	menuLigando@j+2,___flge@ff1+2
  3336  001926  C044  F004         	movff	menuLigando@j+3,___flge@ff1+3
  3337  00192A  0E00               	movlw	0
  3338  00192C  6E05               	movwf	___flge@ff2^0,c
  3339  00192E  0E00               	movlw	0
  3340  001930  6E06               	movwf	(___flge@ff2+1)^0,c
  3341  001932  0E2F               	movlw	47
  3342  001934  6E07               	movwf	(___flge@ff2+2)^0,c
  3343  001936  0E44               	movlw	68
  3344  001938  6E08               	movwf	(___flge@ff2+3)^0,c
  3345  00193A  EC5D  F00F         	call	___flge	;wreg free
  3346  00193E  A0D8               	btfss	status,0,c
  3347  001940  EFA4  F00C         	goto	u3521
  3348  001944  EFA6  F00C         	goto	u3520
  3349  001948                     u3521:
  3350  001948  EFA8  F00C         	goto	l3338
  3351  00194C                     u3520:
  3352  00194C  EFDB  F00C         	goto	l3340
  3353  001950                     l3338:
  3354  001950  C041  F001         	movff	menuLigando@j,___fladd@b
  3355  001954  C042  F002         	movff	menuLigando@j+1,___fladd@b+1
  3356  001958  C043  F003         	movff	menuLigando@j+2,___fladd@b+2
  3357  00195C  C044  F004         	movff	menuLigando@j+3,___fladd@b+3
  3358  001960  0E00               	movlw	0
  3359  001962  6E05               	movwf	___fladd@a^0,c
  3360  001964  0E00               	movlw	0
  3361  001966  6E06               	movwf	(___fladd@a+1)^0,c
  3362  001968  0E80               	movlw	128
  3363  00196A  6E07               	movwf	(___fladd@a+2)^0,c
  3364  00196C  0E3F               	movlw	63
  3365  00196E  6E08               	movwf	(___fladd@a+3)^0,c
  3366  001970  EC4C  F003         	call	___fladd	;wreg free
  3367  001974  C001  F041         	movff	?___fladd,menuLigando@j
  3368  001978  C002  F042         	movff	?___fladd+1,menuLigando@j+1
  3369  00197C  C003  F043         	movff	?___fladd+2,menuLigando@j+2
  3370  001980  C004  F044         	movff	?___fladd+3,menuLigando@j+3
  3371  001984  C041  F001         	movff	menuLigando@j,___flge@ff1
  3372  001988  C042  F002         	movff	menuLigando@j+1,___flge@ff1+1
  3373  00198C  C043  F003         	movff	menuLigando@j+2,___flge@ff1+2
  3374  001990  C044  F004         	movff	menuLigando@j+3,___flge@ff1+3
  3375  001994  0E00               	movlw	0
  3376  001996  6E05               	movwf	___flge@ff2^0,c
  3377  001998  0E00               	movlw	0
  3378  00199A  6E06               	movwf	(___flge@ff2+1)^0,c
  3379  00199C  0E2F               	movlw	47
  3380  00199E  6E07               	movwf	(___flge@ff2+2)^0,c
  3381  0019A0  0E44               	movlw	68
  3382  0019A2  6E08               	movwf	(___flge@ff2+3)^0,c
  3383  0019A4  EC5D  F00F         	call	___flge	;wreg free
  3384  0019A8  A0D8               	btfss	status,0,c
  3385  0019AA  EFD9  F00C         	goto	u3531
  3386  0019AE  EFDB  F00C         	goto	u3530
  3387  0019B2                     u3531:
  3388  0019B2  EFA8  F00C         	goto	l3338
  3389  0019B6                     u3530:
  3390  0019B6                     l3340:
  3391                           
  3392                           ;funcoes.c: 114:     }
  3393  0019B6  4A45               	infsnz	menuLigando@i^0,f,c
  3394  0019B8  2A46               	incf	(menuLigando@i+1)^0,f,c
  3395  0019BA  BE46               	btfsc	(menuLigando@i+1)^0,7,c
  3396  0019BC  EFE9  F00C         	goto	u3541
  3397  0019C0  5046               	movf	(menuLigando@i+1)^0,w,c
  3398  0019C2  E109               	bnz	u3540
  3399  0019C4  0E16               	movlw	22
  3400  0019C6  5C45               	subwf	menuLigando@i^0,w,c
  3401  0019C8  A0D8               	btfss	status,0,c
  3402  0019CA  EFE9  F00C         	goto	u3541
  3403  0019CE  EFEB  F00C         	goto	u3540
  3404  0019D2                     u3541:
  3405  0019D2  EF62  F00C         	goto	l3328
  3406  0019D6                     u3540:
  3407  0019D6                     
  3408                           ;funcoes.c: 115:     lcdCommand(0x01);
  3409  0019D6  0E01               	movlw	1
  3410  0019D8  ECD9  F011         	call	_lcdCommand
  3411  0019DC  0012               	return		;funcret
  3412  0019DE                     __end_of_menuLigando:
  3413                           	callstack 0
  3414                           
  3415 ;; *************** function _lcdInit *****************
  3416 ;; Defined at:
  3417 ;;		line 102 in file "lcd.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;		None
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;		None
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  1    wreg      void 
  3424 ;; Registers used:
  3425 ;;		wreg, status,2, status,0, cstack
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3431 ;;      Params:         0       0       0       0       0       0       0
  3432 ;;      Locals:         0       0       0       0       0       0       0
  3433 ;;      Temps:          0       0       0       0       0       0       0
  3434 ;;      Totals:         0       0       0       0       0       0       0
  3435 ;;Total ram usage:        0 bytes
  3436 ;; Hardware stack levels used: 1
  3437 ;; Hardware stack levels required when called: 3
  3438 ;; This function calls:
  3439 ;;		_Delay2ms
  3440 ;;		_lcdCommand
  3441 ;;		_pinMode
  3442 ;; This function is called by:
  3443 ;;		_standBy
  3444 ;;		_menuLigando
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text14
  3449  002430                     __ptext14:
  3450                           	callstack 0
  3451  002430                     _lcdInit:
  3452                           	callstack 25
  3453  002430                     
  3454                           ;lcd.c: 104:     pinMode(PIN_E2, 0);
  3455  002430  0E00               	movlw	0
  3456  002432  6E02               	movwf	(pinMode@pin+1)^0,c
  3457  002434  0E22               	movlw	34
  3458  002436  6E01               	movwf	pinMode@pin^0,c
  3459  002438  0E00               	movlw	0
  3460  00243A  6E04               	movwf	(pinMode@type+1)^0,c
  3461  00243C  0E00               	movlw	0
  3462  00243E  6E03               	movwf	pinMode@type^0,c
  3463  002440  ECFF  F008         	call	_pinMode	;wreg free
  3464                           
  3465                           ;lcd.c: 105:     pinMode(PIN_E1, 0);
  3466  002444  0E00               	movlw	0
  3467  002446  6E02               	movwf	(pinMode@pin+1)^0,c
  3468  002448  0E21               	movlw	33
  3469  00244A  6E01               	movwf	pinMode@pin^0,c
  3470  00244C  0E00               	movlw	0
  3471  00244E  6E04               	movwf	(pinMode@type+1)^0,c
  3472  002450  0E00               	movlw	0
  3473  002452  6E03               	movwf	pinMode@type^0,c
  3474  002454  ECFF  F008         	call	_pinMode	;wreg free
  3475  002458                     
  3476                           ;lcd.c: 106:     TRISD = 0x00;
  3477  002458  0E00               	movlw	0
  3478  00245A  6E95               	movwf	149,c	;volatile
  3479  00245C                     
  3480                           ;lcd.c: 109:     Delay2ms();
  3481  00245C  EC40  F014         	call	_Delay2ms	;wreg free
  3482  002460                     
  3483                           ;lcd.c: 110:     Delay2ms();
  3484  002460  EC40  F014         	call	_Delay2ms	;wreg free
  3485  002464                     
  3486                           ;lcd.c: 111:     Delay2ms();
  3487  002464  EC40  F014         	call	_Delay2ms	;wreg free
  3488  002468                     
  3489                           ;lcd.c: 112:     Delay2ms();
  3490  002468  EC40  F014         	call	_Delay2ms	;wreg free
  3491  00246C                     
  3492                           ;lcd.c: 113:     Delay2ms();
  3493  00246C  EC40  F014         	call	_Delay2ms	;wreg free
  3494  002470                     
  3495                           ;lcd.c: 115:     lcdCommand(0x38);
  3496  002470  0E38               	movlw	56
  3497  002472  ECD9  F011         	call	_lcdCommand
  3498  002476                     
  3499                           ;lcd.c: 116:     Delay2ms();
  3500  002476  EC40  F014         	call	_Delay2ms	;wreg free
  3501  00247A                     
  3502                           ;lcd.c: 117:     Delay2ms();
  3503  00247A  EC40  F014         	call	_Delay2ms	;wreg free
  3504  00247E                     
  3505                           ;lcd.c: 118:     lcdCommand(0x38);
  3506  00247E  0E38               	movlw	56
  3507  002480  ECD9  F011         	call	_lcdCommand
  3508  002484                     
  3509                           ;lcd.c: 119:     Delay2ms();
  3510  002484  EC40  F014         	call	_Delay2ms	;wreg free
  3511  002488                     
  3512                           ;lcd.c: 120:     lcdCommand(0x38);
  3513  002488  0E38               	movlw	56
  3514  00248A  ECD9  F011         	call	_lcdCommand
  3515  00248E                     
  3516                           ;lcd.c: 122:     lcdCommand(0x38);
  3517  00248E  0E38               	movlw	56
  3518  002490  ECD9  F011         	call	_lcdCommand
  3519  002494                     
  3520                           ;lcd.c: 123:     lcdCommand(0x06);
  3521  002494  0E06               	movlw	6
  3522  002496  ECD9  F011         	call	_lcdCommand
  3523  00249A                     
  3524                           ;lcd.c: 126:     lcdCommand(0x0C);
  3525  00249A  0E0C               	movlw	12
  3526  00249C  ECD9  F011         	call	_lcdCommand
  3527  0024A0                     
  3528                           ;lcd.c: 127:     lcdCommand(0x01);
  3529  0024A0  0E01               	movlw	1
  3530  0024A2  ECD9  F011         	call	_lcdCommand
  3531  0024A6  0012               	return		;funcret
  3532  0024A8                     __end_of_lcdInit:
  3533                           	callstack 0
  3534                           
  3535 ;; *************** function _pinMode *****************
  3536 ;; Defined at:
  3537 ;;		line 54 in file "io.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;  pin             2    0[COMRAM] int 
  3540 ;;  type            2    2[COMRAM] int 
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;		None
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  1    wreg      void 
  3545 ;; Registers used:
  3546 ;;		wreg, status,2, status,0
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3552 ;;      Params:         4       0       0       0       0       0       0
  3553 ;;      Locals:         0       0       0       0       0       0       0
  3554 ;;      Temps:          2       0       0       0       0       0       0
  3555 ;;      Totals:         6       0       0       0       0       0       0
  3556 ;;Total ram usage:        6 bytes
  3557 ;; Hardware stack levels used: 1
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_lcdInit
  3562 ;;		_ssdInit
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text15
  3567  0011FE                     __ptext15:
  3568                           	callstack 0
  3569  0011FE                     _pinMode:
  3570                           	callstack 28
  3571  0011FE                     
  3572                           ;io.c: 56:     if(pin <8){
  3573  0011FE  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3574  001200  EF0D  F009         	goto	u2300
  3575  001204  5002               	movf	(pinMode@pin+1)^0,w,c
  3576  001206  E107               	bnz	u2301
  3577  001208  0E08               	movlw	8
  3578  00120A  5C01               	subwf	pinMode@pin^0,w,c
  3579  00120C  B0D8               	btfsc	status,0,c
  3580  00120E  EF0B  F009         	goto	u2301
  3581  001212  EF0D  F009         	goto	u2300
  3582  001216                     u2301:
  3583  001216  EF37  F009         	goto	l2566
  3584  00121A                     u2300:
  3585  00121A                     
  3586                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  3587  00121A  5003               	movf	pinMode@type^0,w,c
  3588  00121C  1004               	iorwf	(pinMode@type+1)^0,w,c
  3589  00121E  B4D8               	btfsc	status,2,c
  3590  001220  EF14  F009         	goto	u2311
  3591  001224  EF16  F009         	goto	u2310
  3592  001228                     u2311:
  3593  001228  EF26  F009         	goto	l2564
  3594  00122C                     u2310:
  3595  00122C  C001  F005         	movff	pinMode@pin,??_pinMode
  3596  001230  0E01               	movlw	1
  3597  001232  6E06               	movwf	(??_pinMode+1)^0,c
  3598  001234  2A05               	incf	??_pinMode^0,f,c
  3599  001236  EF1F  F009         	goto	u2324
  3600  00123A                     u2325:
  3601  00123A  90D8               	bcf	status,0,c
  3602  00123C  3606               	rlcf	(??_pinMode+1)^0,f,c
  3603  00123E                     u2324:
  3604  00123E  2E05               	decfsz	??_pinMode^0,f,c
  3605  001240  EF1D  F009         	goto	u2325
  3606  001244  5006               	movf	(??_pinMode+1)^0,w,c
  3607  001246  1292               	iorwf	146,f,c	;volatile
  3608  001248  EF25  F00A         	goto	l76
  3609  00124C                     l2564:
  3610  00124C  C001  F005         	movff	pinMode@pin,??_pinMode
  3611  001250  0E01               	movlw	1
  3612  001252  6E06               	movwf	(??_pinMode+1)^0,c
  3613  001254  2A05               	incf	??_pinMode^0,f,c
  3614  001256  EF2F  F009         	goto	u2334
  3615  00125A                     u2335:
  3616  00125A  90D8               	bcf	status,0,c
  3617  00125C  3606               	rlcf	(??_pinMode+1)^0,f,c
  3618  00125E                     u2334:
  3619  00125E  2E05               	decfsz	??_pinMode^0,f,c
  3620  001260  EF2D  F009         	goto	u2335
  3621  001264  5006               	movf	(??_pinMode+1)^0,w,c
  3622  001266  0AFF               	xorlw	255
  3623  001268  1692               	andwf	146,f,c	;volatile
  3624  00126A  EF25  F00A         	goto	l76
  3625  00126E                     l2566:
  3626  00126E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3627  001270  EF45  F009         	goto	u2340
  3628  001274  5002               	movf	(pinMode@pin+1)^0,w,c
  3629  001276  E107               	bnz	u2341
  3630  001278  0E10               	movlw	16
  3631  00127A  5C01               	subwf	pinMode@pin^0,w,c
  3632  00127C  B0D8               	btfsc	status,0,c
  3633  00127E  EF43  F009         	goto	u2341
  3634  001282  EF45  F009         	goto	u2340
  3635  001286                     u2341:
  3636  001286  EF73  F009         	goto	l2574
  3637  00128A                     u2340:
  3638  00128A                     
  3639                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  3640  00128A  5003               	movf	pinMode@type^0,w,c
  3641  00128C  1004               	iorwf	(pinMode@type+1)^0,w,c
  3642  00128E  B4D8               	btfsc	status,2,c
  3643  001290  EF4C  F009         	goto	u2351
  3644  001294  EF4E  F009         	goto	u2350
  3645  001298                     u2351:
  3646  001298  EF60  F009         	goto	l2572
  3647  00129C                     u2350:
  3648  00129C  C001  F005         	movff	pinMode@pin,??_pinMode
  3649  0012A0  0EF8               	movlw	-8
  3650  0012A2  2605               	addwf	??_pinMode^0,f,c
  3651  0012A4  0E01               	movlw	1
  3652  0012A6  6E06               	movwf	(??_pinMode+1)^0,c
  3653  0012A8  2A05               	incf	??_pinMode^0,f,c
  3654  0012AA  EF59  F009         	goto	u2364
  3655  0012AE                     u2365:
  3656  0012AE  90D8               	bcf	status,0,c
  3657  0012B0  3606               	rlcf	(??_pinMode+1)^0,f,c
  3658  0012B2                     u2364:
  3659  0012B2  2E05               	decfsz	??_pinMode^0,f,c
  3660  0012B4  EF57  F009         	goto	u2365
  3661  0012B8  5006               	movf	(??_pinMode+1)^0,w,c
  3662  0012BA  1293               	iorwf	147,f,c	;volatile
  3663  0012BC  EF25  F00A         	goto	l76
  3664  0012C0                     l2572:
  3665  0012C0  C001  F005         	movff	pinMode@pin,??_pinMode
  3666  0012C4  0EF8               	movlw	-8
  3667  0012C6  2605               	addwf	??_pinMode^0,f,c
  3668  0012C8  0E01               	movlw	1
  3669  0012CA  6E06               	movwf	(??_pinMode+1)^0,c
  3670  0012CC  2A05               	incf	??_pinMode^0,f,c
  3671  0012CE  EF6B  F009         	goto	u2374
  3672  0012D2                     u2375:
  3673  0012D2  90D8               	bcf	status,0,c
  3674  0012D4  3606               	rlcf	(??_pinMode+1)^0,f,c
  3675  0012D6                     u2374:
  3676  0012D6  2E05               	decfsz	??_pinMode^0,f,c
  3677  0012D8  EF69  F009         	goto	u2375
  3678  0012DC  5006               	movf	(??_pinMode+1)^0,w,c
  3679  0012DE  0AFF               	xorlw	255
  3680  0012E0  1693               	andwf	147,f,c	;volatile
  3681  0012E2  EF25  F00A         	goto	l76
  3682  0012E6                     l2574:
  3683  0012E6  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3684  0012E8  EF81  F009         	goto	u2380
  3685  0012EC  5002               	movf	(pinMode@pin+1)^0,w,c
  3686  0012EE  E107               	bnz	u2381
  3687  0012F0  0E18               	movlw	24
  3688  0012F2  5C01               	subwf	pinMode@pin^0,w,c
  3689  0012F4  B0D8               	btfsc	status,0,c
  3690  0012F6  EF7F  F009         	goto	u2381
  3691  0012FA  EF81  F009         	goto	u2380
  3692  0012FE                     u2381:
  3693  0012FE  EFAF  F009         	goto	l2582
  3694  001302                     u2380:
  3695  001302                     
  3696                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  3697  001302  5003               	movf	pinMode@type^0,w,c
  3698  001304  1004               	iorwf	(pinMode@type+1)^0,w,c
  3699  001306  B4D8               	btfsc	status,2,c
  3700  001308  EF88  F009         	goto	u2391
  3701  00130C  EF8A  F009         	goto	u2390
  3702  001310                     u2391:
  3703  001310  EF9C  F009         	goto	l2580
  3704  001314                     u2390:
  3705  001314  C001  F005         	movff	pinMode@pin,??_pinMode
  3706  001318  0EF0               	movlw	-16
  3707  00131A  2605               	addwf	??_pinMode^0,f,c
  3708  00131C  0E01               	movlw	1
  3709  00131E  6E06               	movwf	(??_pinMode+1)^0,c
  3710  001320  2A05               	incf	??_pinMode^0,f,c
  3711  001322  EF95  F009         	goto	u2404
  3712  001326                     u2405:
  3713  001326  90D8               	bcf	status,0,c
  3714  001328  3606               	rlcf	(??_pinMode+1)^0,f,c
  3715  00132A                     u2404:
  3716  00132A  2E05               	decfsz	??_pinMode^0,f,c
  3717  00132C  EF93  F009         	goto	u2405
  3718  001330  5006               	movf	(??_pinMode+1)^0,w,c
  3719  001332  1294               	iorwf	148,f,c	;volatile
  3720  001334  EF25  F00A         	goto	l76
  3721  001338                     l2580:
  3722  001338  C001  F005         	movff	pinMode@pin,??_pinMode
  3723  00133C  0EF0               	movlw	-16
  3724  00133E  2605               	addwf	??_pinMode^0,f,c
  3725  001340  0E01               	movlw	1
  3726  001342  6E06               	movwf	(??_pinMode+1)^0,c
  3727  001344  2A05               	incf	??_pinMode^0,f,c
  3728  001346  EFA7  F009         	goto	u2414
  3729  00134A                     u2415:
  3730  00134A  90D8               	bcf	status,0,c
  3731  00134C  3606               	rlcf	(??_pinMode+1)^0,f,c
  3732  00134E                     u2414:
  3733  00134E  2E05               	decfsz	??_pinMode^0,f,c
  3734  001350  EFA5  F009         	goto	u2415
  3735  001354  5006               	movf	(??_pinMode+1)^0,w,c
  3736  001356  0AFF               	xorlw	255
  3737  001358  1694               	andwf	148,f,c	;volatile
  3738  00135A  EF25  F00A         	goto	l76
  3739  00135E                     l2582:
  3740  00135E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3741  001360  EFBD  F009         	goto	u2420
  3742  001364  5002               	movf	(pinMode@pin+1)^0,w,c
  3743  001366  E107               	bnz	u2421
  3744  001368  0E20               	movlw	32
  3745  00136A  5C01               	subwf	pinMode@pin^0,w,c
  3746  00136C  B0D8               	btfsc	status,0,c
  3747  00136E  EFBB  F009         	goto	u2421
  3748  001372  EFBD  F009         	goto	u2420
  3749  001376                     u2421:
  3750  001376  EFEB  F009         	goto	l2590
  3751  00137A                     u2420:
  3752  00137A                     
  3753                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  3754  00137A  5003               	movf	pinMode@type^0,w,c
  3755  00137C  1004               	iorwf	(pinMode@type+1)^0,w,c
  3756  00137E  B4D8               	btfsc	status,2,c
  3757  001380  EFC4  F009         	goto	u2431
  3758  001384  EFC6  F009         	goto	u2430
  3759  001388                     u2431:
  3760  001388  EFD8  F009         	goto	l2588
  3761  00138C                     u2430:
  3762  00138C  C001  F005         	movff	pinMode@pin,??_pinMode
  3763  001390  0EE8               	movlw	-24
  3764  001392  2605               	addwf	??_pinMode^0,f,c
  3765  001394  0E01               	movlw	1
  3766  001396  6E06               	movwf	(??_pinMode+1)^0,c
  3767  001398  2A05               	incf	??_pinMode^0,f,c
  3768  00139A  EFD1  F009         	goto	u2444
  3769  00139E                     u2445:
  3770  00139E  90D8               	bcf	status,0,c
  3771  0013A0  3606               	rlcf	(??_pinMode+1)^0,f,c
  3772  0013A2                     u2444:
  3773  0013A2  2E05               	decfsz	??_pinMode^0,f,c
  3774  0013A4  EFCF  F009         	goto	u2445
  3775  0013A8  5006               	movf	(??_pinMode+1)^0,w,c
  3776  0013AA  1295               	iorwf	149,f,c	;volatile
  3777  0013AC  EF25  F00A         	goto	l76
  3778  0013B0                     l2588:
  3779  0013B0  C001  F005         	movff	pinMode@pin,??_pinMode
  3780  0013B4  0EE8               	movlw	-24
  3781  0013B6  2605               	addwf	??_pinMode^0,f,c
  3782  0013B8  0E01               	movlw	1
  3783  0013BA  6E06               	movwf	(??_pinMode+1)^0,c
  3784  0013BC  2A05               	incf	??_pinMode^0,f,c
  3785  0013BE  EFE3  F009         	goto	u2454
  3786  0013C2                     u2455:
  3787  0013C2  90D8               	bcf	status,0,c
  3788  0013C4  3606               	rlcf	(??_pinMode+1)^0,f,c
  3789  0013C6                     u2454:
  3790  0013C6  2E05               	decfsz	??_pinMode^0,f,c
  3791  0013C8  EFE1  F009         	goto	u2455
  3792  0013CC  5006               	movf	(??_pinMode+1)^0,w,c
  3793  0013CE  0AFF               	xorlw	255
  3794  0013D0  1695               	andwf	149,f,c	;volatile
  3795  0013D2  EF25  F00A         	goto	l76
  3796  0013D6                     l2590:
  3797  0013D6  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3798  0013D8  EFF9  F009         	goto	u2460
  3799  0013DC  5002               	movf	(pinMode@pin+1)^0,w,c
  3800  0013DE  E107               	bnz	u2461
  3801  0013E0  0E28               	movlw	40
  3802  0013E2  5C01               	subwf	pinMode@pin^0,w,c
  3803  0013E4  B0D8               	btfsc	status,0,c
  3804  0013E6  EFF7  F009         	goto	u2461
  3805  0013EA  EFF9  F009         	goto	u2460
  3806  0013EE                     u2461:
  3807  0013EE  EF25  F00A         	goto	l76
  3808  0013F2                     u2460:
  3809  0013F2                     
  3810                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  3811  0013F2  5003               	movf	pinMode@type^0,w,c
  3812  0013F4  1004               	iorwf	(pinMode@type+1)^0,w,c
  3813  0013F6  B4D8               	btfsc	status,2,c
  3814  0013F8  EF00  F00A         	goto	u2471
  3815  0013FC  EF02  F00A         	goto	u2470
  3816  001400                     u2471:
  3817  001400  EF14  F00A         	goto	l2596
  3818  001404                     u2470:
  3819  001404  C001  F005         	movff	pinMode@pin,??_pinMode
  3820  001408  0EE0               	movlw	-32
  3821  00140A  2605               	addwf	??_pinMode^0,f,c
  3822  00140C  0E01               	movlw	1
  3823  00140E  6E06               	movwf	(??_pinMode+1)^0,c
  3824  001410  2A05               	incf	??_pinMode^0,f,c
  3825  001412  EF0D  F00A         	goto	u2484
  3826  001416                     u2485:
  3827  001416  90D8               	bcf	status,0,c
  3828  001418  3606               	rlcf	(??_pinMode+1)^0,f,c
  3829  00141A                     u2484:
  3830  00141A  2E05               	decfsz	??_pinMode^0,f,c
  3831  00141C  EF0B  F00A         	goto	u2485
  3832  001420  5006               	movf	(??_pinMode+1)^0,w,c
  3833  001422  1296               	iorwf	150,f,c	;volatile
  3834  001424  EF25  F00A         	goto	l76
  3835  001428                     l2596:
  3836  001428  C001  F005         	movff	pinMode@pin,??_pinMode
  3837  00142C  0EE0               	movlw	-32
  3838  00142E  2605               	addwf	??_pinMode^0,f,c
  3839  001430  0E01               	movlw	1
  3840  001432  6E06               	movwf	(??_pinMode+1)^0,c
  3841  001434  2A05               	incf	??_pinMode^0,f,c
  3842  001436  EF1F  F00A         	goto	u2494
  3843  00143A                     u2495:
  3844  00143A  90D8               	bcf	status,0,c
  3845  00143C  3606               	rlcf	(??_pinMode+1)^0,f,c
  3846  00143E                     u2494:
  3847  00143E  2E05               	decfsz	??_pinMode^0,f,c
  3848  001440  EF1D  F00A         	goto	u2495
  3849  001444  5006               	movf	(??_pinMode+1)^0,w,c
  3850  001446  0AFF               	xorlw	255
  3851  001448  1696               	andwf	150,f,c	;volatile
  3852  00144A                     l76:
  3853  00144A  0012               	return		;funcret
  3854  00144C                     __end_of_pinMode:
  3855                           	callstack 0
  3856                           
  3857 ;; *************** function _atraso_ms *****************
  3858 ;; Defined at:
  3859 ;;		line 3 in file "delay.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;  t               2    0[COMRAM] int 
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;  i               2    2[COMRAM] volatile unsigned int 
  3864 ;;  k               1    5[COMRAM] volatile unsigned char 
  3865 ;;  j               1    4[COMRAM] volatile unsigned char 
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  1    wreg      void 
  3868 ;; Registers used:
  3869 ;;		wreg, status,2, status,0
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3875 ;;      Params:         2       0       0       0       0       0       0
  3876 ;;      Locals:         4       0       0       0       0       0       0
  3877 ;;      Temps:          0       0       0       0       0       0       0
  3878 ;;      Totals:         6       0       0       0       0       0       0
  3879 ;;Total ram usage:        6 bytes
  3880 ;; Hardware stack levels used: 1
  3881 ;; This function calls:
  3882 ;;		Nothing
  3883 ;; This function is called by:
  3884 ;;		_menuLigando
  3885 ;;		_contagem
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           	psect	text16
  3890  0025FC                     __ptext16:
  3891                           	callstack 0
  3892  0025FC                     _atraso_ms:
  3893                           	callstack 28
  3894  0025FC                     
  3895                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 7:     for (i = 0; i < (t); i++) {
  3896  0025FC  0E00               	movlw	0
  3897  0025FE  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
  3898  002600  0E00               	movlw	0
  3899  002602  6E03               	movwf	atraso_ms@i^0,c	;volatile
  3900  002604  EF24  F013         	goto	l2800
  3901  002608                     l2778:
  3902                           
  3903                           ;delay.c: 8:         for (j = 0; j < 41; j++) {
  3904  002608  0E00               	movlw	0
  3905  00260A  6E05               	movwf	atraso_ms@j^0,c	;volatile
  3906  00260C                     l2780:
  3907  00260C  0E28               	movlw	40
  3908  00260E  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  3909  002610  EF0C  F013         	goto	u2601
  3910  002614  EF0E  F013         	goto	u2600
  3911  002618                     u2601:
  3912  002618  EF10  F013         	goto	l2784
  3913  00261C                     u2600:
  3914  00261C  EF22  F013         	goto	l2798
  3915  002620                     l2784:
  3916                           
  3917                           ;delay.c: 9:             for (k = 0; k < 3; k++);
  3918  002620  0E00               	movlw	0
  3919  002622  6E06               	movwf	atraso_ms@k^0,c	;volatile
  3920  002624                     l2786:
  3921  002624  0E02               	movlw	2
  3922  002626  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  3923  002628  EF18  F013         	goto	u2611
  3924  00262C  EF1A  F013         	goto	u2610
  3925  002630                     u2611:
  3926  002630  EF1C  F013         	goto	l2790
  3927  002634                     u2610:
  3928  002634  EF1F  F013         	goto	l2794
  3929  002638                     l2790:
  3930  002638  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  3931  00263A  EF12  F013         	goto	l2786
  3932  00263E                     l2794:
  3933                           
  3934                           ;delay.c: 10:         }
  3935  00263E  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  3936  002640  EF06  F013         	goto	l2780
  3937  002644                     l2798:
  3938                           
  3939                           ;delay.c: 11:     }
  3940  002644  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
  3941  002646  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  3942  002648                     l2800:
  3943  002648  5001               	movf	atraso_ms@t^0,w,c
  3944  00264A  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
  3945  00264C  5002               	movf	(atraso_ms@t+1)^0,w,c
  3946  00264E  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  3947  002650  A0D8               	btfss	status,0,c
  3948  002652  EF2D  F013         	goto	u2621
  3949  002656  EF2F  F013         	goto	u2620
  3950  00265A                     u2621:
  3951  00265A  EF04  F013         	goto	l2778
  3952  00265E                     u2620:
  3953  00265E  0012               	return		;funcret
  3954  002660                     __end_of_atraso_ms:
  3955                           	callstack 0
  3956                           
  3957 ;; *************** function ___flge *****************
  3958 ;; Defined at:
  3959 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;  ff1             4    0[COMRAM] void 
  3962 ;;  ff2             4    4[COMRAM] void 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;		None
  3965 ;; Return value:  Size  Location     Type
  3966 ;;		None               void
  3967 ;; Registers used:
  3968 ;;		wreg, status,2, status,0
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3974 ;;      Params:         8       0       0       0       0       0       0
  3975 ;;      Locals:         0       0       0       0       0       0       0
  3976 ;;      Temps:          4       0       0       0       0       0       0
  3977 ;;      Totals:        12       0       0       0       0       0       0
  3978 ;;Total ram usage:       12 bytes
  3979 ;; Hardware stack levels used: 1
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_menuLigando
  3984 ;;		_contagem
  3985 ;;		_timer
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           	psect	text17
  3990  001EBA                     __ptext17:
  3991                           	callstack 0
  3992  001EBA                     ___flge:
  3993                           	callstack 28
  3994  001EBA  0E00               	movlw	0
  3995  001EBC  1401               	andwf	___flge@ff1^0,w,c
  3996  001EBE  6E09               	movwf	??___flge^0,c
  3997  001EC0  0E00               	movlw	0
  3998  001EC2  1402               	andwf	(___flge@ff1+1)^0,w,c
  3999  001EC4  6E0A               	movwf	(??___flge+1)^0,c
  4000  001EC6  0E80               	movlw	128
  4001  001EC8  1403               	andwf	(___flge@ff1+2)^0,w,c
  4002  001ECA  6E0B               	movwf	(??___flge+2)^0,c
  4003  001ECC  0E7F               	movlw	127
  4004  001ECE  1404               	andwf	(___flge@ff1+3)^0,w,c
  4005  001ED0  6E0C               	movwf	(??___flge+3)^0,c
  4006  001ED2  5009               	movf	??___flge^0,w,c
  4007  001ED4  100A               	iorwf	(??___flge+1)^0,w,c
  4008  001ED6  100B               	iorwf	(??___flge+2)^0,w,c
  4009  001ED8  100C               	iorwf	(??___flge+3)^0,w,c
  4010  001EDA  A4D8               	btfss	status,2,c
  4011  001EDC  EF72  F00F         	goto	u3261
  4012  001EE0  EF74  F00F         	goto	u3260
  4013  001EE4                     u3261:
  4014  001EE4  EF7C  F00F         	goto	l3168
  4015  001EE8                     u3260:
  4016  001EE8  0E00               	movlw	0
  4017  001EEA  6E01               	movwf	___flge@ff1^0,c
  4018  001EEC  0E00               	movlw	0
  4019  001EEE  6E02               	movwf	(___flge@ff1+1)^0,c
  4020  001EF0  0E00               	movlw	0
  4021  001EF2  6E03               	movwf	(___flge@ff1+2)^0,c
  4022  001EF4  0E00               	movlw	0
  4023  001EF6  6E04               	movwf	(___flge@ff1+3)^0,c
  4024  001EF8                     l3168:
  4025  001EF8  0E00               	movlw	0
  4026  001EFA  1405               	andwf	___flge@ff2^0,w,c
  4027  001EFC  6E09               	movwf	??___flge^0,c
  4028  001EFE  0E00               	movlw	0
  4029  001F00  1406               	andwf	(___flge@ff2+1)^0,w,c
  4030  001F02  6E0A               	movwf	(??___flge+1)^0,c
  4031  001F04  0E80               	movlw	128
  4032  001F06  1407               	andwf	(___flge@ff2+2)^0,w,c
  4033  001F08  6E0B               	movwf	(??___flge+2)^0,c
  4034  001F0A  0E7F               	movlw	127
  4035  001F0C  1408               	andwf	(___flge@ff2+3)^0,w,c
  4036  001F0E  6E0C               	movwf	(??___flge+3)^0,c
  4037  001F10  5009               	movf	??___flge^0,w,c
  4038  001F12  100A               	iorwf	(??___flge+1)^0,w,c
  4039  001F14  100B               	iorwf	(??___flge+2)^0,w,c
  4040  001F16  100C               	iorwf	(??___flge+3)^0,w,c
  4041  001F18  A4D8               	btfss	status,2,c
  4042  001F1A  EF91  F00F         	goto	u3271
  4043  001F1E  EF93  F00F         	goto	u3270
  4044  001F22                     u3271:
  4045  001F22  EF9B  F00F         	goto	l3172
  4046  001F26                     u3270:
  4047  001F26  0E00               	movlw	0
  4048  001F28  6E05               	movwf	___flge@ff2^0,c
  4049  001F2A  0E00               	movlw	0
  4050  001F2C  6E06               	movwf	(___flge@ff2+1)^0,c
  4051  001F2E  0E00               	movlw	0
  4052  001F30  6E07               	movwf	(___flge@ff2+2)^0,c
  4053  001F32  0E00               	movlw	0
  4054  001F34  6E08               	movwf	(___flge@ff2+3)^0,c
  4055  001F36                     l3172:
  4056  001F36  AE04               	btfss	(___flge@ff1+3)^0,7,c
  4057  001F38  EFA0  F00F         	goto	u3281
  4058  001F3C  EFA2  F00F         	goto	u3280
  4059  001F40                     u3281:
  4060  001F40  EFAB  F00F         	goto	l3176
  4061  001F44                     u3280:
  4062  001F44  6C01               	negf	___flge@ff1^0,c
  4063  001F46  1E02               	comf	(___flge@ff1+1)^0,f,c
  4064  001F48  B0D8               	btfsc	status,0,c
  4065  001F4A  2A02               	incf	(___flge@ff1+1)^0,f,c
  4066  001F4C  1E03               	comf	(___flge@ff1+2)^0,f,c
  4067  001F4E  B0D8               	btfsc	status,0,c
  4068  001F50  2A03               	incf	(___flge@ff1+2)^0,f,c
  4069  001F52  0E80               	movlw	128
  4070  001F54  5604               	subfwb	(___flge@ff1+3)^0,f,c
  4071  001F56                     l3176:
  4072  001F56  AE08               	btfss	(___flge@ff2+3)^0,7,c
  4073  001F58  EFB0  F00F         	goto	u3291
  4074  001F5C  EFB2  F00F         	goto	u3290
  4075  001F60                     u3291:
  4076  001F60  EFBB  F00F         	goto	l680
  4077  001F64                     u3290:
  4078  001F64  6C05               	negf	___flge@ff2^0,c
  4079  001F66  1E06               	comf	(___flge@ff2+1)^0,f,c
  4080  001F68  B0D8               	btfsc	status,0,c
  4081  001F6A  2A06               	incf	(___flge@ff2+1)^0,f,c
  4082  001F6C  1E07               	comf	(___flge@ff2+2)^0,f,c
  4083  001F6E  B0D8               	btfsc	status,0,c
  4084  001F70  2A07               	incf	(___flge@ff2+2)^0,f,c
  4085  001F72  0E80               	movlw	128
  4086  001F74  5608               	subfwb	(___flge@ff2+3)^0,f,c
  4087  001F76                     l680:
  4088  001F76  0E00               	movlw	0
  4089  001F78  1A01               	xorwf	___flge@ff1^0,f,c
  4090  001F7A  0E00               	movlw	0
  4091  001F7C  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  4092  001F7E  0E00               	movlw	0
  4093  001F80  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  4094  001F82  0E80               	movlw	128
  4095  001F84  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  4096  001F86  0E00               	movlw	0
  4097  001F88  1A05               	xorwf	___flge@ff2^0,f,c
  4098  001F8A  0E00               	movlw	0
  4099  001F8C  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  4100  001F8E  0E00               	movlw	0
  4101  001F90  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  4102  001F92  0E80               	movlw	128
  4103  001F94  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  4104  001F96  5005               	movf	___flge@ff2^0,w,c
  4105  001F98  5C01               	subwf	___flge@ff1^0,w,c
  4106  001F9A  5006               	movf	(___flge@ff2+1)^0,w,c
  4107  001F9C  5802               	subwfb	(___flge@ff1+1)^0,w,c
  4108  001F9E  5007               	movf	(___flge@ff2+2)^0,w,c
  4109  001FA0  5803               	subwfb	(___flge@ff1+2)^0,w,c
  4110  001FA2  5008               	movf	(___flge@ff2+3)^0,w,c
  4111  001FA4  5804               	subwfb	(___flge@ff1+3)^0,w,c
  4112  001FA6  B0D8               	btfsc	status,0,c
  4113  001FA8  EFD8  F00F         	goto	u3301
  4114  001FAC  EFDA  F00F         	goto	u3300
  4115  001FB0                     u3301:
  4116  001FB0  EFDD  F00F         	goto	l3182
  4117  001FB4                     u3300:
  4118  001FB4  90D8               	bcf	status,0,c
  4119  001FB6  EFDE  F00F         	goto	l685
  4120  001FBA                     l3182:
  4121  001FBA  80D8               	bsf	status,0,c
  4122  001FBC                     l685:
  4123  001FBC  0012               	return		;funcret
  4124  001FBE                     __end_of___flge:
  4125                           	callstack 0
  4126                           
  4127 ;; *************** function ___fladd *****************
  4128 ;; Defined at:
  4129 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  b               4    0[COMRAM] void 
  4132 ;;  a               4    4[COMRAM] void 
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;  grs             1   15[COMRAM] unsigned char 
  4135 ;;  bexp            1   14[COMRAM] unsigned char 
  4136 ;;  aexp            1   13[COMRAM] unsigned char 
  4137 ;;  signs           1   12[COMRAM] unsigned char 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  4    0[COMRAM] unsigned char 
  4140 ;; Registers used:
  4141 ;;		wreg, status,2, status,0
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4147 ;;      Params:         8       0       0       0       0       0       0
  4148 ;;      Locals:         4       0       0       0       0       0       0
  4149 ;;      Temps:          4       0       0       0       0       0       0
  4150 ;;      Totals:        16       0       0       0       0       0       0
  4151 ;;Total ram usage:       16 bytes
  4152 ;; Hardware stack levels used: 1
  4153 ;; This function calls:
  4154 ;;		Nothing
  4155 ;; This function is called by:
  4156 ;;		_menuLigando
  4157 ;;		_contagem
  4158 ;;		_timer
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           	psect	text18
  4163  000698                     __ptext18:
  4164                           	callstack 0
  4165  000698                     ___fladd:
  4166                           	callstack 28
  4167  000698  5004               	movf	(___fladd@b+3)^0,w,c
  4168  00069A  0B80               	andlw	128
  4169  00069C  6E0D               	movwf	___fladd@signs^0,c
  4170  00069E  5004               	movf	(___fladd@b+3)^0,w,c
  4171  0006A0  2404               	addwf	(___fladd@b+3)^0,w,c
  4172  0006A2  6E0F               	movwf	___fladd@bexp^0,c
  4173  0006A4  AE03               	btfss	(___fladd@b+2)^0,7,c
  4174  0006A6  EF57  F003         	goto	u2751
  4175  0006AA  EF59  F003         	goto	u2750
  4176  0006AE                     u2751:
  4177  0006AE  EF5A  F003         	goto	l2888
  4178  0006B2                     u2750:
  4179  0006B2  800F               	bsf	___fladd@bexp^0,0,c
  4180  0006B4                     l2888:
  4181  0006B4  500F               	movf	___fladd@bexp^0,w,c
  4182  0006B6  B4D8               	btfsc	status,2,c
  4183  0006B8  EF60  F003         	goto	u2761
  4184  0006BC  EF62  F003         	goto	u2760
  4185  0006C0                     u2761:
  4186  0006C0  EF77  F003         	goto	l2898
  4187  0006C4                     u2760:
  4188  0006C4  280F               	incf	___fladd@bexp^0,w,c
  4189  0006C6  A4D8               	btfss	status,2,c
  4190  0006C8  EF68  F003         	goto	u2771
  4191  0006CC  EF6A  F003         	goto	u2770
  4192  0006D0                     u2771:
  4193  0006D0  EF72  F003         	goto	l2894
  4194  0006D4                     u2770:
  4195  0006D4  0E00               	movlw	0
  4196  0006D6  6E01               	movwf	___fladd@b^0,c
  4197  0006D8  0E00               	movlw	0
  4198  0006DA  6E02               	movwf	(___fladd@b+1)^0,c
  4199  0006DC  0E00               	movlw	0
  4200  0006DE  6E03               	movwf	(___fladd@b+2)^0,c
  4201  0006E0  0E00               	movlw	0
  4202  0006E2  6E04               	movwf	(___fladd@b+3)^0,c
  4203  0006E4                     l2894:
  4204  0006E4  8E03               	bsf	(___fladd@b+2)^0,7,c
  4205  0006E6  0E00               	movlw	0
  4206  0006E8  6E04               	movwf	(___fladd@b+3)^0,c
  4207  0006EA  EF7F  F003         	goto	l2900
  4208  0006EE                     l2898:
  4209  0006EE  0E00               	movlw	0
  4210  0006F0  6E01               	movwf	___fladd@b^0,c
  4211  0006F2  0E00               	movlw	0
  4212  0006F4  6E02               	movwf	(___fladd@b+1)^0,c
  4213  0006F6  0E00               	movlw	0
  4214  0006F8  6E03               	movwf	(___fladd@b+2)^0,c
  4215  0006FA  0E00               	movlw	0
  4216  0006FC  6E04               	movwf	(___fladd@b+3)^0,c
  4217  0006FE                     l2900:
  4218  0006FE  5008               	movf	(___fladd@a+3)^0,w,c
  4219  000700  0B80               	andlw	128
  4220  000702  6E0E               	movwf	___fladd@aexp^0,c
  4221  000704  500D               	movf	___fladd@signs^0,w,c
  4222  000706  180E               	xorwf	___fladd@aexp^0,w,c
  4223  000708  B4D8               	btfsc	status,2,c
  4224  00070A  EF89  F003         	goto	u2781
  4225  00070E  EF8B  F003         	goto	u2780
  4226  000712                     u2781:
  4227  000712  EF8C  F003         	goto	l2906
  4228  000716                     u2780:
  4229  000716  8C0D               	bsf	___fladd@signs^0,6,c
  4230  000718                     l2906:
  4231  000718  5008               	movf	(___fladd@a+3)^0,w,c
  4232  00071A  2408               	addwf	(___fladd@a+3)^0,w,c
  4233  00071C  6E0E               	movwf	___fladd@aexp^0,c
  4234  00071E  AE07               	btfss	(___fladd@a+2)^0,7,c
  4235  000720  EF94  F003         	goto	u2791
  4236  000724  EF96  F003         	goto	u2790
  4237  000728                     u2791:
  4238  000728  EF97  F003         	goto	l2912
  4239  00072C                     u2790:
  4240  00072C  800E               	bsf	___fladd@aexp^0,0,c
  4241  00072E                     l2912:
  4242  00072E  500E               	movf	___fladd@aexp^0,w,c
  4243  000730  B4D8               	btfsc	status,2,c
  4244  000732  EF9D  F003         	goto	u2801
  4245  000736  EF9F  F003         	goto	u2800
  4246  00073A                     u2801:
  4247  00073A  EFB4  F003         	goto	l2922
  4248  00073E                     u2800:
  4249  00073E  280E               	incf	___fladd@aexp^0,w,c
  4250  000740  A4D8               	btfss	status,2,c
  4251  000742  EFA5  F003         	goto	u2811
  4252  000746  EFA7  F003         	goto	u2810
  4253  00074A                     u2811:
  4254  00074A  EFAF  F003         	goto	l2918
  4255  00074E                     u2810:
  4256  00074E  0E00               	movlw	0
  4257  000750  6E05               	movwf	___fladd@a^0,c
  4258  000752  0E00               	movlw	0
  4259  000754  6E06               	movwf	(___fladd@a+1)^0,c
  4260  000756  0E00               	movlw	0
  4261  000758  6E07               	movwf	(___fladd@a+2)^0,c
  4262  00075A  0E00               	movlw	0
  4263  00075C  6E08               	movwf	(___fladd@a+3)^0,c
  4264  00075E                     l2918:
  4265  00075E  8E07               	bsf	(___fladd@a+2)^0,7,c
  4266  000760  0E00               	movlw	0
  4267  000762  6E08               	movwf	(___fladd@a+3)^0,c
  4268  000764  EFBC  F003         	goto	l2924
  4269  000768                     l2922:
  4270  000768  0E00               	movlw	0
  4271  00076A  6E05               	movwf	___fladd@a^0,c
  4272  00076C  0E00               	movlw	0
  4273  00076E  6E06               	movwf	(___fladd@a+1)^0,c
  4274  000770  0E00               	movlw	0
  4275  000772  6E07               	movwf	(___fladd@a+2)^0,c
  4276  000774  0E00               	movlw	0
  4277  000776  6E08               	movwf	(___fladd@a+3)^0,c
  4278  000778                     l2924:
  4279  000778  500F               	movf	___fladd@bexp^0,w,c
  4280  00077A  5C0E               	subwf	___fladd@aexp^0,w,c
  4281  00077C  B0D8               	btfsc	status,0,c
  4282  00077E  EFC3  F003         	goto	u2821
  4283  000782  EFC5  F003         	goto	u2820
  4284  000786                     u2821:
  4285  000786  EFEC  F003         	goto	l2960
  4286  00078A                     u2820:
  4287  00078A  AC0D               	btfss	___fladd@signs^0,6,c
  4288  00078C  EFCA  F003         	goto	u2831
  4289  000790  EFCC  F003         	goto	u2830
  4290  000794                     u2831:
  4291  000794  EFCE  F003         	goto	l2930
  4292  000798                     u2830:
  4293  000798  0E80               	movlw	128
  4294  00079A  1A0D               	xorwf	___fladd@signs^0,f,c
  4295  00079C                     l2930:
  4296  00079C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4297  0007A0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4298  0007A4  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4299  0007A8  C001  F010         	movff	___fladd@b,___fladd@grs
  4300  0007AC  C005  F001         	movff	___fladd@a,___fladd@b
  4301  0007B0  C010  F005         	movff	___fladd@grs,___fladd@a
  4302  0007B4  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4303  0007B8  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4304  0007BC  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4305  0007C0  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4306  0007C4  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4307  0007C8  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4308  0007CC  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4309  0007D0  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4310  0007D4  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4311  0007D8                     l2960:
  4312  0007D8  0E00               	movlw	0
  4313  0007DA  6E10               	movwf	___fladd@grs^0,c
  4314  0007DC  500F               	movf	___fladd@bexp^0,w,c
  4315  0007DE  C00E  F009         	movff	___fladd@aexp,??___fladd
  4316  0007E2  6A0A               	clrf	(??___fladd+1)^0,c
  4317  0007E4  5E09               	subwf	??___fladd^0,f,c
  4318  0007E6  0E00               	movlw	0
  4319  0007E8  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4320  0007EA  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4321  0007EC  EF01  F004         	goto	u2841
  4322  0007F0  500A               	movf	(??___fladd+1)^0,w,c
  4323  0007F2  E109               	bnz	u2840
  4324  0007F4  0E1A               	movlw	26
  4325  0007F6  5C09               	subwf	??___fladd^0,w,c
  4326  0007F8  A0D8               	btfss	status,0,c
  4327  0007FA  EF01  F004         	goto	u2841
  4328  0007FE  EF03  F004         	goto	u2840
  4329  000802                     u2841:
  4330  000802  EF3A  F004         	goto	l944
  4331  000806                     u2840:
  4332  000806  5001               	movf	___fladd@b^0,w,c
  4333  000808  1002               	iorwf	(___fladd@b+1)^0,w,c
  4334  00080A  1003               	iorwf	(___fladd@b+2)^0,w,c
  4335  00080C  1004               	iorwf	(___fladd@b+3)^0,w,c
  4336  00080E  A4D8               	btfss	status,2,c
  4337  000810  EF0C  F004         	goto	u2851
  4338  000814  EF0F  F004         	goto	u2850
  4339  000818                     u2851:
  4340  000818  0E01               	movlw	1
  4341  00081A  EF10  F004         	goto	u2860
  4342  00081E                     u2850:
  4343  00081E  0E00               	movlw	0
  4344  000820                     u2860:
  4345  000820  6E10               	movwf	___fladd@grs^0,c
  4346  000822  0E00               	movlw	0
  4347  000824  6E01               	movwf	___fladd@b^0,c
  4348  000826  0E00               	movlw	0
  4349  000828  6E02               	movwf	(___fladd@b+1)^0,c
  4350  00082A  0E00               	movlw	0
  4351  00082C  6E03               	movwf	(___fladd@b+2)^0,c
  4352  00082E  0E00               	movlw	0
  4353  000830  6E04               	movwf	(___fladd@b+3)^0,c
  4354  000832  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4355  000836  EF43  F004         	goto	l943
  4356  00083A                     l945:
  4357  00083A  A010               	btfss	___fladd@grs^0,0,c
  4358  00083C  EF22  F004         	goto	u2871
  4359  000840  EF24  F004         	goto	u2870
  4360  000844                     u2871:
  4361  000844  EF2A  F004         	goto	l2972
  4362  000848                     u2870:
  4363  000848  90D8               	bcf	status,0,c
  4364  00084A  3010               	rrcf	___fladd@grs^0,w,c
  4365  00084C  0901               	iorlw	1
  4366  00084E  6E10               	movwf	___fladd@grs^0,c
  4367  000850  EF2C  F004         	goto	l2974
  4368  000854                     l2972:
  4369  000854  90D8               	bcf	status,0,c
  4370  000856  3210               	rrcf	___fladd@grs^0,f,c
  4371  000858                     l2974:
  4372  000858  A001               	btfss	___fladd@b^0,0,c
  4373  00085A  EF31  F004         	goto	u2881
  4374  00085E  EF33  F004         	goto	u2880
  4375  000862                     u2881:
  4376  000862  EF34  F004         	goto	l2978
  4377  000866                     u2880:
  4378  000866  8E10               	bsf	___fladd@grs^0,7,c
  4379  000868                     l2978:
  4380  000868  3404               	rlcf	(___fladd@b+3)^0,w,c
  4381  00086A  3204               	rrcf	(___fladd@b+3)^0,f,c
  4382  00086C  3203               	rrcf	(___fladd@b+2)^0,f,c
  4383  00086E  3202               	rrcf	(___fladd@b+1)^0,f,c
  4384  000870  3201               	rrcf	___fladd@b^0,f,c
  4385  000872  2A0F               	incf	___fladd@bexp^0,f,c
  4386  000874                     l944:
  4387  000874  500E               	movf	___fladd@aexp^0,w,c
  4388  000876  5C0F               	subwf	___fladd@bexp^0,w,c
  4389  000878  A0D8               	btfss	status,0,c
  4390  00087A  EF41  F004         	goto	u2891
  4391  00087E  EF43  F004         	goto	u2890
  4392  000882                     u2891:
  4393  000882  EF1D  F004         	goto	l945
  4394  000886                     u2890:
  4395  000886                     l943:
  4396  000886  BC0D               	btfsc	___fladd@signs^0,6,c
  4397  000888  EF48  F004         	goto	u2901
  4398  00088C  EF4A  F004         	goto	u2900
  4399  000890                     u2901:
  4400  000890  EF8A  F004         	goto	l3006
  4401  000894                     u2900:
  4402  000894  500F               	movf	___fladd@bexp^0,w,c
  4403  000896  A4D8               	btfss	status,2,c
  4404  000898  EF50  F004         	goto	u2911
  4405  00089C  EF52  F004         	goto	u2910
  4406  0008A0                     u2911:
  4407  0008A0  EF5C  F004         	goto	l2988
  4408  0008A4                     u2910:
  4409  0008A4  0E00               	movlw	0
  4410  0008A6  6E01               	movwf	?___fladd^0,c
  4411  0008A8  0E00               	movlw	0
  4412  0008AA  6E02               	movwf	(?___fladd+1)^0,c
  4413  0008AC  0E00               	movlw	0
  4414  0008AE  6E03               	movwf	(?___fladd+2)^0,c
  4415  0008B0  0E00               	movlw	0
  4416  0008B2  6E04               	movwf	(?___fladd+3)^0,c
  4417  0008B4  EFAB  F005         	goto	l952
  4418  0008B8                     l2988:
  4419  0008B8  5005               	movf	___fladd@a^0,w,c
  4420  0008BA  2601               	addwf	___fladd@b^0,f,c
  4421  0008BC  5006               	movf	(___fladd@a+1)^0,w,c
  4422  0008BE  2202               	addwfc	(___fladd@b+1)^0,f,c
  4423  0008C0  5007               	movf	(___fladd@a+2)^0,w,c
  4424  0008C2  2203               	addwfc	(___fladd@b+2)^0,f,c
  4425  0008C4  5008               	movf	(___fladd@a+3)^0,w,c
  4426  0008C6  2204               	addwfc	(___fladd@b+3)^0,f,c
  4427  0008C8  A004               	btfss	(___fladd@b+3)^0,0,c
  4428  0008CA  EF69  F004         	goto	u2921
  4429  0008CE  EF6B  F004         	goto	u2920
  4430  0008D2                     u2921:
  4431  0008D2  EF17  F005         	goto	l3042
  4432  0008D6                     u2920:
  4433  0008D6  A010               	btfss	___fladd@grs^0,0,c
  4434  0008D8  EF70  F004         	goto	u2931
  4435  0008DC  EF72  F004         	goto	u2930
  4436  0008E0                     u2931:
  4437  0008E0  EF78  F004         	goto	l2996
  4438  0008E4                     u2930:
  4439  0008E4  90D8               	bcf	status,0,c
  4440  0008E6  3010               	rrcf	___fladd@grs^0,w,c
  4441  0008E8  0901               	iorlw	1
  4442  0008EA  6E10               	movwf	___fladd@grs^0,c
  4443  0008EC  EF7A  F004         	goto	l2998
  4444  0008F0                     l2996:
  4445  0008F0  90D8               	bcf	status,0,c
  4446  0008F2  3210               	rrcf	___fladd@grs^0,f,c
  4447  0008F4                     l2998:
  4448  0008F4  A001               	btfss	___fladd@b^0,0,c
  4449  0008F6  EF7F  F004         	goto	u2941
  4450  0008FA  EF81  F004         	goto	u2940
  4451  0008FE                     u2941:
  4452  0008FE  EF82  F004         	goto	l3002
  4453  000902                     u2940:
  4454  000902  8E10               	bsf	___fladd@grs^0,7,c
  4455  000904                     l3002:
  4456  000904  3404               	rlcf	(___fladd@b+3)^0,w,c
  4457  000906  3204               	rrcf	(___fladd@b+3)^0,f,c
  4458  000908  3203               	rrcf	(___fladd@b+2)^0,f,c
  4459  00090A  3202               	rrcf	(___fladd@b+1)^0,f,c
  4460  00090C  3201               	rrcf	___fladd@b^0,f,c
  4461  00090E  2A0F               	incf	___fladd@bexp^0,f,c
  4462  000910  EF17  F005         	goto	l3042
  4463  000914                     l3006:
  4464  000914  5005               	movf	___fladd@a^0,w,c
  4465  000916  5C01               	subwf	___fladd@b^0,w,c
  4466  000918  5006               	movf	(___fladd@a+1)^0,w,c
  4467  00091A  5802               	subwfb	(___fladd@b+1)^0,w,c
  4468  00091C  5007               	movf	(___fladd@a+2)^0,w,c
  4469  00091E  5803               	subwfb	(___fladd@b+2)^0,w,c
  4470  000920  5004               	movf	(___fladd@b+3)^0,w,c
  4471  000922  0A80               	xorlw	128
  4472  000924  6E09               	movwf	??___fladd^0,c
  4473  000926  5008               	movf	(___fladd@a+3)^0,w,c
  4474  000928  0A80               	xorlw	128
  4475  00092A  5809               	subwfb	??___fladd^0,w,c
  4476  00092C  B0D8               	btfsc	status,0,c
  4477  00092E  EF9B  F004         	goto	u2951
  4478  000932  EF9D  F004         	goto	u2950
  4479  000936                     u2951:
  4480  000936  EFC8  F004         	goto	l3016
  4481  00093A                     u2950:
  4482  00093A  5001               	movf	___fladd@b^0,w,c
  4483  00093C  5C05               	subwf	___fladd@a^0,w,c
  4484  00093E  6E09               	movwf	??___fladd^0,c
  4485  000940  5002               	movf	(___fladd@b+1)^0,w,c
  4486  000942  5806               	subwfb	(___fladd@a+1)^0,w,c
  4487  000944  6E0A               	movwf	(??___fladd+1)^0,c
  4488  000946  5003               	movf	(___fladd@b+2)^0,w,c
  4489  000948  5807               	subwfb	(___fladd@a+2)^0,w,c
  4490  00094A  6E0B               	movwf	(??___fladd+2)^0,c
  4491  00094C  5004               	movf	(___fladd@b+3)^0,w,c
  4492  00094E  5808               	subwfb	(___fladd@a+3)^0,w,c
  4493  000950  6E0C               	movwf	(??___fladd+3)^0,c
  4494  000952  0EFF               	movlw	255
  4495  000954  2409               	addwf	??___fladd^0,w,c
  4496  000956  6E01               	movwf	___fladd@b^0,c
  4497  000958  0EFF               	movlw	255
  4498  00095A  200A               	addwfc	(??___fladd+1)^0,w,c
  4499  00095C  6E02               	movwf	(___fladd@b+1)^0,c
  4500  00095E  0EFF               	movlw	255
  4501  000960  200B               	addwfc	(??___fladd+2)^0,w,c
  4502  000962  6E03               	movwf	(___fladd@b+2)^0,c
  4503  000964  0EFF               	movlw	255
  4504  000966  200C               	addwfc	(??___fladd+3)^0,w,c
  4505  000968  6E04               	movwf	(___fladd@b+3)^0,c
  4506  00096A  0E80               	movlw	128
  4507  00096C  1A0D               	xorwf	___fladd@signs^0,f,c
  4508  00096E  6C10               	negf	___fladd@grs^0,c
  4509  000970  5010               	movf	___fladd@grs^0,w,c
  4510  000972  A4D8               	btfss	status,2,c
  4511  000974  EFBE  F004         	goto	u2961
  4512  000978  EFC0  F004         	goto	u2960
  4513  00097C                     u2961:
  4514  00097C  EFD0  F004         	goto	l960
  4515  000980                     u2960:
  4516  000980  0E01               	movlw	1
  4517  000982  2601               	addwf	___fladd@b^0,f,c
  4518  000984  0E00               	movlw	0
  4519  000986  2202               	addwfc	(___fladd@b+1)^0,f,c
  4520  000988  2203               	addwfc	(___fladd@b+2)^0,f,c
  4521  00098A  2204               	addwfc	(___fladd@b+3)^0,f,c
  4522  00098C  EFD0  F004         	goto	l960
  4523  000990                     l3016:
  4524  000990  5005               	movf	___fladd@a^0,w,c
  4525  000992  5E01               	subwf	___fladd@b^0,f,c
  4526  000994  5006               	movf	(___fladd@a+1)^0,w,c
  4527  000996  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4528  000998  5007               	movf	(___fladd@a+2)^0,w,c
  4529  00099A  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4530  00099C  5008               	movf	(___fladd@a+3)^0,w,c
  4531  00099E  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4532  0009A0                     l960:
  4533  0009A0  5001               	movf	___fladd@b^0,w,c
  4534  0009A2  1002               	iorwf	(___fladd@b+1)^0,w,c
  4535  0009A4  1003               	iorwf	(___fladd@b+2)^0,w,c
  4536  0009A6  1004               	iorwf	(___fladd@b+3)^0,w,c
  4537  0009A8  A4D8               	btfss	status,2,c
  4538  0009AA  EFD9  F004         	goto	u2971
  4539  0009AE  EFDB  F004         	goto	u2970
  4540  0009B2                     u2971:
  4541  0009B2  EF10  F005         	goto	l3040
  4542  0009B6                     u2970:
  4543  0009B6  5010               	movf	___fladd@grs^0,w,c
  4544  0009B8  A4D8               	btfss	status,2,c
  4545  0009BA  EFE1  F004         	goto	u2981
  4546  0009BE  EFE3  F004         	goto	u2980
  4547  0009C2                     u2981:
  4548  0009C2  EF10  F005         	goto	l3040
  4549  0009C6                     u2980:
  4550  0009C6  0E00               	movlw	0
  4551  0009C8  6E01               	movwf	?___fladd^0,c
  4552  0009CA  0E00               	movlw	0
  4553  0009CC  6E02               	movwf	(?___fladd+1)^0,c
  4554  0009CE  0E00               	movlw	0
  4555  0009D0  6E03               	movwf	(?___fladd+2)^0,c
  4556  0009D2  0E00               	movlw	0
  4557  0009D4  6E04               	movwf	(?___fladd+3)^0,c
  4558  0009D6  EFAB  F005         	goto	l952
  4559  0009DA                     l3024:
  4560  0009DA  90D8               	bcf	status,0,c
  4561  0009DC  3601               	rlcf	___fladd@b^0,f,c
  4562  0009DE  3602               	rlcf	(___fladd@b+1)^0,f,c
  4563  0009E0  3603               	rlcf	(___fladd@b+2)^0,f,c
  4564  0009E2  3604               	rlcf	(___fladd@b+3)^0,f,c
  4565  0009E4  AE10               	btfss	___fladd@grs^0,7,c
  4566  0009E6  EFF7  F004         	goto	u2991
  4567  0009EA  EFF9  F004         	goto	u2990
  4568  0009EE                     u2991:
  4569  0009EE  EFFA  F004         	goto	l3030
  4570  0009F2                     u2990:
  4571  0009F2  8001               	bsf	___fladd@b^0,0,c
  4572  0009F4                     l3030:
  4573  0009F4  A010               	btfss	___fladd@grs^0,0,c
  4574  0009F6  EFFF  F004         	goto	u3001
  4575  0009FA  EF01  F005         	goto	u3000
  4576  0009FE                     u3001:
  4577  0009FE  EF05  F005         	goto	l3034
  4578  000A02                     u3000:
  4579  000A02  80D8               	bsf	status,0,c
  4580  000A04  3610               	rlcf	___fladd@grs^0,f,c
  4581  000A06  EF07  F005         	goto	l3036
  4582  000A0A                     l3034:
  4583  000A0A  90D8               	bcf	status,0,c
  4584  000A0C  3610               	rlcf	___fladd@grs^0,f,c
  4585  000A0E                     l3036:
  4586  000A0E  500F               	movf	___fladd@bexp^0,w,c
  4587  000A10  B4D8               	btfsc	status,2,c
  4588  000A12  EF0D  F005         	goto	u3011
  4589  000A16  EF0F  F005         	goto	u3010
  4590  000A1A                     u3011:
  4591  000A1A  EF10  F005         	goto	l3040
  4592  000A1E                     u3010:
  4593  000A1E  060F               	decf	___fladd@bexp^0,f,c
  4594  000A20                     l3040:
  4595  000A20  AE03               	btfss	(___fladd@b+2)^0,7,c
  4596  000A22  EF15  F005         	goto	u3021
  4597  000A26  EF17  F005         	goto	u3020
  4598  000A2A                     u3021:
  4599  000A2A  EFED  F004         	goto	l3024
  4600  000A2E                     u3020:
  4601  000A2E                     l3042:
  4602  000A2E  0E00               	movlw	0
  4603  000A30  6E0E               	movwf	___fladd@aexp^0,c
  4604  000A32  AE10               	btfss	___fladd@grs^0,7,c
  4605  000A34  EF1E  F005         	goto	u3031
  4606  000A38  EF20  F005         	goto	u3030
  4607  000A3C                     u3031:
  4608  000A3C  EF38  F005         	goto	l969
  4609  000A40                     u3030:
  4610  000A40  C010  F009         	movff	___fladd@grs,??___fladd
  4611  000A44  0E7F               	movlw	127
  4612  000A46  1609               	andwf	??___fladd^0,f,c
  4613  000A48  B4D8               	btfsc	status,2,c
  4614  000A4A  EF29  F005         	goto	u3041
  4615  000A4E  EF2B  F005         	goto	u3040
  4616  000A52                     u3041:
  4617  000A52  EF2F  F005         	goto	l970
  4618  000A56                     u3040:
  4619  000A56                     l3048:
  4620  000A56  0E01               	movlw	1
  4621  000A58  6E0E               	movwf	___fladd@aexp^0,c
  4622  000A5A  EF38  F005         	goto	l969
  4623  000A5E                     l970:
  4624  000A5E  A001               	btfss	___fladd@b^0,0,c
  4625  000A60  EF34  F005         	goto	u3051
  4626  000A64  EF36  F005         	goto	u3050
  4627  000A68                     u3051:
  4628  000A68  EF38  F005         	goto	l969
  4629  000A6C                     u3050:
  4630  000A6C  EF2B  F005         	goto	l3048
  4631  000A70                     l969:
  4632  000A70  500E               	movf	___fladd@aexp^0,w,c
  4633  000A72  B4D8               	btfsc	status,2,c
  4634  000A74  EF3E  F005         	goto	u3061
  4635  000A78  EF40  F005         	goto	u3060
  4636  000A7C                     u3061:
  4637  000A7C  EF6B  F005         	goto	l3060
  4638  000A80                     u3060:
  4639  000A80  0E01               	movlw	1
  4640  000A82  2601               	addwf	___fladd@b^0,f,c
  4641  000A84  0E00               	movlw	0
  4642  000A86  2202               	addwfc	(___fladd@b+1)^0,f,c
  4643  000A88  2203               	addwfc	(___fladd@b+2)^0,f,c
  4644  000A8A  2204               	addwfc	(___fladd@b+3)^0,f,c
  4645  000A8C  A004               	btfss	(___fladd@b+3)^0,0,c
  4646  000A8E  EF4B  F005         	goto	u3071
  4647  000A92  EF4D  F005         	goto	u3070
  4648  000A96                     u3071:
  4649  000A96  EF6B  F005         	goto	l3060
  4650  000A9A                     u3070:
  4651  000A9A  C001  F009         	movff	___fladd@b,??___fladd
  4652  000A9E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4653  000AA2  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4654  000AA6  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4655  000AAA  340C               	rlcf	(??___fladd+3)^0,w,c
  4656  000AAC  320C               	rrcf	(??___fladd+3)^0,f,c
  4657  000AAE  320B               	rrcf	(??___fladd+2)^0,f,c
  4658  000AB0  320A               	rrcf	(??___fladd+1)^0,f,c
  4659  000AB2  3209               	rrcf	??___fladd^0,f,c
  4660  000AB4  C009  F001         	movff	??___fladd,___fladd@b
  4661  000AB8  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  4662  000ABC  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  4663  000AC0  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  4664  000AC4  280F               	incf	___fladd@bexp^0,w,c
  4665  000AC6  B4D8               	btfsc	status,2,c
  4666  000AC8  EF68  F005         	goto	u3081
  4667  000ACC  EF6A  F005         	goto	u3080
  4668  000AD0                     u3081:
  4669  000AD0  EF6B  F005         	goto	l3060
  4670  000AD4                     u3080:
  4671  000AD4  2A0F               	incf	___fladd@bexp^0,f,c
  4672  000AD6                     l3060:
  4673  000AD6  280F               	incf	___fladd@bexp^0,w,c
  4674  000AD8  B4D8               	btfsc	status,2,c
  4675  000ADA  EF71  F005         	goto	u3091
  4676  000ADE  EF73  F005         	goto	u3090
  4677  000AE2                     u3091:
  4678  000AE2  EF7B  F005         	goto	l3064
  4679  000AE6                     u3090:
  4680  000AE6  500F               	movf	___fladd@bexp^0,w,c
  4681  000AE8  A4D8               	btfss	status,2,c
  4682  000AEA  EF79  F005         	goto	u3101
  4683  000AEE  EF7B  F005         	goto	u3100
  4684  000AF2                     u3101:
  4685  000AF2  EF8D  F005         	goto	l3068
  4686  000AF6                     u3100:
  4687  000AF6                     l3064:
  4688  000AF6  0E00               	movlw	0
  4689  000AF8  6E01               	movwf	___fladd@b^0,c
  4690  000AFA  0E00               	movlw	0
  4691  000AFC  6E02               	movwf	(___fladd@b+1)^0,c
  4692  000AFE  0E00               	movlw	0
  4693  000B00  6E03               	movwf	(___fladd@b+2)^0,c
  4694  000B02  0E00               	movlw	0
  4695  000B04  6E04               	movwf	(___fladd@b+3)^0,c
  4696  000B06  500F               	movf	___fladd@bexp^0,w,c
  4697  000B08  A4D8               	btfss	status,2,c
  4698  000B0A  EF89  F005         	goto	u3111
  4699  000B0E  EF8B  F005         	goto	u3110
  4700  000B12                     u3111:
  4701  000B12  EF8D  F005         	goto	l3068
  4702  000B16                     u3110:
  4703  000B16  0E00               	movlw	0
  4704  000B18  6E0D               	movwf	___fladd@signs^0,c
  4705  000B1A                     l3068:
  4706  000B1A  A00F               	btfss	___fladd@bexp^0,0,c
  4707  000B1C  EF92  F005         	goto	u3121
  4708  000B20  EF94  F005         	goto	u3120
  4709  000B24                     u3121:
  4710  000B24  EF97  F005         	goto	l3072
  4711  000B28                     u3120:
  4712  000B28  8E03               	bsf	(___fladd@b+2)^0,7,c
  4713  000B2A  EF98  F005         	goto	l3074
  4714  000B2E                     l3072:
  4715  000B2E  9E03               	bcf	(___fladd@b+2)^0,7,c
  4716  000B30                     l3074:
  4717  000B30  90D8               	bcf	status,0,c
  4718  000B32  300F               	rrcf	___fladd@bexp^0,w,c
  4719  000B34  6E04               	movwf	(___fladd@b+3)^0,c
  4720  000B36  AE0D               	btfss	___fladd@signs^0,7,c
  4721  000B38  EFA0  F005         	goto	u3131
  4722  000B3C  EFA2  F005         	goto	u3130
  4723  000B40                     u3131:
  4724  000B40  EFA3  F005         	goto	l3080
  4725  000B44                     u3130:
  4726  000B44  8E04               	bsf	(___fladd@b+3)^0,7,c
  4727  000B46                     l3080:
  4728  000B46  C001  F001         	movff	___fladd@b,?___fladd
  4729  000B4A  C002  F002         	movff	___fladd@b+1,?___fladd+1
  4730  000B4E  C003  F003         	movff	___fladd@b+2,?___fladd+2
  4731  000B52  C004  F004         	movff	___fladd@b+3,?___fladd+3
  4732  000B56                     l952:
  4733  000B56  0012               	return		;funcret
  4734  000B58                     __end_of___fladd:
  4735                           	callstack 0
  4736                           
  4737 ;; *************** function _kpInit *****************
  4738 ;; Defined at:
  4739 ;;		line 87 in file "keypad.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;		None
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;		None
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      void 
  4746 ;; Registers used:
  4747 ;;		wreg, status,2, status,0
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4753 ;;      Params:         0       0       0       0       0       0       0
  4754 ;;      Locals:         0       0       0       0       0       0       0
  4755 ;;      Temps:          0       0       0       0       0       0       0
  4756 ;;      Totals:         0       0       0       0       0       0       0
  4757 ;;Total ram usage:        0 bytes
  4758 ;; Hardware stack levels used: 1
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_standBy
  4763 ;;		_timer
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text19
  4768  0028C8                     __ptext19:
  4769                           	callstack 0
  4770  0028C8                     _kpInit:
  4771                           	callstack 29
  4772  0028C8                     
  4773                           ;keypad.c: 89:     TRISB &= 0x07;
  4774  0028C8  0E07               	movlw	7
  4775  0028CA  1693               	andwf	147,f,c	;volatile
  4776                           
  4777                           ;keypad.c: 91:     TRISD |= 0x0f;
  4778  0028CC  0E0F               	movlw	15
  4779  0028CE  1295               	iorwf	149,f,c	;volatile
  4780  0028D0  0012               	return		;funcret
  4781  0028D2                     __end_of_kpInit:
  4782                           	callstack 0
  4783                           
  4784 ;; *************** function _potencia *****************
  4785 ;; Defined at:
  4786 ;;		line 118 in file "funcoes.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;		None
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;  tecla           2   54[COMRAM] unsigned int 
  4791 ;;  porcentagem    32   20[COMRAM] unsigned char [32]
  4792 ;;  ptc             2   56[COMRAM] int 
  4793 ;;  i               2   52[COMRAM] int 
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  1    wreg      void 
  4796 ;; Registers used:
  4797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4803 ;;      Params:         0       0       0       0       0       0       0
  4804 ;;      Locals:        38       0       0       0       0       0       0
  4805 ;;      Temps:          0       0       0       0       0       0       0
  4806 ;;      Totals:        38       0       0       0       0       0       0
  4807 ;;Total ram usage:       38 bytes
  4808 ;; Hardware stack levels used: 1
  4809 ;; Hardware stack levels required when called: 3
  4810 ;; This function calls:
  4811 ;;		_kpDebounce
  4812 ;;		_kpRead
  4813 ;;		_lcdCommand
  4814 ;;		_lcdData
  4815 ;;		_lcdNumber
  4816 ;;		_lcdString
  4817 ;;		_pwmSet1
  4818 ;; This function is called by:
  4819 ;;		_menu
  4820 ;; This function uses a non-reentrant model
  4821 ;;
  4822                           
  4823                           	psect	text20
  4824  00169A                     __ptext20:
  4825                           	callstack 0
  4826  00169A                     _potencia:
  4827                           	callstack 26
  4828  00169A                     
  4829                           ;funcoes.c: 119:     int i;;funcoes.c: 120:     char porcentagem[32] = {
  4830  00169A  EE20  F0B0         	lfsr	2,potencia@F49
  4831  00169E  EE10  F015         	lfsr	1,potencia@porcentagem
  4832  0016A2  0E1F               	movlw	31
  4833  0016A4                     u3611:
  4834  0016A4  CFDB FFE3          	movff	plusw2,plusw1
  4835  0016A8  06E8               	decf	wreg,f,c
  4836  0016AA  E2FC               	bc	u3611
  4837  0016AC                     
  4838                           ;funcoes.c: 126:     lcdCommand(0x01);
  4839  0016AC  0E01               	movlw	1
  4840  0016AE  ECD9  F011         	call	_lcdCommand
  4841  0016B2                     
  4842                           ;funcoes.c: 128:     int ptc = 0;
  4843  0016B2  0E00               	movlw	0
  4844  0016B4  6E3A               	movwf	(potencia@ptc+1)^0,c
  4845  0016B6  0E00               	movlw	0
  4846  0016B8  6E39               	movwf	potencia@ptc^0,c
  4847  0016BA                     l3430:
  4848                           
  4849                           ;funcoes.c: 130:         unsigned int tecla;;funcoes.c: 131:         lcdCommand(0x80);
  4850  0016BA  0E80               	movlw	128
  4851  0016BC  ECD9  F011         	call	_lcdCommand
  4852  0016C0                     
  4853                           ;funcoes.c: 132:         lcdString("Potencia:");
  4854  0016C0  0E6C               	movlw	low STR_8
  4855  0016C2  6E09               	movwf	lcdString@msg^0,c
  4856  0016C4  0E06               	movlw	high STR_8
  4857  0016C6  6E0A               	movwf	(lcdString@msg+1)^0,c
  4858  0016C8  EC87  F013         	call	_lcdString	;wreg free
  4859  0016CC                     
  4860                           ;funcoes.c: 133:         lcdCommand(0xC0);
  4861  0016CC  0EC0               	movlw	192
  4862  0016CE  ECD9  F011         	call	_lcdCommand
  4863  0016D2                     
  4864                           ;funcoes.c: 134:         lcdCommand(0xD0);
  4865  0016D2  0ED0               	movlw	208
  4866  0016D4  ECD9  F011         	call	_lcdCommand
  4867  0016D8                     
  4868                           ;funcoes.c: 135:         lcdString("Voltar:(*)");
  4869  0016D8  0E4B               	movlw	low STR_9
  4870  0016DA  6E09               	movwf	lcdString@msg^0,c
  4871  0016DC  0E06               	movlw	high STR_9
  4872  0016DE  6E0A               	movwf	(lcdString@msg+1)^0,c
  4873  0016E0  EC87  F013         	call	_lcdString	;wreg free
  4874  0016E4                     
  4875                           ;funcoes.c: 136:         kpDebounce();
  4876  0016E4  ECEF  F00C         	call	_kpDebounce	;wreg free
  4877  0016E8                     
  4878                           ;funcoes.c: 137:         if (tecla != kpRead()) {
  4879  0016E8  EC69  F014         	call	_kpRead	;wreg free
  4880  0016EC  5037               	movf	potencia@tecla^0,w,c
  4881  0016EE  1801               	xorwf	?_kpRead^0,w,c
  4882  0016F0  E109               	bnz	u3620
  4883  0016F2  5038               	movf	(potencia@tecla+1)^0,w,c
  4884  0016F4  1802               	xorwf	(?_kpRead+1)^0,w,c
  4885  0016F6  B4D8               	btfsc	status,2,c
  4886  0016F8  EF80  F00B         	goto	u3621
  4887  0016FC  EF82  F00B         	goto	u3620
  4888  001700                     u3621:
  4889  001700  EFE1  F00B         	goto	l3472
  4890  001704                     u3620:
  4891  001704                     
  4892                           ;funcoes.c: 138:             tecla = kpRead();
  4893  001704  EC69  F014         	call	_kpRead	;wreg free
  4894  001708  C001  F037         	movff	?_kpRead,potencia@tecla
  4895  00170C  C002  F038         	movff	?_kpRead+1,potencia@tecla+1
  4896  001710                     
  4897                           ;funcoes.c: 139:             if (((tecla) & (1<<(5)))) {
  4898  001710  AA37               	btfss	potencia@tecla^0,5,c
  4899  001712  EF8D  F00B         	goto	u3631
  4900  001716  EF8F  F00B         	goto	u3630
  4901  00171A                     u3631:
  4902  00171A  EFA8  F00B         	goto	l3454
  4903  00171E                     u3630:
  4904  00171E                     
  4905                           ;funcoes.c: 140:                 ptc += 10;
  4906  00171E  0E0A               	movlw	10
  4907  001720  2639               	addwf	potencia@ptc^0,f,c
  4908  001722  0E00               	movlw	0
  4909  001724  223A               	addwfc	(potencia@ptc+1)^0,f,c
  4910                           
  4911                           ;funcoes.c: 141:                 if (ptc >= 100) {
  4912  001726  BE3A               	btfsc	(potencia@ptc+1)^0,7,c
  4913  001728  EF9F  F00B         	goto	u3641
  4914  00172C  503A               	movf	(potencia@ptc+1)^0,w,c
  4915  00172E  E109               	bnz	u3640
  4916  001730  0E64               	movlw	100
  4917  001732  5C39               	subwf	potencia@ptc^0,w,c
  4918  001734  A0D8               	btfss	status,0,c
  4919  001736  EF9F  F00B         	goto	u3641
  4920  00173A  EFA1  F00B         	goto	u3640
  4921  00173E                     u3641:
  4922  00173E  EFA5  F00B         	goto	l3452
  4923  001742                     u3640:
  4924  001742                     
  4925                           ;funcoes.c: 142:                     ptc = 99;
  4926  001742  0E00               	movlw	0
  4927  001744  6E3A               	movwf	(potencia@ptc+1)^0,c
  4928  001746  0E63               	movlw	99
  4929  001748  6E39               	movwf	potencia@ptc^0,c
  4930  00174A                     l3452:
  4931                           
  4932                           ;funcoes.c: 144:                 pwmSet1(ptc);
  4933  00174A  5039               	movf	potencia@ptc^0,w,c
  4934  00174C  ECC8  F012         	call	_pwmSet1
  4935  001750                     l3454:
  4936                           
  4937                           ;funcoes.c: 146:             if (((tecla) & (1<<(4)))) {
  4938  001750  A837               	btfss	potencia@tecla^0,4,c
  4939  001752  EFAD  F00B         	goto	u3651
  4940  001756  EFAF  F00B         	goto	u3650
  4941  00175A                     u3651:
  4942  00175A  EFD5  F00B         	goto	l3466
  4943  00175E                     u3650:
  4944  00175E                     
  4945                           ;funcoes.c: 147:                 ptc -= 10;
  4946  00175E  0EF6               	movlw	246
  4947  001760  2639               	addwf	potencia@ptc^0,f,c
  4948  001762  0EFF               	movlw	255
  4949  001764  223A               	addwfc	(potencia@ptc+1)^0,f,c
  4950                           
  4951                           ;funcoes.c: 148:                 if (ptc <= 0) {
  4952  001766  BE3A               	btfsc	(potencia@ptc+1)^0,7,c
  4953  001768  EFC0  F00B         	goto	u3660
  4954  00176C  503A               	movf	(potencia@ptc+1)^0,w,c
  4955  00176E  E106               	bnz	u3661
  4956  001770  0439               	decf	potencia@ptc^0,w,c
  4957  001772  B0D8               	btfsc	status,0,c
  4958  001774  EFBE  F00B         	goto	u3661
  4959  001778  EFC0  F00B         	goto	u3660
  4960  00177C                     u3661:
  4961  00177C  EFC4  F00B         	goto	l3460
  4962  001780                     u3660:
  4963  001780                     
  4964                           ;funcoes.c: 149:                     ptc = 0;
  4965  001780  0E00               	movlw	0
  4966  001782  6E3A               	movwf	(potencia@ptc+1)^0,c
  4967  001784  0E00               	movlw	0
  4968  001786  6E39               	movwf	potencia@ptc^0,c
  4969  001788                     l3460:
  4970                           
  4971                           ;funcoes.c: 151:                 if (ptc == 89) {
  4972  001788  0E59               	movlw	89
  4973  00178A  1839               	xorwf	potencia@ptc^0,w,c
  4974  00178C  103A               	iorwf	(potencia@ptc+1)^0,w,c
  4975  00178E  A4D8               	btfss	status,2,c
  4976  001790  EFCC  F00B         	goto	u3671
  4977  001794  EFCE  F00B         	goto	u3670
  4978  001798                     u3671:
  4979  001798  EFD2  F00B         	goto	l3464
  4980  00179C                     u3670:
  4981  00179C                     
  4982                           ;funcoes.c: 152:                     ptc = 90;
  4983  00179C  0E00               	movlw	0
  4984  00179E  6E3A               	movwf	(potencia@ptc+1)^0,c
  4985  0017A0  0E5A               	movlw	90
  4986  0017A2  6E39               	movwf	potencia@ptc^0,c
  4987  0017A4                     l3464:
  4988                           
  4989                           ;funcoes.c: 154:                 pwmSet1(ptc);
  4990  0017A4  5039               	movf	potencia@ptc^0,w,c
  4991  0017A6  ECC8  F012         	call	_pwmSet1
  4992  0017AA                     l3466:
  4993                           
  4994                           ;funcoes.c: 156:             if (((tecla) & (1<<(0)))) {
  4995  0017AA  A037               	btfss	potencia@tecla^0,0,c
  4996  0017AC  EFDA  F00B         	goto	u3681
  4997  0017B0  EFDC  F00B         	goto	u3680
  4998  0017B4                     u3681:
  4999  0017B4  EFE1  F00B         	goto	l3472
  5000  0017B8                     u3680:
  5001  0017B8                     
  5002                           ;funcoes.c: 157:                 lcdCommand(0x01);
  5003  0017B8  0E01               	movlw	1
  5004  0017BA  ECD9  F011         	call	_lcdCommand
  5005  0017BE  EF1E  F00C         	goto	l269
  5006  0017C2                     l3472:
  5007                           
  5008                           ;funcoes.c: 162:         lcdCommand(0xDB);
  5009  0017C2  0EDB               	movlw	219
  5010  0017C4  ECD9  F011         	call	_lcdCommand
  5011                           
  5012                           ;funcoes.c: 163:         lcdNumber(ptc);
  5013  0017C8  C039  F011         	movff	potencia@ptc,lcdNumber@value
  5014  0017CC  C03A  F012         	movff	potencia@ptc+1,lcdNumber@value+1
  5015  0017D0  EC8E  F012         	call	_lcdNumber	;wreg free
  5016                           
  5017                           ;funcoes.c: 164:         lcdCommand(0x40);
  5018  0017D4  0E40               	movlw	64
  5019  0017D6  ECD9  F011         	call	_lcdCommand
  5020  0017DA                     
  5021                           ;funcoes.c: 165:         for (i = 0; i < 32; i++) {
  5022  0017DA  0E00               	movlw	0
  5023  0017DC  6E36               	movwf	(potencia@i+1)^0,c
  5024  0017DE  0E00               	movlw	0
  5025  0017E0  6E35               	movwf	potencia@i^0,c
  5026  0017E2                     l3480:
  5027                           
  5028                           ;funcoes.c: 166:             lcdData(porcentagem[i]);
  5029  0017E2  0E15               	movlw	low potencia@porcentagem
  5030  0017E4  2435               	addwf	potencia@i^0,w,c
  5031  0017E6  6ED9               	movwf	fsr2l,c
  5032  0017E8  0E00               	movlw	high potencia@porcentagem
  5033  0017EA  2036               	addwfc	(potencia@i+1)^0,w,c
  5034  0017EC  6EDA               	movwf	fsr2h,c
  5035  0017EE  50DF               	movf	indf2,w,c
  5036  0017F0  ECB2  F013         	call	_lcdData
  5037  0017F4                     
  5038                           ;funcoes.c: 167:         }
  5039  0017F4  4A35               	infsnz	potencia@i^0,f,c
  5040  0017F6  2A36               	incf	(potencia@i+1)^0,f,c
  5041  0017F8  BE36               	btfsc	(potencia@i+1)^0,7,c
  5042  0017FA  EF08  F00C         	goto	u3691
  5043  0017FE  5036               	movf	(potencia@i+1)^0,w,c
  5044  001800  E109               	bnz	u3690
  5045  001802  0E20               	movlw	32
  5046  001804  5C35               	subwf	potencia@i^0,w,c
  5047  001806  A0D8               	btfss	status,0,c
  5048  001808  EF08  F00C         	goto	u3691
  5049  00180C  EF0A  F00C         	goto	u3690
  5050  001810                     u3691:
  5051  001810  EFF1  F00B         	goto	l3480
  5052  001814                     u3690:
  5053  001814                     
  5054                           ;funcoes.c: 168:         lcdCommand(0x9E);
  5055  001814  0E9E               	movlw	158
  5056  001816  ECD9  F011         	call	_lcdCommand
  5057                           
  5058                           ;funcoes.c: 169:         lcdData(0);
  5059  00181A  0E00               	movlw	0
  5060  00181C  ECB2  F013         	call	_lcdData
  5061                           
  5062                           ;funcoes.c: 170:         lcdData(1);
  5063  001820  0E01               	movlw	1
  5064  001822  ECB2  F013         	call	_lcdData
  5065                           
  5066                           ;funcoes.c: 171:         lcdCommand(0xDE);
  5067  001826  0EDE               	movlw	222
  5068  001828  ECD9  F011         	call	_lcdCommand
  5069                           
  5070                           ;funcoes.c: 172:         lcdData(2);
  5071  00182C  0E02               	movlw	2
  5072  00182E  ECB2  F013         	call	_lcdData
  5073                           
  5074                           ;funcoes.c: 173:         lcdData(3);
  5075  001832  0E03               	movlw	3
  5076  001834  ECB2  F013         	call	_lcdData
  5077                           
  5078                           ;funcoes.c: 174:     }
  5079  001838  EF5D  F00B         	goto	l3430
  5080  00183C                     l269:
  5081  00183C  0012               	return		;funcret
  5082  00183E                     __end_of_potencia:
  5083                           	callstack 0
  5084                           
  5085 ;; *************** function _pwmSet1 *****************
  5086 ;; Defined at:
  5087 ;;		line 23 in file "pwm.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  porcento        1    wreg     unsigned char 
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;  porcento        1    9[COMRAM] unsigned char 
  5092 ;;  val             2   10[COMRAM] unsigned int 
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  1    wreg      void 
  5095 ;; Registers used:
  5096 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5102 ;;      Params:         0       0       0       0       0       0       0
  5103 ;;      Locals:         3       0       0       0       0       0       0
  5104 ;;      Temps:          2       0       0       0       0       0       0
  5105 ;;      Totals:         5       0       0       0       0       0       0
  5106 ;;Total ram usage:        5 bytes
  5107 ;; Hardware stack levels used: 1
  5108 ;; Hardware stack levels required when called: 1
  5109 ;; This function calls:
  5110 ;;		___lwdiv
  5111 ;;		___wmul
  5112 ;; This function is called by:
  5113 ;;		_menu
  5114 ;;		_potencia
  5115 ;;		_contagem
  5116 ;; This function uses a non-reentrant model
  5117 ;;
  5118                           
  5119                           	psect	text21
  5120  002590                     __ptext21:
  5121                           	callstack 0
  5122  002590                     _pwmSet1:
  5123                           	callstack 26
  5124                           
  5125                           ;incstack = 0
  5126                           ;pwmSet1@porcento stored from wreg
  5127  002590  6E0A               	movwf	pwmSet1@porcento^0,c
  5128  002592                     
  5129                           ;pwm.c: 29:     unsigned int val = ((unsigned int) porcento) *((*(volatile __near unsign
      +                          ed char*)0xFCB) + 1);
  5130  002592  0E01               	movlw	1
  5131  002594  24CB               	addwf	203,w,c	;volatile
  5132  002596  6E01               	movwf	___wmul@multiplier^0,c
  5133  002598  6A02               	clrf	(___wmul@multiplier+1)^0,c
  5134  00259A  0E00               	movlw	0
  5135  00259C  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  5136  00259E  C00A  F003         	movff	pwmSet1@porcento,___wmul@multiplicand
  5137  0025A2  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  5138  0025A4  EC1F  F014         	call	___wmul	;wreg free
  5139  0025A8  C001  F00B         	movff	?___wmul,pwmSet1@val
  5140  0025AC  C002  F00C         	movff	?___wmul+1,pwmSet1@val+1
  5141  0025B0                     
  5142                           ;pwm.c: 30:     val = val / 25;
  5143  0025B0  C00B  F001         	movff	pwmSet1@val,___lwdiv@dividend
  5144  0025B4  C00C  F002         	movff	pwmSet1@val+1,___lwdiv@dividend+1
  5145  0025B8  0E00               	movlw	0
  5146  0025BA  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  5147  0025BC  0E19               	movlw	25
  5148  0025BE  6E03               	movwf	___lwdiv@divisor^0,c
  5149  0025C0  EC54  F012         	call	___lwdiv	;wreg free
  5150  0025C4  C001  F00B         	movff	?___lwdiv,pwmSet1@val
  5151  0025C8  C002  F00C         	movff	?___lwdiv+1,pwmSet1@val+1
  5152  0025CC                     
  5153                           ;pwm.c: 32:     val &= 0x03ff;
  5154  0025CC  0EFF               	movlw	255
  5155  0025CE  160B               	andwf	pwmSet1@val^0,f,c
  5156  0025D0  0E03               	movlw	3
  5157  0025D2  160C               	andwf	(pwmSet1@val+1)^0,f,c
  5158  0025D4                     
  5159                           ;pwm.c: 34:     (*(volatile __near unsigned char*)0xFBE) = val >> 2;
  5160  0025D4  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
  5161  0025D8  C00C  F009         	movff	pwmSet1@val+1,??_pwmSet1+1
  5162  0025DC  90D8               	bcf	status,0,c
  5163  0025DE  3209               	rrcf	(??_pwmSet1+1)^0,f,c
  5164  0025E0  3208               	rrcf	??_pwmSet1^0,f,c
  5165  0025E2  90D8               	bcf	status,0,c
  5166  0025E4  3209               	rrcf	(??_pwmSet1+1)^0,f,c
  5167  0025E6  3208               	rrcf	??_pwmSet1^0,f,c
  5168  0025E8  5008               	movf	??_pwmSet1^0,w,c
  5169  0025EA  6EBE               	movwf	190,c	;volatile
  5170  0025EC                     
  5171                           ;pwm.c: 36:     (*(volatile __near unsigned char*)0xFBD) |= (val & 0x0003) << 4;
  5172  0025EC  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
  5173  0025F0  0E03               	movlw	3
  5174  0025F2  1608               	andwf	??_pwmSet1^0,f,c
  5175  0025F4  3808               	swapf	??_pwmSet1^0,w,c
  5176  0025F6  0BF0               	andlw	240
  5177  0025F8  12BD               	iorwf	189,f,c	;volatile
  5178  0025FA  0012               	return		;funcret
  5179  0025FC                     __end_of_pwmSet1:
  5180                           	callstack 0
  5181                           
  5182 ;; *************** function ___wmul *****************
  5183 ;; Defined at:
  5184 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;  multiplier      2    0[COMRAM] unsigned int 
  5187 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  product         2    4[COMRAM] unsigned int 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  2    0[COMRAM] unsigned int 
  5192 ;; Registers used:
  5193 ;;		wreg, status,2, status,0, prodl, prodh
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5199 ;;      Params:         4       0       0       0       0       0       0
  5200 ;;      Locals:         2       0       0       0       0       0       0
  5201 ;;      Temps:          0       0       0       0       0       0       0
  5202 ;;      Totals:         6       0       0       0       0       0       0
  5203 ;;Total ram usage:        6 bytes
  5204 ;; Hardware stack levels used: 1
  5205 ;; This function calls:
  5206 ;;		Nothing
  5207 ;; This function is called by:
  5208 ;;		_contagem
  5209 ;;		_pwmSet1
  5210 ;;		_pwmSet2
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           	psect	text22
  5215  00283E                     __ptext22:
  5216                           	callstack 0
  5217  00283E                     ___wmul:
  5218                           	callstack 26
  5219  00283E  5001               	movf	___wmul@multiplier^0,w,c
  5220  002840  0203               	mulwf	___wmul@multiplicand^0,c
  5221  002842  CFF3 F005          	movff	prodl,___wmul@product
  5222  002846  CFF4 F006          	movff	prodh,___wmul@product+1
  5223  00284A  5001               	movf	___wmul@multiplier^0,w,c
  5224  00284C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5225  00284E  50F3               	movf	243,w,c
  5226  002850  2606               	addwf	(___wmul@product+1)^0,f,c
  5227  002852  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5228  002854  0203               	mulwf	___wmul@multiplicand^0,c
  5229  002856  50F3               	movf	243,w,c
  5230  002858  2606               	addwf	(___wmul@product+1)^0,f,c
  5231  00285A  C005  F001         	movff	___wmul@product,?___wmul
  5232  00285E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5233  002862  0012               	return		;funcret
  5234  002864                     __end_of___wmul:
  5235                           	callstack 0
  5236                           
  5237 ;; *************** function ___lwdiv *****************
  5238 ;; Defined at:
  5239 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;  dividend        2    0[COMRAM] unsigned int 
  5242 ;;  divisor         2    2[COMRAM] unsigned int 
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  quotient        2    4[COMRAM] unsigned int 
  5245 ;;  counter         1    6[COMRAM] unsigned char 
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  2    0[COMRAM] unsigned int 
  5248 ;; Registers used:
  5249 ;;		wreg, status,2, status,0
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5255 ;;      Params:         4       0       0       0       0       0       0
  5256 ;;      Locals:         3       0       0       0       0       0       0
  5257 ;;      Temps:          0       0       0       0       0       0       0
  5258 ;;      Totals:         7       0       0       0       0       0       0
  5259 ;;Total ram usage:        7 bytes
  5260 ;; Hardware stack levels used: 1
  5261 ;; This function calls:
  5262 ;;		Nothing
  5263 ;; This function is called by:
  5264 ;;		_pwmSet1
  5265 ;;		_pwmSet2
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           	psect	text23
  5270  0024A8                     __ptext23:
  5271                           	callstack 0
  5272  0024A8                     ___lwdiv:
  5273                           	callstack 26
  5274  0024A8  0E00               	movlw	0
  5275  0024AA  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  5276  0024AC  0E00               	movlw	0
  5277  0024AE  6E05               	movwf	___lwdiv@quotient^0,c
  5278  0024B0  5003               	movf	___lwdiv@divisor^0,w,c
  5279  0024B2  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5280  0024B4  B4D8               	btfsc	status,2,c
  5281  0024B6  EF5F  F012         	goto	u2521
  5282  0024BA  EF61  F012         	goto	u2520
  5283  0024BE                     u2521:
  5284  0024BE  EF89  F012         	goto	l906
  5285  0024C2                     u2520:
  5286  0024C2  0E01               	movlw	1
  5287  0024C4  6E07               	movwf	___lwdiv@counter^0,c
  5288  0024C6  EF69  F012         	goto	l2650
  5289  0024CA                     l2648:
  5290  0024CA  90D8               	bcf	status,0,c
  5291  0024CC  3603               	rlcf	___lwdiv@divisor^0,f,c
  5292  0024CE  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5293  0024D0  2A07               	incf	___lwdiv@counter^0,f,c
  5294  0024D2                     l2650:
  5295  0024D2  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  5296  0024D4  EF6E  F012         	goto	u2531
  5297  0024D8  EF70  F012         	goto	u2530
  5298  0024DC                     u2531:
  5299  0024DC  EF65  F012         	goto	l2648
  5300  0024E0                     u2530:
  5301  0024E0                     l2652:
  5302  0024E0  90D8               	bcf	status,0,c
  5303  0024E2  3605               	rlcf	___lwdiv@quotient^0,f,c
  5304  0024E4  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5305  0024E6  5003               	movf	___lwdiv@divisor^0,w,c
  5306  0024E8  5C01               	subwf	___lwdiv@dividend^0,w,c
  5307  0024EA  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  5308  0024EC  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5309  0024EE  A0D8               	btfss	status,0,c
  5310  0024F0  EF7C  F012         	goto	u2541
  5311  0024F4  EF7E  F012         	goto	u2540
  5312  0024F8                     u2541:
  5313  0024F8  EF83  F012         	goto	l2660
  5314  0024FC                     u2540:
  5315  0024FC  5003               	movf	___lwdiv@divisor^0,w,c
  5316  0024FE  5E01               	subwf	___lwdiv@dividend^0,f,c
  5317  002500  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  5318  002502  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5319  002504  8005               	bsf	___lwdiv@quotient^0,0,c
  5320  002506                     l2660:
  5321  002506  90D8               	bcf	status,0,c
  5322  002508  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5323  00250A  3203               	rrcf	___lwdiv@divisor^0,f,c
  5324  00250C  2E07               	decfsz	___lwdiv@counter^0,f,c
  5325  00250E  EF70  F012         	goto	l2652
  5326  002512                     l906:
  5327  002512  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5328  002516  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5329  00251A  0012               	return		;funcret
  5330  00251C                     __end_of___lwdiv:
  5331                           	callstack 0
  5332                           
  5333 ;; *************** function _lcdString *****************
  5334 ;; Defined at:
  5335 ;;		line 86 in file "lcd.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;  msg             2    8[COMRAM] PTR unsigned char 
  5338 ;;		 -> STR_13(12), STR_12(1), STR_11(16), STR_10(7), 
  5339 ;;		 -> STR_9(11), STR_8(10), STR_7(9), STR_6(11), 
  5340 ;;		 -> STR_5(8), STR_4(11), STR_3(13), STR_2(17), 
  5341 ;;		 -> STR_1(9), 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  i               2   12[COMRAM] int 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1    wreg      void 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5353 ;;      Params:         2       0       0       0       0       0       0
  5354 ;;      Locals:         2       0       0       0       0       0       0
  5355 ;;      Temps:          2       0       0       0       0       0       0
  5356 ;;      Totals:         6       0       0       0       0       0       0
  5357 ;;Total ram usage:        6 bytes
  5358 ;; Hardware stack levels used: 1
  5359 ;; Hardware stack levels required when called: 2
  5360 ;; This function calls:
  5361 ;;		_lcdData
  5362 ;; This function is called by:
  5363 ;;		_standBy
  5364 ;;		_menu
  5365 ;;		_menuLigando
  5366 ;;		_potencia
  5367 ;;		_timer
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text24
  5372  00270E                     __ptext24:
  5373                           	callstack 0
  5374  00270E                     _lcdString:
  5375                           	callstack 26
  5376  00270E                     
  5377                           ;lcd.c: 87:     int i = 0;
  5378  00270E  0E00               	movlw	0
  5379  002710  6E0E               	movwf	(lcdString@i+1)^0,c
  5380  002712  0E00               	movlw	0
  5381  002714  6E0D               	movwf	lcdString@i^0,c
  5382                           
  5383                           ;lcd.c: 88:     while (msg[i] != 0) {
  5384  002716  EF9D  F013         	goto	l2670
  5385  00271A                     l2666:
  5386                           
  5387                           ;lcd.c: 89:         lcdData(msg[i]);
  5388  00271A  500D               	movf	lcdString@i^0,w,c
  5389  00271C  2409               	addwf	lcdString@msg^0,w,c
  5390  00271E  6E0B               	movwf	??_lcdString^0,c
  5391  002720  500E               	movf	(lcdString@i+1)^0,w,c
  5392  002722  200A               	addwfc	(lcdString@msg+1)^0,w,c
  5393  002724  6E0C               	movwf	(??_lcdString+1)^0,c
  5394  002726  C00B  FFF6         	movff	??_lcdString,tblptrl
  5395  00272A  C00C  FFF7         	movff	??_lcdString+1,tblptrh
  5396  00272E                     	if	0	;tblptru may be non-zero
  5397  00272E                     	endif
  5398  00272E                     	if	0	;tblptru may be non-zero
  5399  00272E                     	endif
  5400  00272E  0008               	tblrd		*
  5401  002730  50F5               	movf	tablat,w,c
  5402  002732  ECB2  F013         	call	_lcdData
  5403  002736                     
  5404                           ;lcd.c: 90:         i++;
  5405  002736  4A0D               	infsnz	lcdString@i^0,f,c
  5406  002738  2A0E               	incf	(lcdString@i+1)^0,f,c
  5407  00273A                     l2670:
  5408                           
  5409                           ;lcd.c: 88:     while (msg[i] != 0) {
  5410  00273A  500D               	movf	lcdString@i^0,w,c
  5411  00273C  2409               	addwf	lcdString@msg^0,w,c
  5412  00273E  6E0B               	movwf	??_lcdString^0,c
  5413  002740  500E               	movf	(lcdString@i+1)^0,w,c
  5414  002742  200A               	addwfc	(lcdString@msg+1)^0,w,c
  5415  002744  6E0C               	movwf	(??_lcdString+1)^0,c
  5416  002746  C00B  FFF6         	movff	??_lcdString,tblptrl
  5417  00274A  C00C  FFF7         	movff	??_lcdString+1,tblptrh
  5418  00274E                     	if	0	;tblptru may be non-zero
  5419  00274E                     	endif
  5420  00274E                     	if	0	;tblptru may be non-zero
  5421  00274E                     	endif
  5422  00274E  0008               	tblrd		*
  5423  002750  50F5               	movf	tablat,w,c
  5424  002752  0900               	iorlw	0
  5425  002754  A4D8               	btfss	status,2,c
  5426  002756  EFAF  F013         	goto	u2551
  5427  00275A  EFB1  F013         	goto	u2550
  5428  00275E                     u2551:
  5429  00275E  EF8D  F013         	goto	l2666
  5430  002762                     u2550:
  5431  002762  0012               	return		;funcret
  5432  002764                     __end_of_lcdString:
  5433                           	callstack 0
  5434                           
  5435 ;; *************** function _lcdNumber *****************
  5436 ;; Defined at:
  5437 ;;		line 94 in file "lcd.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;  value           2   16[COMRAM] int 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  i               2   18[COMRAM] int 
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  1    wreg      void 
  5444 ;; Registers used:
  5445 ;;		wreg, status,2, status,0, cstack
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5451 ;;      Params:         2       0       0       0       0       0       0
  5452 ;;      Locals:         2       0       0       0       0       0       0
  5453 ;;      Temps:          0       0       0       0       0       0       0
  5454 ;;      Totals:         4       0       0       0       0       0       0
  5455 ;;Total ram usage:        4 bytes
  5456 ;; Hardware stack levels used: 1
  5457 ;; Hardware stack levels required when called: 2
  5458 ;; This function calls:
  5459 ;;		___awdiv
  5460 ;;		___awmod
  5461 ;;		_lcdData
  5462 ;; This function is called by:
  5463 ;;		_potencia
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text25
  5468  00251C                     __ptext25:
  5469                           	callstack 0
  5470  00251C                     _lcdNumber:
  5471                           	callstack 26
  5472  00251C                     
  5473                           ;lcd.c: 95:     int i = 100;
  5474  00251C  0E00               	movlw	0
  5475  00251E  6E14               	movwf	(lcdNumber@i+1)^0,c
  5476  002520  0E64               	movlw	100
  5477  002522  6E13               	movwf	lcdNumber@i^0,c
  5478                           
  5479                           ;lcd.c: 96:     while (i > 0) {
  5480  002524  EFBA  F012         	goto	l3290
  5481  002528                     l3288:
  5482                           
  5483                           ;lcd.c: 97:         lcdData((value / i) % 10 + 48);
  5484  002528  C013  F003         	movff	lcdNumber@i,___awdiv@divisor
  5485  00252C  C014  F004         	movff	lcdNumber@i+1,___awdiv@divisor+1
  5486  002530  C011  F001         	movff	lcdNumber@value,___awdiv@dividend
  5487  002534  C012  F002         	movff	lcdNumber@value+1,___awdiv@dividend+1
  5488  002538  ECBE  F010         	call	___awdiv	;wreg free
  5489  00253C  C001  F00B         	movff	?___awdiv,___awmod@dividend
  5490  002540  C002  F00C         	movff	?___awdiv+1,___awmod@dividend+1
  5491  002544  0E00               	movlw	0
  5492  002546  6E0E               	movwf	(___awmod@divisor+1)^0,c
  5493  002548  0E0A               	movlw	10
  5494  00254A  6E0D               	movwf	___awmod@divisor^0,c
  5495  00254C  EC81  F011         	call	___awmod	;wreg free
  5496  002550  500B               	movf	?___awmod^0,w,c
  5497  002552  0F30               	addlw	48
  5498  002554  ECB2  F013         	call	_lcdData
  5499                           
  5500                           ;lcd.c: 98:         i /= 10;
  5501  002558  C013  F001         	movff	lcdNumber@i,___awdiv@dividend
  5502  00255C  C014  F002         	movff	lcdNumber@i+1,___awdiv@dividend+1
  5503  002560  0E00               	movlw	0
  5504  002562  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5505  002564  0E0A               	movlw	10
  5506  002566  6E03               	movwf	___awdiv@divisor^0,c
  5507  002568  ECBE  F010         	call	___awdiv	;wreg free
  5508  00256C  C001  F013         	movff	?___awdiv,lcdNumber@i
  5509  002570  C002  F014         	movff	?___awdiv+1,lcdNumber@i+1
  5510  002574                     l3290:
  5511                           
  5512                           ;lcd.c: 96:     while (i > 0) {
  5513  002574  BE14               	btfsc	(lcdNumber@i+1)^0,7,c
  5514  002576  EFC7  F012         	goto	u3490
  5515  00257A  5014               	movf	(lcdNumber@i+1)^0,w,c
  5516  00257C  E106               	bnz	u3491
  5517  00257E  0413               	decf	lcdNumber@i^0,w,c
  5518  002580  B0D8               	btfsc	status,0,c
  5519  002582  EFC5  F012         	goto	u3491
  5520  002586  EFC7  F012         	goto	u3490
  5521  00258A                     u3491:
  5522  00258A  EF94  F012         	goto	l3288
  5523  00258E                     u3490:
  5524  00258E  0012               	return		;funcret
  5525  002590                     __end_of_lcdNumber:
  5526                           	callstack 0
  5527                           
  5528 ;; *************** function _lcdData *****************
  5529 ;; Defined at:
  5530 ;;		line 67 in file "lcd.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;  valor           1    wreg     unsigned char 
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;  valor           1    6[COMRAM] unsigned char 
  5535 ;;  old_D           1    7[COMRAM] unsigned char 
  5536 ;; Return value:  Size  Location     Type
  5537 ;;                  1    wreg      void 
  5538 ;; Registers used:
  5539 ;;		wreg, status,2, status,0, cstack
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5545 ;;      Params:         0       0       0       0       0       0       0
  5546 ;;      Locals:         2       0       0       0       0       0       0
  5547 ;;      Temps:          0       0       0       0       0       0       0
  5548 ;;      Totals:         2       0       0       0       0       0       0
  5549 ;;Total ram usage:        2 bytes
  5550 ;; Hardware stack levels used: 1
  5551 ;; Hardware stack levels required when called: 1
  5552 ;; This function calls:
  5553 ;;		_Delay40us
  5554 ;;		_digitalWrite
  5555 ;; This function is called by:
  5556 ;;		_lcdString
  5557 ;;		_lcdNumber
  5558 ;;		_menuLigando
  5559 ;;		_potencia
  5560 ;; This function uses a non-reentrant model
  5561 ;;
  5562                           
  5563                           	psect	text26
  5564  002764                     __ptext26:
  5565                           	callstack 0
  5566  002764                     _lcdData:
  5567                           	callstack 26
  5568                           
  5569                           ;incstack = 0
  5570                           ;lcdData@valor stored from wreg
  5571  002764  6E07               	movwf	lcdData@valor^0,c
  5572  002766                     
  5573                           ;lcd.c: 69:     unsigned char old_D;;lcd.c: 70:     old_D = PORTD;
  5574  002766  CF83 F008          	movff	3971,lcdData@old_D	;volatile
  5575  00276A                     
  5576                           ;lcd.c: 72:     TRISD = 0x00;
  5577  00276A  0E00               	movlw	0
  5578  00276C  6E95               	movwf	149,c	;volatile
  5579  00276E                     
  5580                           ;lcd.c: 73:     digitalWrite(PIN_E2, 1);
  5581  00276E  0E00               	movlw	0
  5582  002770  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5583  002772  0E22               	movlw	34
  5584  002774  6E01               	movwf	digitalWrite@pin^0,c
  5585  002776  0E00               	movlw	0
  5586  002778  6E04               	movwf	(digitalWrite@value+1)^0,c
  5587  00277A  0E01               	movlw	1
  5588  00277C  6E03               	movwf	digitalWrite@value^0,c
  5589  00277E  EC26  F00A         	call	_digitalWrite	;wreg free
  5590  002782                     
  5591                           ;lcd.c: 75:     PORTD = valor;
  5592  002782  C007  FF83         	movff	lcdData@valor,3971	;volatile
  5593  002786                     
  5594                           ;lcd.c: 77:     digitalWrite(PIN_E1, 1);
  5595  002786  0E00               	movlw	0
  5596  002788  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5597  00278A  0E21               	movlw	33
  5598  00278C  6E01               	movwf	digitalWrite@pin^0,c
  5599  00278E  0E00               	movlw	0
  5600  002790  6E04               	movwf	(digitalWrite@value+1)^0,c
  5601  002792  0E01               	movlw	1
  5602  002794  6E03               	movwf	digitalWrite@value^0,c
  5603  002796  EC26  F00A         	call	_digitalWrite	;wreg free
  5604  00279A                     
  5605                           ;lcd.c: 78:     digitalWrite(PIN_E1, 0);
  5606  00279A  0E00               	movlw	0
  5607  00279C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5608  00279E  0E21               	movlw	33
  5609  0027A0  6E01               	movwf	digitalWrite@pin^0,c
  5610  0027A2  0E00               	movlw	0
  5611  0027A4  6E04               	movwf	(digitalWrite@value+1)^0,c
  5612  0027A6  0E00               	movlw	0
  5613  0027A8  6E03               	movwf	digitalWrite@value^0,c
  5614  0027AA  EC26  F00A         	call	_digitalWrite	;wreg free
  5615  0027AE                     
  5616                           ;lcd.c: 80:     PORTD = old_D;
  5617  0027AE  C008  FF83         	movff	lcdData@old_D,3971	;volatile
  5618  0027B2                     
  5619                           ;lcd.c: 82:     Delay40us();
  5620  0027B2  EC4E  F014         	call	_Delay40us	;wreg free
  5621  0027B6  0012               	return		;funcret
  5622  0027B8                     __end_of_lcdData:
  5623                           	callstack 0
  5624                           
  5625 ;; *************** function ___awmod *****************
  5626 ;; Defined at:
  5627 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  dividend        2   10[COMRAM] int 
  5630 ;;  divisor         2   12[COMRAM] int 
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  sign            1   15[COMRAM] unsigned char 
  5633 ;;  counter         1   14[COMRAM] unsigned char 
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  2   10[COMRAM] int 
  5636 ;; Registers used:
  5637 ;;		wreg, status,2, status,0
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5643 ;;      Params:         4       0       0       0       0       0       0
  5644 ;;      Locals:         2       0       0       0       0       0       0
  5645 ;;      Temps:          0       0       0       0       0       0       0
  5646 ;;      Totals:         6       0       0       0       0       0       0
  5647 ;;Total ram usage:        6 bytes
  5648 ;; Hardware stack levels used: 1
  5649 ;; This function calls:
  5650 ;;		Nothing
  5651 ;; This function is called by:
  5652 ;;		_lcdNumber
  5653 ;;		_contagem
  5654 ;;		_timer
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657                           
  5658                           	psect	text27
  5659  002302                     __ptext27:
  5660                           	callstack 0
  5661  002302                     ___awmod:
  5662                           	callstack 27
  5663  002302  0E00               	movlw	0
  5664  002304  6E10               	movwf	___awmod@sign^0,c
  5665  002306  BE0C               	btfsc	(___awmod@dividend+1)^0,7,c
  5666  002308  EF8A  F011         	goto	u3200
  5667  00230C  EF88  F011         	goto	u3201
  5668  002310                     u3201:
  5669  002310  EF90  F011         	goto	l3136
  5670  002314                     u3200:
  5671  002314  6C0B               	negf	___awmod@dividend^0,c
  5672  002316  1E0C               	comf	(___awmod@dividend+1)^0,f,c
  5673  002318  B0D8               	btfsc	status,0,c
  5674  00231A  2A0C               	incf	(___awmod@dividend+1)^0,f,c
  5675  00231C  0E01               	movlw	1
  5676  00231E  6E10               	movwf	___awmod@sign^0,c
  5677  002320                     l3136:
  5678  002320  BE0E               	btfsc	(___awmod@divisor+1)^0,7,c
  5679  002322  EF97  F011         	goto	u3210
  5680  002326  EF95  F011         	goto	u3211
  5681  00232A                     u3211:
  5682  00232A  EF9B  F011         	goto	l3140
  5683  00232E                     u3210:
  5684  00232E  6C0D               	negf	___awmod@divisor^0,c
  5685  002330  1E0E               	comf	(___awmod@divisor+1)^0,f,c
  5686  002332  B0D8               	btfsc	status,0,c
  5687  002334  2A0E               	incf	(___awmod@divisor+1)^0,f,c
  5688  002336                     l3140:
  5689  002336  500D               	movf	___awmod@divisor^0,w,c
  5690  002338  100E               	iorwf	(___awmod@divisor+1)^0,w,c
  5691  00233A  B4D8               	btfsc	status,2,c
  5692  00233C  EFA2  F011         	goto	u3221
  5693  002340  EFA4  F011         	goto	u3220
  5694  002344                     u3221:
  5695  002344  EFC8  F011         	goto	l3156
  5696  002348                     u3220:
  5697  002348  0E01               	movlw	1
  5698  00234A  6E0F               	movwf	___awmod@counter^0,c
  5699  00234C  EFAC  F011         	goto	l3146
  5700  002350                     l3144:
  5701  002350  90D8               	bcf	status,0,c
  5702  002352  360D               	rlcf	___awmod@divisor^0,f,c
  5703  002354  360E               	rlcf	(___awmod@divisor+1)^0,f,c
  5704  002356  2A0F               	incf	___awmod@counter^0,f,c
  5705  002358                     l3146:
  5706  002358  AE0E               	btfss	(___awmod@divisor+1)^0,7,c
  5707  00235A  EFB1  F011         	goto	u3231
  5708  00235E  EFB3  F011         	goto	u3230
  5709  002362                     u3231:
  5710  002362  EFA8  F011         	goto	l3144
  5711  002366                     u3230:
  5712  002366                     l3148:
  5713  002366  500D               	movf	___awmod@divisor^0,w,c
  5714  002368  5C0B               	subwf	___awmod@dividend^0,w,c
  5715  00236A  500E               	movf	(___awmod@divisor+1)^0,w,c
  5716  00236C  580C               	subwfb	(___awmod@dividend+1)^0,w,c
  5717  00236E  A0D8               	btfss	status,0,c
  5718  002370  EFBC  F011         	goto	u3241
  5719  002374  EFBE  F011         	goto	u3240
  5720  002378                     u3241:
  5721  002378  EFC2  F011         	goto	l3152
  5722  00237C                     u3240:
  5723  00237C  500D               	movf	___awmod@divisor^0,w,c
  5724  00237E  5E0B               	subwf	___awmod@dividend^0,f,c
  5725  002380  500E               	movf	(___awmod@divisor+1)^0,w,c
  5726  002382  5A0C               	subwfb	(___awmod@dividend+1)^0,f,c
  5727  002384                     l3152:
  5728  002384  90D8               	bcf	status,0,c
  5729  002386  320E               	rrcf	(___awmod@divisor+1)^0,f,c
  5730  002388  320D               	rrcf	___awmod@divisor^0,f,c
  5731  00238A  2E0F               	decfsz	___awmod@counter^0,f,c
  5732  00238C  EFB3  F011         	goto	l3148
  5733  002390                     l3156:
  5734  002390  5010               	movf	___awmod@sign^0,w,c
  5735  002392  B4D8               	btfsc	status,2,c
  5736  002394  EFCE  F011         	goto	u3251
  5737  002398  EFD0  F011         	goto	u3250
  5738  00239C                     u3251:
  5739  00239C  EFD4  F011         	goto	l3160
  5740  0023A0                     u3250:
  5741  0023A0  6C0B               	negf	___awmod@dividend^0,c
  5742  0023A2  1E0C               	comf	(___awmod@dividend+1)^0,f,c
  5743  0023A4  B0D8               	btfsc	status,0,c
  5744  0023A6  2A0C               	incf	(___awmod@dividend+1)^0,f,c
  5745  0023A8                     l3160:
  5746  0023A8  C00B  F00B         	movff	___awmod@dividend,?___awmod
  5747  0023AC  C00C  F00C         	movff	___awmod@dividend+1,?___awmod+1
  5748  0023B0  0012               	return		;funcret
  5749  0023B2                     __end_of___awmod:
  5750                           	callstack 0
  5751                           
  5752 ;; *************** function ___awdiv *****************
  5753 ;; Defined at:
  5754 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  dividend        2    0[COMRAM] int 
  5757 ;;  divisor         2    2[COMRAM] int 
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;  quotient        2    6[COMRAM] int 
  5760 ;;  sign            1    5[COMRAM] unsigned char 
  5761 ;;  counter         1    4[COMRAM] unsigned char 
  5762 ;; Return value:  Size  Location     Type
  5763 ;;                  2    0[COMRAM] int 
  5764 ;; Registers used:
  5765 ;;		wreg, status,2, status,0
  5766 ;; Tracked objects:
  5767 ;;		On entry : 0/0
  5768 ;;		On exit  : 0/0
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5771 ;;      Params:         4       0       0       0       0       0       0
  5772 ;;      Locals:         4       0       0       0       0       0       0
  5773 ;;      Temps:          0       0       0       0       0       0       0
  5774 ;;      Totals:         8       0       0       0       0       0       0
  5775 ;;Total ram usage:        8 bytes
  5776 ;; Hardware stack levels used: 1
  5777 ;; This function calls:
  5778 ;;		Nothing
  5779 ;; This function is called by:
  5780 ;;		_lcdNumber
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           	psect	text28
  5785  00217C                     __ptext28:
  5786                           	callstack 0
  5787  00217C                     ___awdiv:
  5788                           	callstack 27
  5789  00217C  0E00               	movlw	0
  5790  00217E  6E06               	movwf	___awdiv@sign^0,c
  5791  002180  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5792  002182  EFC7  F010         	goto	u3140
  5793  002186  EFC5  F010         	goto	u3141
  5794  00218A                     u3141:
  5795  00218A  EFCD  F010         	goto	l3092
  5796  00218E                     u3140:
  5797  00218E  6C03               	negf	___awdiv@divisor^0,c
  5798  002190  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5799  002192  B0D8               	btfsc	status,0,c
  5800  002194  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5801  002196  0E01               	movlw	1
  5802  002198  6E06               	movwf	___awdiv@sign^0,c
  5803  00219A                     l3092:
  5804  00219A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5805  00219C  EFD4  F010         	goto	u3150
  5806  0021A0  EFD2  F010         	goto	u3151
  5807  0021A4                     u3151:
  5808  0021A4  EFDA  F010         	goto	l3098
  5809  0021A8                     u3150:
  5810  0021A8  6C01               	negf	___awdiv@dividend^0,c
  5811  0021AA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5812  0021AC  B0D8               	btfsc	status,0,c
  5813  0021AE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5814  0021B0  0E01               	movlw	1
  5815  0021B2  1A06               	xorwf	___awdiv@sign^0,f,c
  5816  0021B4                     l3098:
  5817  0021B4  0E00               	movlw	0
  5818  0021B6  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5819  0021B8  0E00               	movlw	0
  5820  0021BA  6E07               	movwf	___awdiv@quotient^0,c
  5821  0021BC  5003               	movf	___awdiv@divisor^0,w,c
  5822  0021BE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5823  0021C0  B4D8               	btfsc	status,2,c
  5824  0021C2  EFE5  F010         	goto	u3161
  5825  0021C6  EFE7  F010         	goto	u3160
  5826  0021CA                     u3161:
  5827  0021CA  EF0F  F011         	goto	l3120
  5828  0021CE                     u3160:
  5829  0021CE  0E01               	movlw	1
  5830  0021D0  6E05               	movwf	___awdiv@counter^0,c
  5831  0021D2  EFEF  F010         	goto	l3106
  5832  0021D6                     l3104:
  5833  0021D6  90D8               	bcf	status,0,c
  5834  0021D8  3603               	rlcf	___awdiv@divisor^0,f,c
  5835  0021DA  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5836  0021DC  2A05               	incf	___awdiv@counter^0,f,c
  5837  0021DE                     l3106:
  5838  0021DE  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5839  0021E0  EFF4  F010         	goto	u3171
  5840  0021E4  EFF6  F010         	goto	u3170
  5841  0021E8                     u3171:
  5842  0021E8  EFEB  F010         	goto	l3104
  5843  0021EC                     u3170:
  5844  0021EC                     l3108:
  5845  0021EC  90D8               	bcf	status,0,c
  5846  0021EE  3607               	rlcf	___awdiv@quotient^0,f,c
  5847  0021F0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5848  0021F2  5003               	movf	___awdiv@divisor^0,w,c
  5849  0021F4  5C01               	subwf	___awdiv@dividend^0,w,c
  5850  0021F6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5851  0021F8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5852  0021FA  A0D8               	btfss	status,0,c
  5853  0021FC  EF02  F011         	goto	u3181
  5854  002200  EF04  F011         	goto	u3180
  5855  002204                     u3181:
  5856  002204  EF09  F011         	goto	l3116
  5857  002208                     u3180:
  5858  002208  5003               	movf	___awdiv@divisor^0,w,c
  5859  00220A  5E01               	subwf	___awdiv@dividend^0,f,c
  5860  00220C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5861  00220E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5862  002210  8007               	bsf	___awdiv@quotient^0,0,c
  5863  002212                     l3116:
  5864  002212  90D8               	bcf	status,0,c
  5865  002214  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5866  002216  3203               	rrcf	___awdiv@divisor^0,f,c
  5867  002218  2E05               	decfsz	___awdiv@counter^0,f,c
  5868  00221A  EFF6  F010         	goto	l3108
  5869  00221E                     l3120:
  5870  00221E  5006               	movf	___awdiv@sign^0,w,c
  5871  002220  B4D8               	btfsc	status,2,c
  5872  002222  EF15  F011         	goto	u3191
  5873  002226  EF17  F011         	goto	u3190
  5874  00222A                     u3191:
  5875  00222A  EF1B  F011         	goto	l3124
  5876  00222E                     u3190:
  5877  00222E  6C07               	negf	___awdiv@quotient^0,c
  5878  002230  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5879  002232  B0D8               	btfsc	status,0,c
  5880  002234  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5881  002236                     l3124:
  5882  002236  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5883  00223A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5884  00223E  0012               	return		;funcret
  5885  002240                     __end_of___awdiv:
  5886                           	callstack 0
  5887                           
  5888 ;; *************** function _lcdCommand *****************
  5889 ;; Defined at:
  5890 ;;		line 42 in file "lcd.c"
  5891 ;; Parameters:    Size  Location     Type
  5892 ;;  cmd             1    wreg     unsigned char 
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;  cmd             1    7[COMRAM] unsigned char 
  5895 ;;  old_D           1    6[COMRAM] unsigned char 
  5896 ;; Return value:  Size  Location     Type
  5897 ;;                  1    wreg      void 
  5898 ;; Registers used:
  5899 ;;		wreg, status,2, status,0, cstack
  5900 ;; Tracked objects:
  5901 ;;		On entry : 0/0
  5902 ;;		On exit  : 0/0
  5903 ;;		Unchanged: 0/0
  5904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5905 ;;      Params:         0       0       0       0       0       0       0
  5906 ;;      Locals:         2       0       0       0       0       0       0
  5907 ;;      Temps:          0       0       0       0       0       0       0
  5908 ;;      Totals:         2       0       0       0       0       0       0
  5909 ;;Total ram usage:        2 bytes
  5910 ;; Hardware stack levels used: 1
  5911 ;; Hardware stack levels required when called: 2
  5912 ;; This function calls:
  5913 ;;		_Delay2ms
  5914 ;;		_Delay40us
  5915 ;;		_digitalWrite
  5916 ;; This function is called by:
  5917 ;;		_lcdInit
  5918 ;;		_standBy
  5919 ;;		_menu
  5920 ;;		_menuLigando
  5921 ;;		_potencia
  5922 ;;		_timer
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           	psect	text29
  5927  0023B2                     __ptext29:
  5928                           	callstack 0
  5929  0023B2                     _lcdCommand:
  5930                           	callstack 25
  5931                           
  5932                           ;incstack = 0
  5933                           ;lcdCommand@cmd stored from wreg
  5934  0023B2  6E08               	movwf	lcdCommand@cmd^0,c
  5935  0023B4                     
  5936                           ;lcd.c: 43:     unsigned char old_D;;lcd.c: 44:     old_D = PORTD;
  5937  0023B4  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  5938  0023B8                     
  5939                           ;lcd.c: 47:     TRISD = 0x00;
  5940  0023B8  0E00               	movlw	0
  5941  0023BA  6E95               	movwf	149,c	;volatile
  5942  0023BC                     
  5943                           ;lcd.c: 49:     digitalWrite(PIN_E2, 0);
  5944  0023BC  0E00               	movlw	0
  5945  0023BE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5946  0023C0  0E22               	movlw	34
  5947  0023C2  6E01               	movwf	digitalWrite@pin^0,c
  5948  0023C4  0E00               	movlw	0
  5949  0023C6  6E04               	movwf	(digitalWrite@value+1)^0,c
  5950  0023C8  0E00               	movlw	0
  5951  0023CA  6E03               	movwf	digitalWrite@value^0,c
  5952  0023CC  EC26  F00A         	call	_digitalWrite	;wreg free
  5953  0023D0                     
  5954                           ;lcd.c: 50:     PORTD = cmd;
  5955  0023D0  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  5956  0023D4                     
  5957                           ;lcd.c: 52:     digitalWrite(PIN_E1, 1);
  5958  0023D4  0E00               	movlw	0
  5959  0023D6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5960  0023D8  0E21               	movlw	33
  5961  0023DA  6E01               	movwf	digitalWrite@pin^0,c
  5962  0023DC  0E00               	movlw	0
  5963  0023DE  6E04               	movwf	(digitalWrite@value+1)^0,c
  5964  0023E0  0E01               	movlw	1
  5965  0023E2  6E03               	movwf	digitalWrite@value^0,c
  5966  0023E4  EC26  F00A         	call	_digitalWrite	;wreg free
  5967  0023E8                     
  5968                           ;lcd.c: 53:     digitalWrite(PIN_E1, 0);
  5969  0023E8  0E00               	movlw	0
  5970  0023EA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5971  0023EC  0E21               	movlw	33
  5972  0023EE  6E01               	movwf	digitalWrite@pin^0,c
  5973  0023F0  0E00               	movlw	0
  5974  0023F2  6E04               	movwf	(digitalWrite@value+1)^0,c
  5975  0023F4  0E00               	movlw	0
  5976  0023F6  6E03               	movwf	digitalWrite@value^0,c
  5977  0023F8  EC26  F00A         	call	_digitalWrite	;wreg free
  5978  0023FC                     
  5979                           ;lcd.c: 56:     PORTD = old_D;
  5980  0023FC  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  5981  002400                     
  5982                           ;lcd.c: 58:     if ((cmd == 0x02) || (cmd == 0x01)) {
  5983  002400  0E02               	movlw	2
  5984  002402  1808               	xorwf	lcdCommand@cmd^0,w,c
  5985  002404  B4D8               	btfsc	status,2,c
  5986  002406  EF07  F012         	goto	u2501
  5987  00240A  EF09  F012         	goto	u2500
  5988  00240E                     u2501:
  5989  00240E  EF11  F012         	goto	l2616
  5990  002412                     u2500:
  5991  002412  0408               	decf	lcdCommand@cmd^0,w,c
  5992  002414  A4D8               	btfss	status,2,c
  5993  002416  EF0F  F012         	goto	u2511
  5994  00241A  EF11  F012         	goto	u2510
  5995  00241E                     u2511:
  5996  00241E  EF15  F012         	goto	l2618
  5997  002422                     u2510:
  5998  002422                     l2616:
  5999                           
  6000                           ;lcd.c: 59:         Delay2ms();
  6001  002422  EC40  F014         	call	_Delay2ms	;wreg free
  6002                           
  6003                           ;lcd.c: 60:     } else {
  6004  002426  EF17  F012         	goto	l137
  6005  00242A                     l2618:
  6006                           
  6007                           ;lcd.c: 61:         Delay40us();
  6008  00242A  EC4E  F014         	call	_Delay40us	;wreg free
  6009  00242E                     l137:
  6010  00242E  0012               	return		;funcret
  6011  002430                     __end_of_lcdCommand:
  6012                           	callstack 0
  6013                           
  6014 ;; *************** function _digitalWrite *****************
  6015 ;; Defined at:
  6016 ;;		line 14 in file "io.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;  pin             2    0[COMRAM] int 
  6019 ;;  value           2    2[COMRAM] int 
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;		None
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  1    wreg      void 
  6024 ;; Registers used:
  6025 ;;		wreg, status,2, status,0
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6031 ;;      Params:         4       0       0       0       0       0       0
  6032 ;;      Locals:         0       0       0       0       0       0       0
  6033 ;;      Temps:          2       0       0       0       0       0       0
  6034 ;;      Totals:         6       0       0       0       0       0       0
  6035 ;;Total ram usage:        6 bytes
  6036 ;; Hardware stack levels used: 1
  6037 ;; This function calls:
  6038 ;;		Nothing
  6039 ;; This function is called by:
  6040 ;;		_lcdCommand
  6041 ;;		_lcdData
  6042 ;;		_ssdUpdate
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           	psect	text30
  6047  00144C                     __ptext30:
  6048                           	callstack 0
  6049  00144C                     _digitalWrite:
  6050                           	callstack 28
  6051  00144C                     
  6052                           ;io.c: 16:     if(pin <8){
  6053  00144C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6054  00144E  EF34  F00A         	goto	u2090
  6055  001452  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6056  001454  E107               	bnz	u2091
  6057  001456  0E08               	movlw	8
  6058  001458  5C01               	subwf	digitalWrite@pin^0,w,c
  6059  00145A  B0D8               	btfsc	status,0,c
  6060  00145C  EF32  F00A         	goto	u2091
  6061  001460  EF34  F00A         	goto	u2090
  6062  001464                     u2091:
  6063  001464  EF5E  F00A         	goto	l2514
  6064  001468                     u2090:
  6065  001468                     
  6066                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  6067  001468  5003               	movf	digitalWrite@value^0,w,c
  6068  00146A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6069  00146C  B4D8               	btfsc	status,2,c
  6070  00146E  EF3B  F00A         	goto	u2101
  6071  001472  EF3D  F00A         	goto	u2100
  6072  001476                     u2101:
  6073  001476  EF4D  F00A         	goto	l2512
  6074  00147A                     u2100:
  6075  00147A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6076  00147E  0E01               	movlw	1
  6077  001480  6E06               	movwf	(??_digitalWrite+1)^0,c
  6078  001482  2A05               	incf	??_digitalWrite^0,f,c
  6079  001484  EF46  F00A         	goto	u2114
  6080  001488                     u2115:
  6081  001488  90D8               	bcf	status,0,c
  6082  00148A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6083  00148C                     u2114:
  6084  00148C  2E05               	decfsz	??_digitalWrite^0,f,c
  6085  00148E  EF44  F00A         	goto	u2115
  6086  001492  5006               	movf	(??_digitalWrite+1)^0,w,c
  6087  001494  1280               	iorwf	128,f,c	;volatile
  6088  001496  EF4C  F00B         	goto	l42
  6089  00149A                     l2512:
  6090  00149A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6091  00149E  0E01               	movlw	1
  6092  0014A0  6E06               	movwf	(??_digitalWrite+1)^0,c
  6093  0014A2  2A05               	incf	??_digitalWrite^0,f,c
  6094  0014A4  EF56  F00A         	goto	u2124
  6095  0014A8                     u2125:
  6096  0014A8  90D8               	bcf	status,0,c
  6097  0014AA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6098  0014AC                     u2124:
  6099  0014AC  2E05               	decfsz	??_digitalWrite^0,f,c
  6100  0014AE  EF54  F00A         	goto	u2125
  6101  0014B2  5006               	movf	(??_digitalWrite+1)^0,w,c
  6102  0014B4  0AFF               	xorlw	255
  6103  0014B6  1680               	andwf	128,f,c	;volatile
  6104  0014B8  EF4C  F00B         	goto	l42
  6105  0014BC                     l2514:
  6106  0014BC  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6107  0014BE  EF6C  F00A         	goto	u2130
  6108  0014C2  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6109  0014C4  E107               	bnz	u2131
  6110  0014C6  0E10               	movlw	16
  6111  0014C8  5C01               	subwf	digitalWrite@pin^0,w,c
  6112  0014CA  B0D8               	btfsc	status,0,c
  6113  0014CC  EF6A  F00A         	goto	u2131
  6114  0014D0  EF6C  F00A         	goto	u2130
  6115  0014D4                     u2131:
  6116  0014D4  EF9A  F00A         	goto	l2522
  6117  0014D8                     u2130:
  6118  0014D8                     
  6119                           ;io.c: 20:         pin -=8;
  6120  0014D8  0EF8               	movlw	248
  6121  0014DA  2601               	addwf	digitalWrite@pin^0,f,c
  6122  0014DC  0EFF               	movlw	255
  6123  0014DE  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6124                           
  6125                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  6126  0014E0  5003               	movf	digitalWrite@value^0,w,c
  6127  0014E2  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6128  0014E4  B4D8               	btfsc	status,2,c
  6129  0014E6  EF77  F00A         	goto	u2141
  6130  0014EA  EF79  F00A         	goto	u2140
  6131  0014EE                     u2141:
  6132  0014EE  EF89  F00A         	goto	l2520
  6133  0014F2                     u2140:
  6134  0014F2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6135  0014F6  0E01               	movlw	1
  6136  0014F8  6E06               	movwf	(??_digitalWrite+1)^0,c
  6137  0014FA  2A05               	incf	??_digitalWrite^0,f,c
  6138  0014FC  EF82  F00A         	goto	u2154
  6139  001500                     u2155:
  6140  001500  90D8               	bcf	status,0,c
  6141  001502  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6142  001504                     u2154:
  6143  001504  2E05               	decfsz	??_digitalWrite^0,f,c
  6144  001506  EF80  F00A         	goto	u2155
  6145  00150A  5006               	movf	(??_digitalWrite+1)^0,w,c
  6146  00150C  1281               	iorwf	129,f,c	;volatile
  6147  00150E  EF4C  F00B         	goto	l42
  6148  001512                     l2520:
  6149  001512  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6150  001516  0E01               	movlw	1
  6151  001518  6E06               	movwf	(??_digitalWrite+1)^0,c
  6152  00151A  2A05               	incf	??_digitalWrite^0,f,c
  6153  00151C  EF92  F00A         	goto	u2164
  6154  001520                     u2165:
  6155  001520  90D8               	bcf	status,0,c
  6156  001522  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6157  001524                     u2164:
  6158  001524  2E05               	decfsz	??_digitalWrite^0,f,c
  6159  001526  EF90  F00A         	goto	u2165
  6160  00152A  5006               	movf	(??_digitalWrite+1)^0,w,c
  6161  00152C  0AFF               	xorlw	255
  6162  00152E  1681               	andwf	129,f,c	;volatile
  6163  001530  EF4C  F00B         	goto	l42
  6164  001534                     l2522:
  6165  001534  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6166  001536  EFA8  F00A         	goto	u2170
  6167  00153A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6168  00153C  E107               	bnz	u2171
  6169  00153E  0E18               	movlw	24
  6170  001540  5C01               	subwf	digitalWrite@pin^0,w,c
  6171  001542  B0D8               	btfsc	status,0,c
  6172  001544  EFA6  F00A         	goto	u2171
  6173  001548  EFA8  F00A         	goto	u2170
  6174  00154C                     u2171:
  6175  00154C  EFD6  F00A         	goto	l2530
  6176  001550                     u2170:
  6177  001550                     
  6178                           ;io.c: 24:         pin -=16;
  6179  001550  0EF0               	movlw	240
  6180  001552  2601               	addwf	digitalWrite@pin^0,f,c
  6181  001554  0EFF               	movlw	255
  6182  001556  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6183                           
  6184                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  6185  001558  5003               	movf	digitalWrite@value^0,w,c
  6186  00155A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6187  00155C  B4D8               	btfsc	status,2,c
  6188  00155E  EFB3  F00A         	goto	u2181
  6189  001562  EFB5  F00A         	goto	u2180
  6190  001566                     u2181:
  6191  001566  EFC5  F00A         	goto	l2528
  6192  00156A                     u2180:
  6193  00156A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6194  00156E  0E01               	movlw	1
  6195  001570  6E06               	movwf	(??_digitalWrite+1)^0,c
  6196  001572  2A05               	incf	??_digitalWrite^0,f,c
  6197  001574  EFBE  F00A         	goto	u2194
  6198  001578                     u2195:
  6199  001578  90D8               	bcf	status,0,c
  6200  00157A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6201  00157C                     u2194:
  6202  00157C  2E05               	decfsz	??_digitalWrite^0,f,c
  6203  00157E  EFBC  F00A         	goto	u2195
  6204  001582  5006               	movf	(??_digitalWrite+1)^0,w,c
  6205  001584  1282               	iorwf	130,f,c	;volatile
  6206  001586  EF4C  F00B         	goto	l42
  6207  00158A                     l2528:
  6208  00158A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6209  00158E  0E01               	movlw	1
  6210  001590  6E06               	movwf	(??_digitalWrite+1)^0,c
  6211  001592  2A05               	incf	??_digitalWrite^0,f,c
  6212  001594  EFCE  F00A         	goto	u2204
  6213  001598                     u2205:
  6214  001598  90D8               	bcf	status,0,c
  6215  00159A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6216  00159C                     u2204:
  6217  00159C  2E05               	decfsz	??_digitalWrite^0,f,c
  6218  00159E  EFCC  F00A         	goto	u2205
  6219  0015A2  5006               	movf	(??_digitalWrite+1)^0,w,c
  6220  0015A4  0AFF               	xorlw	255
  6221  0015A6  1682               	andwf	130,f,c	;volatile
  6222  0015A8  EF4C  F00B         	goto	l42
  6223  0015AC                     l2530:
  6224  0015AC  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6225  0015AE  EFE4  F00A         	goto	u2210
  6226  0015B2  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6227  0015B4  E107               	bnz	u2211
  6228  0015B6  0E20               	movlw	32
  6229  0015B8  5C01               	subwf	digitalWrite@pin^0,w,c
  6230  0015BA  B0D8               	btfsc	status,0,c
  6231  0015BC  EFE2  F00A         	goto	u2211
  6232  0015C0  EFE4  F00A         	goto	u2210
  6233  0015C4                     u2211:
  6234  0015C4  EF12  F00B         	goto	l2538
  6235  0015C8                     u2210:
  6236  0015C8                     
  6237                           ;io.c: 28:         pin -=24;
  6238  0015C8  0EE8               	movlw	232
  6239  0015CA  2601               	addwf	digitalWrite@pin^0,f,c
  6240  0015CC  0EFF               	movlw	255
  6241  0015CE  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6242                           
  6243                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  6244  0015D0  5003               	movf	digitalWrite@value^0,w,c
  6245  0015D2  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6246  0015D4  B4D8               	btfsc	status,2,c
  6247  0015D6  EFEF  F00A         	goto	u2221
  6248  0015DA  EFF1  F00A         	goto	u2220
  6249  0015DE                     u2221:
  6250  0015DE  EF01  F00B         	goto	l2536
  6251  0015E2                     u2220:
  6252  0015E2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6253  0015E6  0E01               	movlw	1
  6254  0015E8  6E06               	movwf	(??_digitalWrite+1)^0,c
  6255  0015EA  2A05               	incf	??_digitalWrite^0,f,c
  6256  0015EC  EFFA  F00A         	goto	u2234
  6257  0015F0                     u2235:
  6258  0015F0  90D8               	bcf	status,0,c
  6259  0015F2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6260  0015F4                     u2234:
  6261  0015F4  2E05               	decfsz	??_digitalWrite^0,f,c
  6262  0015F6  EFF8  F00A         	goto	u2235
  6263  0015FA  5006               	movf	(??_digitalWrite+1)^0,w,c
  6264  0015FC  1283               	iorwf	131,f,c	;volatile
  6265  0015FE  EF4C  F00B         	goto	l42
  6266  001602                     l2536:
  6267  001602  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6268  001606  0E01               	movlw	1
  6269  001608  6E06               	movwf	(??_digitalWrite+1)^0,c
  6270  00160A  2A05               	incf	??_digitalWrite^0,f,c
  6271  00160C  EF0A  F00B         	goto	u2244
  6272  001610                     u2245:
  6273  001610  90D8               	bcf	status,0,c
  6274  001612  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6275  001614                     u2244:
  6276  001614  2E05               	decfsz	??_digitalWrite^0,f,c
  6277  001616  EF08  F00B         	goto	u2245
  6278  00161A  5006               	movf	(??_digitalWrite+1)^0,w,c
  6279  00161C  0AFF               	xorlw	255
  6280  00161E  1683               	andwf	131,f,c	;volatile
  6281  001620  EF4C  F00B         	goto	l42
  6282  001624                     l2538:
  6283  001624  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6284  001626  EF20  F00B         	goto	u2250
  6285  00162A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6286  00162C  E107               	bnz	u2251
  6287  00162E  0E28               	movlw	40
  6288  001630  5C01               	subwf	digitalWrite@pin^0,w,c
  6289  001632  B0D8               	btfsc	status,0,c
  6290  001634  EF1E  F00B         	goto	u2251
  6291  001638  EF20  F00B         	goto	u2250
  6292  00163C                     u2251:
  6293  00163C  EF4C  F00B         	goto	l42
  6294  001640                     u2250:
  6295  001640                     
  6296                           ;io.c: 32:         pin -=32;
  6297  001640  0EE0               	movlw	224
  6298  001642  2601               	addwf	digitalWrite@pin^0,f,c
  6299  001644  0EFF               	movlw	255
  6300  001646  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6301                           
  6302                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  6303  001648  5003               	movf	digitalWrite@value^0,w,c
  6304  00164A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6305  00164C  B4D8               	btfsc	status,2,c
  6306  00164E  EF2B  F00B         	goto	u2261
  6307  001652  EF2D  F00B         	goto	u2260
  6308  001656                     u2261:
  6309  001656  EF3D  F00B         	goto	l2544
  6310  00165A                     u2260:
  6311  00165A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6312  00165E  0E01               	movlw	1
  6313  001660  6E06               	movwf	(??_digitalWrite+1)^0,c
  6314  001662  2A05               	incf	??_digitalWrite^0,f,c
  6315  001664  EF36  F00B         	goto	u2274
  6316  001668                     u2275:
  6317  001668  90D8               	bcf	status,0,c
  6318  00166A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6319  00166C                     u2274:
  6320  00166C  2E05               	decfsz	??_digitalWrite^0,f,c
  6321  00166E  EF34  F00B         	goto	u2275
  6322  001672  5006               	movf	(??_digitalWrite+1)^0,w,c
  6323  001674  1284               	iorwf	132,f,c	;volatile
  6324  001676  EF4C  F00B         	goto	l42
  6325  00167A                     l2544:
  6326  00167A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6327  00167E  0E01               	movlw	1
  6328  001680  6E06               	movwf	(??_digitalWrite+1)^0,c
  6329  001682  2A05               	incf	??_digitalWrite^0,f,c
  6330  001684  EF46  F00B         	goto	u2284
  6331  001688                     u2285:
  6332  001688  90D8               	bcf	status,0,c
  6333  00168A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6334  00168C                     u2284:
  6335  00168C  2E05               	decfsz	??_digitalWrite^0,f,c
  6336  00168E  EF44  F00B         	goto	u2285
  6337  001692  5006               	movf	(??_digitalWrite+1)^0,w,c
  6338  001694  0AFF               	xorlw	255
  6339  001696  1684               	andwf	132,f,c	;volatile
  6340  001698                     l42:
  6341  001698  0012               	return		;funcret
  6342  00169A                     __end_of_digitalWrite:
  6343                           	callstack 0
  6344                           
  6345 ;; *************** function _Delay2ms *****************
  6346 ;; Defined at:
  6347 ;;		line 35 in file "lcd.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;		None
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;  i               1    1[COMRAM] unsigned char 
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  1    wreg      void 
  6354 ;; Registers used:
  6355 ;;		wreg, status,2, status,0, cstack
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6361 ;;      Params:         0       0       0       0       0       0       0
  6362 ;;      Locals:         1       0       0       0       0       0       0
  6363 ;;      Temps:          0       0       0       0       0       0       0
  6364 ;;      Totals:         1       0       0       0       0       0       0
  6365 ;;Total ram usage:        1 bytes
  6366 ;; Hardware stack levels used: 1
  6367 ;; Hardware stack levels required when called: 1
  6368 ;; This function calls:
  6369 ;;		_Delay40us
  6370 ;; This function is called by:
  6371 ;;		_lcdCommand
  6372 ;;		_lcdInit
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           	psect	text31
  6377  002880                     __ptext31:
  6378                           	callstack 0
  6379  002880                     _Delay2ms:
  6380                           	callstack 25
  6381  002880                     
  6382                           ;lcd.c: 36:     unsigned char i;;lcd.c: 37:     for (i = 0; i < 50; i++) {
  6383  002880  0E00               	movlw	0
  6384  002882  6E02               	movwf	Delay2ms@i^0,c
  6385  002884                     l2552:
  6386                           
  6387                           ;lcd.c: 38:         Delay40us();
  6388  002884  EC4E  F014         	call	_Delay40us	;wreg free
  6389  002888                     
  6390                           ;lcd.c: 39:     }
  6391  002888  2A02               	incf	Delay2ms@i^0,f,c
  6392  00288A  0E31               	movlw	49
  6393  00288C  6402               	cpfsgt	Delay2ms@i^0,c
  6394  00288E  EF4B  F014         	goto	u2291
  6395  002892  EF4D  F014         	goto	u2290
  6396  002896                     u2291:
  6397  002896  EF42  F014         	goto	l2552
  6398  00289A                     u2290:
  6399  00289A  0012               	return		;funcret
  6400  00289C                     __end_of_Delay2ms:
  6401                           	callstack 0
  6402                           
  6403 ;; *************** function _Delay40us *****************
  6404 ;; Defined at:
  6405 ;;		line 30 in file "lcd.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;		None
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;  i               1    0[COMRAM] unsigned char 
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  1    wreg      void 
  6412 ;; Registers used:
  6413 ;;		wreg, status,2, status,0
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6419 ;;      Params:         0       0       0       0       0       0       0
  6420 ;;      Locals:         1       0       0       0       0       0       0
  6421 ;;      Temps:          0       0       0       0       0       0       0
  6422 ;;      Totals:         1       0       0       0       0       0       0
  6423 ;;Total ram usage:        1 bytes
  6424 ;; Hardware stack levels used: 1
  6425 ;; This function calls:
  6426 ;;		Nothing
  6427 ;; This function is called by:
  6428 ;;		_Delay2ms
  6429 ;;		_lcdCommand
  6430 ;;		_lcdData
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           	psect	text32
  6435  00289C                     __ptext32:
  6436                           	callstack 0
  6437  00289C                     _Delay40us:
  6438                           	callstack 26
  6439  00289C                     
  6440                           ;lcd.c: 31:     unsigned char i;;lcd.c: 32:     for (i = 0; i < 25; i++);
  6441  00289C  0E00               	movlw	0
  6442  00289E  6E01               	movwf	Delay40us@i^0,c
  6443  0028A0                     l2502:
  6444  0028A0  2A01               	incf	Delay40us@i^0,f,c
  6445  0028A2  0E18               	movlw	24
  6446  0028A4  6401               	cpfsgt	Delay40us@i^0,c
  6447  0028A6  EF57  F014         	goto	u2081
  6448  0028AA  EF59  F014         	goto	u2080
  6449  0028AE                     u2081:
  6450  0028AE  EF50  F014         	goto	l2502
  6451  0028B2                     u2080:
  6452  0028B2  0012               	return		;funcret
  6453  0028B4                     __end_of_Delay40us:
  6454                           	callstack 0
  6455                           
  6456 ;; *************** function _kpRead *****************
  6457 ;; Defined at:
  6458 ;;		line 35 in file "keypad.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;		None
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;		None
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  2    0[COMRAM] unsigned int 
  6465 ;; Registers used:
  6466 ;;		None
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6472 ;;      Params:         2       0       0       0       0       0       0
  6473 ;;      Locals:         0       0       0       0       0       0       0
  6474 ;;      Temps:          0       0       0       0       0       0       0
  6475 ;;      Totals:         2       0       0       0       0       0       0
  6476 ;;Total ram usage:        2 bytes
  6477 ;; Hardware stack levels used: 1
  6478 ;; This function calls:
  6479 ;;		Nothing
  6480 ;; This function is called by:
  6481 ;;		_standBy
  6482 ;;		_menu
  6483 ;;		_potencia
  6484 ;;		_timer
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text33
  6489  0028D2                     __ptext33:
  6490                           	callstack 0
  6491  0028D2                     _kpRead:
  6492                           	callstack 29
  6493  0028D2                     
  6494                           ;keypad.c: 36:     return valor;
  6495  0028D2  C063  F001         	movff	_valor,?_kpRead
  6496  0028D6  C064  F002         	movff	_valor+1,?_kpRead+1
  6497  0028DA  0012               	return		;funcret
  6498  0028DC                     __end_of_kpRead:
  6499                           	callstack 0
  6500                           
  6501 ;; *************** function _kpDebounce *****************
  6502 ;; Defined at:
  6503 ;;		line 39 in file "keypad.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;		None
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;  k               2    6[COMRAM] int 
  6508 ;;  i               1    9[COMRAM] unsigned char 
  6509 ;;  j               1    8[COMRAM] unsigned char 
  6510 ;;  old_D           1    5[COMRAM] unsigned char 
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  1    wreg      void 
  6513 ;; Registers used:
  6514 ;;		wreg, status,2, status,0, prodl, prodh
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6520 ;;      Params:         0       0       0       0       0       0       0
  6521 ;;      Locals:         5       0       0       0       0       0       0
  6522 ;;      Temps:          5       0       0       0       0       0       0
  6523 ;;      Totals:        10       0       0       0       0       0       0
  6524 ;;Total ram usage:       10 bytes
  6525 ;; Hardware stack levels used: 1
  6526 ;; This function calls:
  6527 ;;		Nothing
  6528 ;; This function is called by:
  6529 ;;		_standBy
  6530 ;;		_menu
  6531 ;;		_potencia
  6532 ;;		_timer
  6533 ;; This function uses a non-reentrant model
  6534 ;;
  6535                           
  6536                           	psect	text34
  6537  0019DE                     __ptext34:
  6538                           	callstack 0
  6539  0019DE                     _kpDebounce:
  6540                           	callstack 29
  6541  0019DE                     
  6542                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  6543  0019DE  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  6544  0019E2                     
  6545                           ;keypad.c: 51:     TRISD |= 0x0f;
  6546  0019E2  0E0F               	movlw	15
  6547  0019E4  1295               	iorwf	149,f,c	;volatile
  6548  0019E6                     
  6549                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  6550  0019E6  0E00               	movlw	0
  6551  0019E8  6E0A               	movwf	kpDebounce@i^0,c
  6552  0019EA                     l3242:
  6553                           
  6554                           ;keypad.c: 55:         TRISB &= 0xF8;
  6555  0019EA  0EF8               	movlw	248
  6556  0019EC  1693               	andwf	147,f,c	;volatile
  6557                           
  6558                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  6559  0019EE  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  6560  0019F2  0E01               	movlw	1
  6561  0019F4  6E02               	movwf	(??_kpDebounce+1)^0,c
  6562  0019F6  2A01               	incf	??_kpDebounce^0,f,c
  6563  0019F8  EF00  F00D         	goto	u3384
  6564  0019FC                     u3385:
  6565  0019FC  90D8               	bcf	status,0,c
  6566  0019FE  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6567  001A00                     u3384:
  6568  001A00  2E01               	decfsz	??_kpDebounce^0,f,c
  6569  001A02  EFFE  F00C         	goto	u3385
  6570  001A06  5002               	movf	(??_kpDebounce+1)^0,w,c
  6571  001A08  1293               	iorwf	147,f,c	;volatile
  6572                           
  6573                           ;keypad.c: 59:         PORTB |= 0x07;
  6574  001A0A  0E07               	movlw	7
  6575  001A0C  1281               	iorwf	129,f,c	;volatile
  6576                           
  6577                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  6578  001A0E  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  6579  001A12  0E01               	movlw	1
  6580  001A14  6E02               	movwf	(??_kpDebounce+1)^0,c
  6581  001A16  2A01               	incf	??_kpDebounce^0,f,c
  6582  001A18  EF10  F00D         	goto	u3394
  6583  001A1C                     u3395:
  6584  001A1C  90D8               	bcf	status,0,c
  6585  001A1E  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6586  001A20                     u3394:
  6587  001A20  2E01               	decfsz	??_kpDebounce^0,f,c
  6588  001A22  EF0E  F00D         	goto	u3395
  6589  001A26  5002               	movf	(??_kpDebounce+1)^0,w,c
  6590  001A28  0AFF               	xorlw	255
  6591  001A2A  1681               	andwf	129,f,c	;volatile
  6592  001A2C                     
  6593                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  6594  001A2C  0E00               	movlw	0
  6595  001A2E  6E08               	movwf	(kpDebounce@k+1)^0,c
  6596  001A30  0E00               	movlw	0
  6597  001A32  6E07               	movwf	kpDebounce@k^0,c
  6598  001A34                     l3250:
  6599  001A34  4A07               	infsnz	kpDebounce@k^0,f,c
  6600  001A36  2A08               	incf	(kpDebounce@k+1)^0,f,c
  6601  001A38  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  6602  001A3A  EF28  F00D         	goto	u3401
  6603  001A3E  5008               	movf	(kpDebounce@k+1)^0,w,c
  6604  001A40  E109               	bnz	u3400
  6605  001A42  0E0A               	movlw	10
  6606  001A44  5C07               	subwf	kpDebounce@k^0,w,c
  6607  001A46  A0D8               	btfss	status,0,c
  6608  001A48  EF28  F00D         	goto	u3401
  6609  001A4C  EF2A  F00D         	goto	u3400
  6610  001A50                     u3401:
  6611  001A50  EF1A  F00D         	goto	l3250
  6612  001A54                     u3400:
  6613  001A54                     
  6614                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  6615  001A54  0E00               	movlw	0
  6616  001A56  6E09               	movwf	kpDebounce@j^0,c
  6617  001A58                     l3260:
  6618                           
  6619                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  6620  001A58  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  6621  001A5C  0E01               	movlw	1
  6622  001A5E  6E02               	movwf	(??_kpDebounce+1)^0,c
  6623  001A60  2A01               	incf	??_kpDebounce^0,f,c
  6624  001A62  EF35  F00D         	goto	u3414
  6625  001A66                     u3415:
  6626  001A66  90D8               	bcf	status,0,c
  6627  001A68  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6628  001A6A                     u3414:
  6629  001A6A  2E01               	decfsz	??_kpDebounce^0,f,c
  6630  001A6C  EF33  F00D         	goto	u3415
  6631  001A70  5002               	movf	(??_kpDebounce+1)^0,w,c
  6632  001A72  1483               	andwf	131,w,c	;volatile
  6633  001A74  0900               	iorlw	0
  6634  001A76  A4D8               	btfss	status,2,c
  6635  001A78  EF40  F00D         	goto	u3421
  6636  001A7C  EF42  F00D         	goto	u3420
  6637  001A80                     u3421:
  6638  001A80  EF5A  F00D         	goto	l3264
  6639  001A84                     u3420:
  6640  001A84                     
  6641                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  6642  001A84  500A               	movf	kpDebounce@i^0,w,c
  6643  001A86  0D04               	mullw	4
  6644  001A88  50F3               	movf	243,w,c
  6645  001A8A  2409               	addwf	kpDebounce@j^0,w,c
  6646  001A8C  6E01               	movwf	??_kpDebounce^0,c
  6647  001A8E  0E01               	movlw	1
  6648  001A90  6E02               	movwf	(??_kpDebounce+1)^0,c
  6649  001A92  0E00               	movlw	0
  6650  001A94  6E03               	movwf	(??_kpDebounce+2)^0,c
  6651  001A96  2A01               	incf	??_kpDebounce^0,f,c
  6652  001A98  EF51  F00D         	goto	u3434
  6653  001A9C                     u3435:
  6654  001A9C  90D8               	bcf	status,0,c
  6655  001A9E  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6656  001AA0  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  6657  001AA2                     u3434:
  6658  001AA2  2E01               	decfsz	??_kpDebounce^0,f,c
  6659  001AA4  EF4E  F00D         	goto	u3435
  6660  001AA8  5002               	movf	(??_kpDebounce+1)^0,w,c
  6661  001AAA  1261               	iorwf	kpDebounce@valorNovo^0,f,c
  6662  001AAC  5003               	movf	(??_kpDebounce+2)^0,w,c
  6663  001AAE  1262               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  6664                           
  6665                           ;keypad.c: 69:             } else {
  6666  001AB0  EF74  F00D         	goto	l3266
  6667  001AB4                     l3264:
  6668                           
  6669                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  6670  001AB4  500A               	movf	kpDebounce@i^0,w,c
  6671  001AB6  0D04               	mullw	4
  6672  001AB8  50F3               	movf	243,w,c
  6673  001ABA  2409               	addwf	kpDebounce@j^0,w,c
  6674  001ABC  6E01               	movwf	??_kpDebounce^0,c
  6675  001ABE  0E01               	movlw	1
  6676  001AC0  6E02               	movwf	(??_kpDebounce+1)^0,c
  6677  001AC2  0E00               	movlw	0
  6678  001AC4  6E03               	movwf	(??_kpDebounce+2)^0,c
  6679  001AC6  2A01               	incf	??_kpDebounce^0,f,c
  6680  001AC8  EF69  F00D         	goto	u3444
  6681  001ACC                     u3445:
  6682  001ACC  90D8               	bcf	status,0,c
  6683  001ACE  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6684  001AD0  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  6685  001AD2                     u3444:
  6686  001AD2  2E01               	decfsz	??_kpDebounce^0,f,c
  6687  001AD4  EF66  F00D         	goto	u3445
  6688  001AD8  1C02               	comf	(??_kpDebounce+1)^0,w,c
  6689  001ADA  6E04               	movwf	(??_kpDebounce+3)^0,c
  6690  001ADC  1C03               	comf	(??_kpDebounce+2)^0,w,c
  6691  001ADE  6E05               	movwf	(??_kpDebounce+4)^0,c
  6692  001AE0  5004               	movf	(??_kpDebounce+3)^0,w,c
  6693  001AE2  1661               	andwf	kpDebounce@valorNovo^0,f,c
  6694  001AE4  5005               	movf	(??_kpDebounce+4)^0,w,c
  6695  001AE6  1662               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  6696  001AE8                     l3266:
  6697                           
  6698                           ;keypad.c: 72:         }
  6699  001AE8  2A09               	incf	kpDebounce@j^0,f,c
  6700  001AEA  0E03               	movlw	3
  6701  001AEC  6409               	cpfsgt	kpDebounce@j^0,c
  6702  001AEE  EF7B  F00D         	goto	u3451
  6703  001AF2  EF7D  F00D         	goto	u3450
  6704  001AF6                     u3451:
  6705  001AF6  EF2C  F00D         	goto	l3260
  6706  001AFA                     u3450:
  6707  001AFA                     
  6708                           ;keypad.c: 73:     }
  6709  001AFA  2A0A               	incf	kpDebounce@i^0,f,c
  6710  001AFC  0E02               	movlw	2
  6711  001AFE  640A               	cpfsgt	kpDebounce@i^0,c
  6712  001B00  EF84  F00D         	goto	u3461
  6713  001B04  EF86  F00D         	goto	u3460
  6714  001B08                     u3461:
  6715  001B08  EFF5  F00C         	goto	l3242
  6716  001B0C                     u3460:
  6717  001B0C                     
  6718                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  6719  001B0C  5061               	movf	kpDebounce@valorNovo^0,w,c
  6720  001B0E  185F               	xorwf	kpDebounce@valorAntigo^0,w,c
  6721  001B10  E107               	bnz	u3471
  6722  001B12  5062               	movf	(kpDebounce@valorNovo+1)^0,w,c
  6723  001B14  1860               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  6724  001B16  A4D8               	btfss	status,2,c
  6725  001B18  EF90  F00D         	goto	u3471
  6726  001B1C  EF92  F00D         	goto	u3470
  6727  001B20                     u3471:
  6728  001B20  EF95  F00D         	goto	l3278
  6729  001B24                     u3470:
  6730  001B24                     
  6731                           ;keypad.c: 75:         tempo--;
  6732  001B24  066A               	decf	kpDebounce@tempo^0,f,c
  6733                           
  6734                           ;keypad.c: 76:     } else {
  6735  001B26  EF9B  F00D         	goto	l107
  6736  001B2A                     l3278:
  6737                           
  6738                           ;keypad.c: 77:         tempo = 10;
  6739  001B2A  0E0A               	movlw	10
  6740  001B2C  6E6A               	movwf	kpDebounce@tempo^0,c
  6741  001B2E                     
  6742                           ;keypad.c: 78:         valorAntigo = valorNovo;
  6743  001B2E  C061  F05F         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  6744  001B32  C062  F060         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  6745  001B36                     l107:
  6746                           
  6747                           ;keypad.c: 80:     if (tempo == 0) {
  6748  001B36  506A               	movf	kpDebounce@tempo^0,w,c
  6749  001B38  A4D8               	btfss	status,2,c
  6750  001B3A  EFA1  F00D         	goto	u3481
  6751  001B3E  EFA3  F00D         	goto	u3480
  6752  001B42                     u3481:
  6753  001B42  EFA7  F00D         	goto	l108
  6754  001B46                     u3480:
  6755  001B46                     
  6756                           ;keypad.c: 81:         valor = valorAntigo;
  6757  001B46  C05F  F063         	movff	kpDebounce@valorAntigo,_valor
  6758  001B4A  C060  F064         	movff	kpDebounce@valorAntigo+1,_valor+1
  6759  001B4E                     l108:
  6760                           
  6761                           ;keypad.c: 83:     PORTD = old_D;
  6762  001B4E  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  6763  001B52                     
  6764                           ;keypad.c: 84:     TRISD = 0x00;
  6765  001B52  0E00               	movlw	0
  6766  001B54  6E95               	movwf	149,c	;volatile
  6767  001B56  0012               	return		;funcret
  6768  001B58                     __end_of_kpDebounce:
  6769                           	callstack 0
  6770                           
  6771                           	psect	rparam
  6772  0000                     
  6773                           	psect	idloc
  6774                           
  6775                           ;Config register IDLOC0 @ 0x200000
  6776                           ;	unspecified, using default values
  6777  200000                     	org	2097152
  6778  200000  FF                 	db	255
  6779                           
  6780                           ;Config register IDLOC1 @ 0x200001
  6781                           ;	unspecified, using default values
  6782  200001                     	org	2097153
  6783  200001  FF                 	db	255
  6784                           
  6785                           ;Config register IDLOC2 @ 0x200002
  6786                           ;	unspecified, using default values
  6787  200002                     	org	2097154
  6788  200002  FF                 	db	255
  6789                           
  6790                           ;Config register IDLOC3 @ 0x200003
  6791                           ;	unspecified, using default values
  6792  200003                     	org	2097155
  6793  200003  FF                 	db	255
  6794                           
  6795                           ;Config register IDLOC4 @ 0x200004
  6796                           ;	unspecified, using default values
  6797  200004                     	org	2097156
  6798  200004  FF                 	db	255
  6799                           
  6800                           ;Config register IDLOC5 @ 0x200005
  6801                           ;	unspecified, using default values
  6802  200005                     	org	2097157
  6803  200005  FF                 	db	255
  6804                           
  6805                           ;Config register IDLOC6 @ 0x200006
  6806                           ;	unspecified, using default values
  6807  200006                     	org	2097158
  6808  200006  FF                 	db	255
  6809                           
  6810                           ;Config register IDLOC7 @ 0x200007
  6811                           ;	unspecified, using default values
  6812  200007                     	org	2097159
  6813  200007  FF                 	db	255
  6814                           
  6815                           	psect	config
  6816                           
  6817                           ; Padding undefined space
  6818  300000                     	org	3145728
  6819  300000  FF                 	db	255
  6820                           
  6821                           ;Config register CONFIG1H @ 0x300001
  6822                           ;	unspecified, using default values
  6823                           ;	Oscillator Selection bits
  6824                           ;	OSC = 0x7, unprogrammed default
  6825                           ;	Fail-Safe Clock Monitor Enable bit
  6826                           ;	FCMEN = 0x0, unprogrammed default
  6827                           ;	Internal/External Oscillator Switchover bit
  6828                           ;	IESO = 0x0, unprogrammed default
  6829  300001                     	org	3145729
  6830  300001  07                 	db	7
  6831                           
  6832                           ;Config register CONFIG2L @ 0x300002
  6833                           ;	unspecified, using default values
  6834                           ;	Power-up Timer Enable bit
  6835                           ;	PWRT = 0x1, unprogrammed default
  6836                           ;	Brown-out Reset Enable bits
  6837                           ;	BOREN = 0x3, unprogrammed default
  6838                           ;	Brown Out Reset Voltage bits
  6839                           ;	BORV = 0x3, unprogrammed default
  6840  300002                     	org	3145730
  6841  300002  1F                 	db	31
  6842                           
  6843                           ;Config register CONFIG2H @ 0x300003
  6844                           ;	unspecified, using default values
  6845                           ;	Watchdog Timer Enable bit
  6846                           ;	WDT = 0x1, unprogrammed default
  6847                           ;	Watchdog Timer Postscale Select bits
  6848                           ;	WDTPS = 0xF, unprogrammed default
  6849  300003                     	org	3145731
  6850  300003  1F                 	db	31
  6851                           
  6852                           ; Padding undefined space
  6853  300004                     	org	3145732
  6854  300004  FF                 	db	255
  6855                           
  6856                           ;Config register CONFIG3H @ 0x300005
  6857                           ;	unspecified, using default values
  6858                           ;	CCP2 MUX bit
  6859                           ;	CCP2MX = 0x1, unprogrammed default
  6860                           ;	PORTB A/D Enable bit
  6861                           ;	PBADEN = 0x1, unprogrammed default
  6862                           ;	Low-Power Timer1 Oscillator Enable bit
  6863                           ;	LPT1OSC = 0x0, unprogrammed default
  6864                           ;	MCLR Pin Enable bit
  6865                           ;	MCLRE = 0x1, unprogrammed default
  6866  300005                     	org	3145733
  6867  300005  83                 	db	131
  6868                           
  6869                           ;Config register CONFIG4L @ 0x300006
  6870                           ;	unspecified, using default values
  6871                           ;	Stack Full/Underflow Reset Enable bit
  6872                           ;	STVREN = 0x1, unprogrammed default
  6873                           ;	Single-Supply ICSP Enable bit
  6874                           ;	LVP = 0x1, unprogrammed default
  6875                           ;	Extended Instruction Set Enable bit
  6876                           ;	XINST = 0x0, unprogrammed default
  6877                           ;	Background Debugger Enable bit
  6878                           ;	DEBUG = 0x1, unprogrammed default
  6879  300006                     	org	3145734
  6880  300006  85                 	db	133
  6881                           
  6882                           ; Padding undefined space
  6883  300007                     	org	3145735
  6884  300007  FF                 	db	255
  6885                           
  6886                           ;Config register CONFIG5L @ 0x300008
  6887                           ;	unspecified, using default values
  6888                           ;	Code Protection bit
  6889                           ;	CP0 = 0x1, unprogrammed default
  6890                           ;	Code Protection bit
  6891                           ;	CP1 = 0x1, unprogrammed default
  6892                           ;	Code Protection bit
  6893                           ;	CP2 = 0x1, unprogrammed default
  6894                           ;	Code Protection bit
  6895                           ;	CP3 = 0x1, unprogrammed default
  6896  300008                     	org	3145736
  6897  300008  0F                 	db	15
  6898                           
  6899                           ;Config register CONFIG5H @ 0x300009
  6900                           ;	unspecified, using default values
  6901                           ;	Boot Block Code Protection bit
  6902                           ;	CPB = 0x1, unprogrammed default
  6903                           ;	Data EEPROM Code Protection bit
  6904                           ;	CPD = 0x1, unprogrammed default
  6905  300009                     	org	3145737
  6906  300009  C0                 	db	192
  6907                           
  6908                           ;Config register CONFIG6L @ 0x30000A
  6909                           ;	unspecified, using default values
  6910                           ;	Write Protection bit
  6911                           ;	WRT0 = 0x1, unprogrammed default
  6912                           ;	Write Protection bit
  6913                           ;	WRT1 = 0x1, unprogrammed default
  6914                           ;	Write Protection bit
  6915                           ;	WRT2 = 0x1, unprogrammed default
  6916                           ;	Write Protection bit
  6917                           ;	WRT3 = 0x1, unprogrammed default
  6918  30000A                     	org	3145738
  6919  30000A  0F                 	db	15
  6920                           
  6921                           ;Config register CONFIG6H @ 0x30000B
  6922                           ;	unspecified, using default values
  6923                           ;	Configuration Register Write Protection bit
  6924                           ;	WRTC = 0x1, unprogrammed default
  6925                           ;	Boot Block Write Protection bit
  6926                           ;	WRTB = 0x1, unprogrammed default
  6927                           ;	Data EEPROM Write Protection bit
  6928                           ;	WRTD = 0x1, unprogrammed default
  6929  30000B                     	org	3145739
  6930  30000B  E0                 	db	224
  6931                           
  6932                           ;Config register CONFIG7L @ 0x30000C
  6933                           ;	unspecified, using default values
  6934                           ;	Table Read Protection bit
  6935                           ;	EBTR0 = 0x1, unprogrammed default
  6936                           ;	Table Read Protection bit
  6937                           ;	EBTR1 = 0x1, unprogrammed default
  6938                           ;	Table Read Protection bit
  6939                           ;	EBTR2 = 0x1, unprogrammed default
  6940                           ;	Table Read Protection bit
  6941                           ;	EBTR3 = 0x1, unprogrammed default
  6942  30000C                     	org	3145740
  6943  30000C  0F                 	db	15
  6944                           
  6945                           ;Config register CONFIG7H @ 0x30000D
  6946                           ;	unspecified, using default values
  6947                           ;	Boot Block Table Read Protection bit
  6948                           ;	EBTRB = 0x1, unprogrammed default
  6949  30000D                     	org	3145741
  6950  30000D  40                 	db	64
  6951                           tosu	equ	0xFFF
  6952                           tosh	equ	0xFFE
  6953                           tosl	equ	0xFFD
  6954                           stkptr	equ	0xFFC
  6955                           pclatu	equ	0xFFB
  6956                           pclath	equ	0xFFA
  6957                           pcl	equ	0xFF9
  6958                           tblptru	equ	0xFF8
  6959                           tblptrh	equ	0xFF7
  6960                           tblptrl	equ	0xFF6
  6961                           tablat	equ	0xFF5
  6962                           prodh	equ	0xFF4
  6963                           prodl	equ	0xFF3
  6964                           indf0	equ	0xFEF
  6965                           postinc0	equ	0xFEE
  6966                           postdec0	equ	0xFED
  6967                           preinc0	equ	0xFEC
  6968                           plusw0	equ	0xFEB
  6969                           fsr0h	equ	0xFEA
  6970                           fsr0l	equ	0xFE9
  6971                           wreg	equ	0xFE8
  6972                           indf1	equ	0xFE7
  6973                           postinc1	equ	0xFE6
  6974                           postdec1	equ	0xFE5
  6975                           preinc1	equ	0xFE4
  6976                           plusw1	equ	0xFE3
  6977                           fsr1h	equ	0xFE2
  6978                           fsr1l	equ	0xFE1
  6979                           bsr	equ	0xFE0
  6980                           indf2	equ	0xFDF
  6981                           postinc2	equ	0xFDE
  6982                           postdec2	equ	0xFDD
  6983                           preinc2	equ	0xFDC
  6984                           plusw2	equ	0xFDB
  6985                           fsr2h	equ	0xFDA
  6986                           fsr2l	equ	0xFD9
  6987                           status	equ	0xFD8

Data Sizes:
    Strings     134
    Constant    16
    Data        80
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     74     106
    BANK0           128      0      80
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 17
		 -> STR_13(CODE[12]), STR_12(CODE[1]), STR_11(CODE[16]), STR_10(CODE[7]), 
		 -> STR_9(CODE[11]), STR_8(CODE[10]), STR_7(CODE[9]), STR_6(CODE[11]), 
		 -> STR_5(CODE[8]), STR_4(CODE[11]), STR_3(CODE[13]), STR_2(CODE[17]), 
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_menu
    _menu->_standBy
    _timer->_contagem
    _contagem->_ssdDigit
    ___almod->___aldiv
    _standBy->_menuLigando
    _ssdUpdate->_digitalWrite
    _ssdInit->_pinMode
    _ssdDigit->___almod
    _menuLigando->___fladd
    _lcdInit->_lcdCommand
    _potencia->_lcdNumber
    _pwmSet1->___lwdiv
    _lcdString->_lcdData
    _lcdNumber->___awmod
    _lcdData->_digitalWrite
    ___awmod->___fltol
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  131961
                               _menu
                            _pwmInit
                            _ssdInit
                            _standBy
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0   96301
                                             72 COMRAM     2     2      0
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                          _lcdString
                           _potencia
                            _pwmSet1
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
                            _standBy
                              _timer
 ---------------------------------------------------------------------------------
 (2) _timer                                               14    14      0   32302
                                             44 COMRAM    14    14      0
                            ___awmod
                            ___fladd
                             ___flge
                           _contagem
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                          _lcdString
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (3) _contagem                                            18    10      8   14430
                                             26 COMRAM    18    10      8
                            ___aldiv
                            ___almod
                            ___awmod
                            ___fladd
                             ___flge
                            ___fltol
                             ___wmul
                          _atraso_ms
                            _pwmSet1
                           _ssdDigit
                          _ssdUpdate
                          _timerInit
 ---------------------------------------------------------------------------------
 (4) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8     904
                                             14 COMRAM    10     2      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     908
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _standBy                                              2     2      0   34308
                                             70 COMRAM     2     2      0
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdInit
                          _lcdString
                        _menuLigando
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _ssdUpdate                                            2     2      0    2572
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _ssdInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1    1392
                                             24 COMRAM     2     1      1
                            ___aldiv (ARG)
                            ___almod (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _menuLigando                                         54    54      0   17848
                                             16 COMRAM    54    54      0
                            ___fladd
                             ___flge
                          _atraso_ms
                         _lcdCommand
                            _lcdData
                            _lcdInit
                          _lcdString
 ---------------------------------------------------------------------------------
 (3) _lcdInit                                              0     0      0    4243
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2     366
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1094
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2692
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _potencia                                            38    38      0   15954
                                             20 COMRAM    38    38      0
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                            _lcdData
                          _lcdNumber
                          _lcdString
                            _pwmSet1
 ---------------------------------------------------------------------------------
 (4) _pwmSet1                                              5     5      0    1476
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     919
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _lcdString                                            6     4      2    3741
                                              8 COMRAM     6     4      2
                            _lcdData
 ---------------------------------------------------------------------------------
 (3) _lcdNumber                                            4     2      2    4641
                                             16 COMRAM     4     2      2
                            ___awdiv
                            ___awmod
                            _lcdData
 ---------------------------------------------------------------------------------
 (4) _lcdData                                              2     2      0    2663
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1208
                                             10 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _lcdCommand                                           2     2      0    2799
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _Delay2ms                                             1     1      0      92
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (5) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _kpDebounce                                          10    10      0     315
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _menu
     _kpDebounce
     _kpRead
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _lcdString
       _lcdData
         _Delay40us
         _digitalWrite
     _potencia
       _kpDebounce
       _kpRead
       _lcdCommand
       _lcdData
       _lcdNumber
         ___awdiv
         ___awmod
           ___awdiv (ARG)
           ___fltol (ARG)
         _lcdData
       _lcdString
       _pwmSet1
         ___lwdiv
         ___wmul
     _pwmSet1
     _ssdDigit
       ___aldiv (ARG)
       ___almod (ARG)
         ___aldiv (ARG)
       ___awmod (ARG)
     _ssdInit
       _pinMode
     _ssdUpdate
       _digitalWrite
     _standBy
       _kpDebounce
       _kpInit
       _kpRead
       _lcdCommand
       _lcdInit
         _Delay2ms
         _lcdCommand
         _pinMode
       _lcdString
       _menuLigando
         ___fladd
         ___flge
         _atraso_ms
         _lcdCommand
         _lcdData
         _lcdInit
         _lcdString
       _ssdDigit
       _ssdInit
       _ssdUpdate
     _timer
       ___awmod
       ___fladd
       ___flge
       _contagem
         ___aldiv
         ___almod
         ___awmod
         ___fladd
         ___flge
         ___fltol
         ___wmul
         _atraso_ms
         _pwmSet1
         _ssdDigit
         _ssdUpdate
         _timerInit
       _kpDebounce
       _kpInit
       _kpRead
       _lcdCommand
       _lcdString
       _ssdDigit
       _ssdInit
       _ssdUpdate
   _pwmInit
   _ssdInit
   _standBy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      50       5       62.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     4A      6A       1       83.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BA      15        0.0%
DATA                 0      0      BA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jul 30 20:59:42 2021

           lcdString@msg 0009                       l42 1698                       l76 144A  
                     l89 28DA             ___awdiv@sign 0006                       _v0 0068  
                     _v1 0067                       _v2 0066                       _v3 0065  
    ___wmul@multiplicand 0003                      l112 28D0                      l130 289A  
                    l107 1B36                      l108 1B4E                      l140 27B6  
                    l109 1B56                      l125 28B2                      l152 258E  
                    l304 0F3E                      l320 287C                      l137 242E  
                    l146 2762                      l402 28E2                      l155 24A6  
                    l412 265E                      l236 2300                      l182 26B6  
                    l415 2862                      l239 20AA                      l256 19DC  
                    l192 1CA6                      l280 11FC                      l195 270C  
                    l507 20A8                      l269 183C                      l712 1EB8  
                    l378 25FA                      l387 28C6                      l646 223E  
                    l494 1DB2                      l680 1F76                      l913 251A  
                    l906 2512                      l659 23B0                      l685 1FBC  
                    l943 0886                      l960 09A0                      l952 0B56  
                    l944 0874                      l945 083A                      l970 0A5E  
                    l969 0A70             ___awmod@sign 0010                      wreg 000FE8  
           ___fltol@exp1 000A                     l3000 0902                     l3010 096E  
                   l3002 0904                     l3100 21BC                     l3020 09C6  
                   l3012 0970                     l3004 090E                     l3110 21F2  
                   l3102 21CE                     l3030 09F4                     l3014 0980  
                   l3006 0914                     l3112 2208                     l3104 21D6  
                   l3120 221E                     l3032 0A02                     l3024 09DA  
                   l3040 0A20                     l3008 093A                     l3016 0990  
                   l3200 1E1E                     l3122 222E                     l3114 2210  
                   l3106 21DE                     l3130 2306                     l3034 0A0A  
                   l3026 09E4                     l3018 09B6                     l3042 0A2E  
                   l3210 1E4E                     l3202 1E2C                     l2250 28B8  
                   l3124 2236                     l3116 2212                     l3108 21EC  
                   l3140 2336                     l3132 2314                     l3052 0A80  
                   l3060 0AD6                     l3044 0A32                     l3036 0A0E  
                   l3028 09F2                     l3300 1854                     l3220 1E78  
                   l3212 1E58                     l2252 28BC                     l3230 28D2  
                   l2502 28A0                     l2510 147A                     l3118 2218  
                   l3150 237C                     l3142 2348                     l3134 231C  
                   l3070 0B28                     l3062 0AE6                     l3054 0A8C  
                   l3046 0A40                     l3038 0A1E                     l3310 1874  
                   l3302 185A                     l3222 1E88                     l3232 19DE  
                   l2504 28A2                     l2520 1512                     l2512 149A  
                   l2600 23B8                     l3160 23A8                     l3152 2384  
                   l3144 2350                     l3136 2320                     l3128 2302  
                   l3080 0B46                     l3072 0B2E                     l3064 0AF6  
                   l3056 0A9A                     l3048 0A56                     l3320 18A8  
                   l3312 1878                     l3400 2286                     l3224 1E98  
                   l3208 1E44                     l2248 28B4                     l3250 1A34  
                   l3242 19EA                     l3234 19E2                     l2530 15AC  
                   l2522 1534                     l2514 14BC                     l2506 144C  
                   l2610 23FC                     l2602 23BC                     l3090 2196  
                   l3154 238A                     l3146 2358                     l3138 232E  
                   l3074 0B30                     l3066 0B16                     l3058 0AD4  
                   l3170 1F26                     l3330 18FE                     l3322 18AC  
                   l3314 1894                     l3410 22B2                     l3402 228A  
                   l3226 1EA8                     l3218 1E6C                     l1394 28DC  
                   l3260 1A58                     l3252 1A38                     l3244 1A2C  
                   l3236 19E6                     l2540 1640                     l2532 15C8  
                   l2524 1550                     l2516 14D8                     l2508 1468  
                   l2612 2400                     l2604 23D0                     l3092 219A  
                   l3084 217C                     l3148 2366                     l3156 2390  
                   l2620 2766                     l3076 0B36                     l3068 0B1A  
                   l3180 1FB4                     l3172 1F36                     l3164 1EBA  
                   l2700 2494                     l3340 19B6                     l3332 190A  
                   l3316 1898                     l3308 1862                     l3420 22F0  
                   l3412 22B6                     l3404 2294                     l1396 28E0  
                   l3500 0B8E                     l3270 1AFA                     l3262 1A84  
                   l3254 1A54                     l2542 165A                     l2534 15E2  
                   l2526 156A                     l2518 14F2                     l2614 2412  
                   l2606 23D4                     l3094 21A8                     l3086 2180  
                   l3158 23A0                     l2630 279A                     l2622 276A  
                   l3430 16BA                     l3078 0B44                     l3182 1FBA  
                   l3174 1F44                     l3166 1EE8                     l2702 249A  
                   l3342 19BA                     l3334 191A                     l3318 18A4  
                   l2710 2676                     l3422 22FC                     l3414 22BA  
                   l3406 229E                     l3350 0FB2                     l3510 0BB8  
                   l3502 0B94                     l3280 1B2E                     l3272 1AFC  
                   l3264 1AB4                     l2552 2884                     l2544 167A  
                   l2536 1602                     l2528 158A                     l2616 2422  
                   l2608 23E8                     l3096 21B0                     l3088 218E  
                   l2632 27AE                     l2624 276E                     l3440 16E4  
                   l3432 16C0                     l3424 169A                     l3176 1F56  
                   l3168 1EF8                     l2800 2648                     l2560 121A  
                   l2704 24A0                     l3344 19D6                     l3328 18C4  
                   l2720 26B2                     l2712 2686                     l3416 22D6  
                   l3408 22A8                     l3192 1DDE                     l3360 1036  
                   l3352 0FC2                     l3600 0E8A                     l3520 0BF6  
                   l3512 0BC4                     l3504 0BA0                     l3282 1B46  
                   l3274 1B0C                     l3266 1AE8                     l2554 2888  
                   l2546 2880                     l2538 1624                     l2618 242A  
                   l3098 21B4                     l2634 27B2                     l2626 2782  
                   l3290 2574                     l2650 24D2                     l2642 24A8  
                   l3450 1742                     l3442 16E8                     l3434 16CC  
                   l3426 16AC                     l3178 1F64                     l2570 129C  
                   l2562 122C                     l3338 1950                     l2714 268A  
                   l2706 2662                     l2730 1B98                     l2722 1B58  
                   l3418 22E2                     l2810 1CCE                     l2802 1CA8  
                   l3194 1E08                     l3186 1DB4                     l3370 1150  
                   l3362 106A                     l3346 0F40                     l3602 0E9A  
                   l3530 0C38                     l3522 0C02                     l3514 0BCA  
                   l3506 0BA6                     l3610 20AA                     l3284 1B52  
                   l3276 1B24                     l3268 1AEA                     l2556 288A  
                   l2628 2786                     l2660 2506                     l2652 24E0  
                   l2644 24B0                     l2636 283E                     l3460 1788  
                   l3452 174A                     l3444 1704                     l3436 16D2  
                   l3428 16B2                     l2900 06FE                     l2580 1338  
                   l2572 12C0                     l2564 124C                     l2716 269C  
                   l2708 2672                     l3292 26B8                     l2740 1BF4  
                   l2732 1BB4                     l2724 1B5C                     l2820 1D16  
                   l2812 1CDC                     l2804 1CAC                     l3196 1E0A  
                   l3188 1DCA                     l3380 11FA                     l3372 11A2  
                   l3364 109C                     l3356 0FF8                     l3348 0FAE  
                   l3540 0C7C                     l3532 0C46                     l3524 0C10  
                   l3516 0BD6                     l3508 0BB2                     l3620 20EC  
                   l3612 20D6                     l3278 1B2A                     l3286 251C  
                   l2670 273A                     l2662 250C                     l2654 24E6  
                   l2646 24C2                     l2638 285A                     l3462 179C  
                   l3454 1750                     l3446 1710                     l3438 16D8  
                   l2910 072C                     l2902 0704                     l2590 13D6  
                   l2582 135E                     l2574 12E6                     l2566 126E  
                   l2558 11FE                     l2718 26A0                     l3294 2708  
                   l2750 1C3E                     l2742 1C08                     l2734 1BC6  
                   l2726 1B70                     l3390 2256                     l2830 1D60  
                   l2822 1D1E                     l2814 1CEC                     l2806 1CBA  
                   l3198 1E1A                     l3374 11E6                     l3366 10AC  
                   l3358 1032                     l3606 0ED0                     l3550 0CB6  
                   l3542 0C80                     l3534 0C4A                     l3526 0C14  
                   l3518 0BDA                     l3630 2114                     l3622 20F2  
                   l3614 20DA                     l2496 289C                     l3288 2528  
                   l2664 270E                     l2656 24FC                     l2648 24CA  
                   l3480 17E2                     l3464 17A4                     l3456 175E  
                   l3448 171E                     l3472 17C2                     l2920 0760  
                   l2912 072E                     l2904 0716                     l2592 13F2  
                   l2584 137A                     l2576 1302                     l2568 128A  
                   l2680 2464                     l2672 2430                     l3296 183E  
                   l2752 1C50                     l2744 1C10                     l2736 1BDA  
                   l2760 1C6C                     l2728 1B84                     l3392 2262  
                   l3384 2240                     l2840 1D92                     l2832 1D70  
                   l2824 1D2A                     l2816 1CF0                     l2808 1CCA  
                   l3376 11EC                     l3368 10FE                     l3608 0F36  
                   l3552 0CD2                     l3560 0D04                     l3544 0C9C  
                   l3536 0C66                     l3528 0C30                     l3640 2156  
                   l3632 212A                     l3624 20FE                     l3616 20DA  
                   l2666 271A                     l2658 2504                     l2770 25CC  
                   l3482 17F4                     l3474 17DA                     l3458 1780  
                   l3466 17AA                     l1882 28C8                     l2930 079C  
                   l2914 073E                     l2922 0768                     l2906 0718  
                   l2594 1404                     l2586 138C                     l2578 1314  
                   l2690 247A                     l2682 2468                     l2674 2458  
                   l3298 1850                     l2754 1C64                     l2746 1C22  
                   l2738 1BE2                     l3394 2268                     l3386 2248  
                   l2842 1DA2                     l2834 1D72                     l2826 1D38  
                   l2818 1D00                     l2850 1FD0                     l3378 11EE  
                   l3570 0D48                     l3562 0D12                     l3554 0CDA  
                   l3546 0CA4                     l3538 0C6E                     l3490 0B66  
                   l3642 215A                     l3634 2136                     l3626 2104  
                   l3618 20E0                     l3650 2864                     l2668 2736  
                   l2772 25D4                     l3484 17F8                     l3468 17B8  
                   l2940 07B0                     l2932 07A0                     l2924 0778  
                   l2916 074E                     l2908 071E                     l2780 260C  
                   l2596 1428                     l2588 13B0                     l2692 247E  
                   l2684 246C                     l2676 245C                     l2748 1C36  
                   l3396 2274                     l3388 2250                     l2836 1D7C  
                   l2828 1D42                     l2860 2018                     l2852 1FE0  
                   l3580 0D84                     l3572 0D4E                     l3564 0D18  
                   l3556 0CE8                     l3548 0CB2                     l3492 0B6E  
                   l3644 215E                     l3636 2144                     l3628 2110  
                   l3652 286C                     l2598 23B4                     l2774 25EC  
                   l2766 2592                     l3486 1814                     l2950 07C4  
                   l2942 07B4                     l2934 07A4                     l2926 078A  
                   l2918 075E                     l2790 2638                     l2694 2484  
                   l2686 2470                     l2678 2460                     l3398 227A  
                   l2838 1D82                     l2870 2068                     l2862 2020  
                   l2854 1FE4                     l2846 1FBE                     l3590 0DD4  
                   l3582 0D9E                     l3574 0D68                     l3566 0D32  
                   l3558 0CFC                     l3494 0B76                     l3646 216C  
                   l3638 2148                     l3654 2870                     l2768 25B0  
                   l2952 07C8                     l2944 07B8                     l2936 07A8  
                   l2928 0798                     l2960 07D8                     l2784 2620  
                   l2776 25FC                     l2696 2488                     l2688 2476  
                   l2872 2072                     l2864 202C                     l2856 1FF2  
                   l2848 1FC2                     l3592 0DDC                     l3584 0DA6  
                   l3576 0D70                     l3568 0D3A                     l3496 0B7E  
                   l3488 0B58                     l3648 2172                     l3656 2874  
                   l2970 0848                     l2962 07DC                     l2954 07CC  
                   l2946 07BC                     l2938 07AC                     l2890 06C4  
                   l2882 0698                     l2794 263E                     l2786 2624  
                   l2778 2608                     l2698 248E                     l2866 203A  
                   l2874 2078                     l2858 2002                     l3594 0DEA  
                   l3586 0DB4                     l3578 0D7E                     l3498 0B86  
                   l3658 2878                     l2980 0872                     l2972 0854  
                   l2964 0806                     l2956 07D0                     l2948 07C0  
                   l2892 06D4                     l2884 06A4                     l3676 1C80  
                   l2876 2088                     l2868 2058                     l3588 0DBA  
                   l2990 08C8                     l2982 0894                     l2974 0858  
                   l2966 0822                     l2958 07D4                     l2894 06E4  
                   l2886 06B2                     l2798 2644                     l2878 2098  
                   l3598 0E12                     l2992 08D6                     l2984 08A4  
                   l2976 0866                     l2968 0832                     l2896 06E6  
                   l2888 06B4                     l2994 08E4                     l2978 0868  
                   l2898 06EE                     l2996 08F0                     l2988 08B8  
                   l2998 08F4                     STR_1 067F                     STR_2 0611  
                   STR_3 0632                     STR_4 0656                     STR_5 0688  
                   STR_6 0661                     STR_7 0676                     STR_8 066C  
                   STR_9 064B                     u2100 147A                     u2101 1476  
                   u3000 0A02                     u3001 09FE                     u2210 15C8  
                   u2130 14D8                     u2114 148C                     u3010 0A1E  
                   u2211 15C4                     u2131 14D4                     u2115 1488  
                   u3011 0A1A                     u2220 15E2                     u2204 159C  
                   u2140 14F2                     u2124 14AC                     u3100 0AF6  
                   u3020 0A2E                     u2300 121A                     u2221 15DE  
                   u2205 1598                     u2141 14EE                     u2125 14A8  
                   u3101 0AF2                     u3021 0A2A                     u2301 1216  
                   u3110 0B16                     u3030 0A40                     u2310 122C  
                   u3111 0B12                     u3031 0A3C                     u2311 1228  
                   u2080 28B2                     u3200 2314                     u3120 0B28  
                   u3040 0A56                     u2081 28AE                     u3201 2310  
                   u3121 0B24                     u3041 0A52                     u2250 1640  
                   u2234 15F4                     u2170 1550                     u2154 1504  
                   u2090 1468                     u3210 232E                     u3130 0B44  
                   u3050 0A6C                     u2251 163C                     u2235 15F0  
                   u2171 154C                     u2155 1500                     u2091 1464  
                   u3211 232A                     u3131 0B40                     u3051 0A68  
                   u2260 165A                     u2244 1614                     u2180 156A  
                   u2164 1524                     u2500 2412                     u3140 218E  
                   u3220 2348                     u3060 0A80                     u3300 1FB4  
                   u2420 137A                     u2404 132A                     u2340 128A  
                   u2324 123E                     u2261 1656                     u2245 1610  
                   u2181 1566                     u2165 1520                     u2501 240E  
                   u3141 218A                     u3221 2344                     u3061 0A7C  
                   u3301 1FB0                     u2421 1376                     u2405 1326  
                   u2341 1286                     u2325 123A                     u2510 2422  
                   u3150 21A8                     u3230 2366                     u3070 0A9A  
                   u2430 138C                     u2414 134E                     u2350 129C  
                   u2334 125E                     u3310 1DCA                     u2511 241E  
                   u3151 21A4                     u3231 2362                     u3071 0A96  
                   u2431 1388                     u2415 134A                     u2351 1298  
                   u2335 125A                     u3311 1DC6                     u3400 1A54  
                   u3160 21CE                     u3240 237C                     u2520 24C2  
                   u3080 0AD4                     u2600 261C                     u3320 1DFE  
                   u3401 1A50                     u3161 21CA                     u3241 2378  
                   u2521 24BE                     u3081 0AD0                     u2601 2618  
                   u2290 289A                     u2274 166C                     u2194 157C  
                   u3170 21EC                     u3250 23A0                     u2530 24E0  
                   u3090 0AE6                     u2610 2634                     u3330 1E2C  
                   u2291 2896                     u2275 1668                     u2195 1578  
                   u3171 21E8                     u3251 239C                     u2531 24DC  
                   u3091 0AE2                     u2611 2630                     u3331 1E28  
                   u3420 1A84                     u2284 168C                     u3180 2208  
                   u2540 24FC                     u3260 1EE8                     u2620 265E  
                   u2460 13F2                     u2444 13A2                     u2380 1302  
                   u2364 12B2                     u2700 1FF2                     u3340 1E40  
                   u3421 1A80                     u2285 1688                     u3181 2204  
                   u2541 24F8                     u3261 1EE4                     u2621 265A  
                   u2461 13EE                     u2445 139E                     u2381 12FE  
                   u2365 12AE                     u3501 1848                     u2701 1FEE  
                   u3341 1E3C                     u3325 1DF4                     u3414 1A6A  
                   u3190 222E                     u2550 2762                     u3270 1F26  
                   u2470 1404                     u2454 13C6                     u2390 1314  
                   u2374 12D6                     u3510 1894                     u2630 1CBA  
                   u2710 2018                     u3350 1E68                     u3415 1A66  
                   u3191 222A                     u2551 275E                     u3271 1F22  
                   u2471 1400                     u2455 13C2                     u2391 1310  
                   u2375 12D2                     u3511 1890                     u2631 1CB6  
                   u2711 2014                     u3351 1E64                     u2800 073E  
                   u3280 1F44                     u3520 194C                     u2560 2672  
                   u3600 22F0                     u2640 1CDC                     u2720 203A  
                   u3360 1E88                     u2801 073A                     u3281 1F40  
                   u3521 1948                     u2561 266E                     u3601 22EC  
                   u2641 1CD8                     u2721 2036                     u3361 1E84  
                   u3450 1AFA                     u3434 1AA2                     u2810 074E  
                   u3290 1F64                     u3530 19B6                     u2570 2686  
                   u2650 1D16                     u2730 2058                     u3370 1E98  
                   u3451 1AF6                     u3435 1A9C                     u3611 16A4  
                   u2811 074A                     u3291 1F60                     u3531 19B2  
                   u2571 2682                     u2651 1D12                     u2731 2054  
                   u3371 1E94                     u3460 1B0C                     u3444 1AD2  
                   u3620 1704                     u2900 0894                     u2820 078A  
                   u2484 141A                     u3540 19D6                     u2580 269C  
                   u2660 1D38                     u2740 2088                     u3700 0BF6  
                   u3461 1B08                     u3445 1ACC                     u3621 1700  
                   u2901 0890                     u2821 0786                     u2485 1416  
                   u3541 19D2                     u2581 2698                     u2661 1D34  
                   u2741 2084                     u3701 0BF2                     u3470 1B24  
                   u3630 171E                     u2910 08A4                     u2830 0798  
                   u2750 06B2                     u2494 143E                     u2590 26B2  
                   u2670 1D60                     u3550 0FF4                     u3710 0C10  
                   u3471 1B20                     u3631 171A                     u2911 08A0  
                   u2831 0794                     u2751 06AE                     u2495 143A  
                   u2591 26AE                     u2671 1D5C                     u3551 0FF0  
                   u3711 0C0C                     u3480 1B46                     u3384 1A00  
                   u3640 1742                     u2920 08D6                     u2840 0806  
                   u2760 06C4                     u2680 1D92                     u3560 1032  
                   u3800 0CFC                     u3720 0C30                     u3481 1B42  
                   u3385 19FC                     u3641 173E                     u2921 08D2  
                   u2841 0802                     u2761 06C0                     u2681 1D8E  
                   u3561 102E                     u3801 0CF8                     u3721 0C2C  
                   u3394 1A20                     u3490 258E                     u3650 175E  
                   u2930 08E4                     u2850 081E                     u2770 06D4  
                   u2690 1FD0                     u3570 109C                     u3810 0D12  
                   u3730 0C46                     u3395 1A1C                     u3491 258A  
                   u3651 175A                     u2931 08E0                     u2851 0818  
                   u2771 06D0                     u2691 1FCC                     u3571 1098  
                   u3811 0D0E                     u3731 0C42                     u3660 1780  
                   u2940 0902                     u2860 0820                     u2780 0716  
                   u3580 11E6                     u3900 0ECC                     u3820 0D32  
                   u3740 0C66                     u3661 177C                     u2941 08FE  
                   u2781 0712                     u3581 11E2                     u3901 0EC8  
                   u3821 0D2E                     u3741 0C62                     u3670 179C  
                   u2950 093A                     u2870 0848                     u2790 072C  
                   u3590 22D6                     u3910 0F36                     u3830 0D48  
                   u3750 0C7C                     u3671 1798                     u2951 0936  
                   u2871 0844                     u2791 0728                     u3591 22D2  
                   u3911 0F32                     u3831 0D44                     u3751 0C78  
                   u3680 17B8                     u2960 0980                     u2880 0866  
                   u3840 0D68                     u3760 0C9C                     u3920 212A  
                   u3681 17B4                     u2961 097C                     u2881 0862  
                   u3841 0D64                     u3761 0C98                     u3921 2126  
                   u3690 1814                     u2970 09B6                     u2890 0886  
                   u3850 0D7E                     u3770 0CB2                     u3930 2144  
                   u3691 1810                     u2971 09B2                     u2891 0882  
                   u3851 0D7A                     u3771 0CAE                     u3931 2140  
                   u2980 09C6                     u3860 0D9E                     u3780 0CD2  
                   u3940 2156                     u2981 09C2                     u3861 0D9A  
                   u3781 0CCE                     u3941 2152                     u2990 09F2  
                   u3870 0DB4                     u3790 0CE8                     u3950 216C  
                   u2991 09EE                     u3871 0DB0                     u3791 0CE4  
                   u3951 2168                     u3880 0DD4                     u3881 0DD0  
                   u3890 0DEA                     u3891 0DE6                     _date 0055  
                   _main 2864                     _menu 20AA                     _time 004B  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
           ___param_bank 000000             standBy@tecla 0047              contagem@min 001D  
            contagem@seg 0021             ?_menuLigando 0001            ___fltol@sign1 0009  
        __end_of___aldiv 1DB4            potencia@tecla 0037          __end_of___almod 20AA  
        __end_of___fladd 0B58                    ?_main 0001                    ?_menu 0001  
        __end_of___awdiv 2240                    STR_10 0690                    STR_11 0622  
                  STR_12 0655                    STR_13 063F          __end_of___awmod 23B2  
        __end_of___fltol 1EBA          ___awdiv@divisor 0003          __end_of___lwdiv 251C  
        ___awdiv@counter 0005                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96          __end_of_lcdData 27B8  
        __end_of_lcdInit 24A8          __end_of_pinMode 144C                    _valor 0063  
                  _timer 0B58                    tablat 000FF5          __end_of_ssdInit 270E  
        __end_of_pwmSet1 25FC          __end_of_pwmInit 28C8          __end_of_standBy 2302  
                  plusw1 000FE3                    plusw2 000FDB                    status 000FD8  
       __end_of_Delay2ms 289C     __end_of_digitalWrite 169A          __initialization 2808  
           __end_of_main 2880             __end_of_menu 217C       __size_of_Delay40us 0018  
           contagem@dMin 001B             contagem@dSeg 001F             contagem@cont 0029  
                 ??_main 004B                   ??_menu 0049            __activetblptr 000002  
       ___awdiv@dividend 0001                   ?_timer 0001                   ___flge 1EBA  
       __end_of_contagem 11FE                ??___aldiv 0009                ??___almod 0017  
              ??___fladd 0009                   ___wmul 283E                ??___awdiv 0005  
              ??___awmod 000F                ??___fltol 0005                ??___lwdiv 0005  
                 _kpInit 28C8                   _kpRead 28D2                   clear_0 282E  
       ___awdiv@quotient 0007          ___awmod@divisor 000D                ??_lcdData 0007  
                 isa$std 000001                ??_lcdInit 0009          ___awmod@counter 000F  
       __end_of_ssdDigit 26B8                ??_pinMode 0005             __mediumconst 0000  
       __end_of_potencia 183E                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                   timer@j 002D                ??_ssdInit 0007  
              ??_pwmSet1 0008                ??_pwmInit 0001                ??_standBy 0047  
      __end_of_Delay40us 28B4               ___flge@ff1 0001               ___flge@ff2 0005  
             __accesstop 0080  __end_of__initialization 2834            ___rparam_used 000001  
             ___fltol@f1 0001              pinMode@type 0003           __pcstackCOMRAM 0001  
           __pidataBANK0 27B8            __end_of_timer 0F40          menuLigando@logo 0011  
   __size_of_menuLigando 01A0       __size_of_lcdNumber 0074                ?_Delay2ms 0001  
     __size_of_lcdString 0056                  ??_timer 002D       __size_of_atraso_ms 0064  
  __size_of_digitalWrite 024E                  ?___flge 0001               _lcdCommand 23B2  
                ?___wmul 0001                  ?_kpInit 0001                  ?_kpRead 0001  
             _kpDebounce 19DE       __size_of_timerInit 0008       __size_of_ssdUpdate 0150  
             ??_Delay2ms 0002             _digitalWrite 144C                ?_contagem 001B  
                __Hparam 0000        __end_of_lcdNumber 2590                  __Lparam 0000  
              ?_ssdDigit 0019          kpDebounce@old_D 0006        __end_of_lcdString 2764  
        kpDebounce@tempo 006A                  ___aldiv 1CA8                ?_potencia 0001  
        __size_of___flge 0104                  ___almod 1FBE                  ___fladd 0698  
                ___awdiv 217C                  ___awmod 2302                  ___fltol 1DB4  
        __size_of___wmul 0026                  ___lwdiv 24A8        __end_of_atraso_ms 2660  
           menuLigando@i 0045             menuLigando@j 0041             __psmallconst 0600  
        __size_of_kpInit 000A          __size_of_kpRead 000A              ssdDigit@val 001A  
            ssdDigit@pos 0019                  __pcinit 2808                  _lcdData 2764  
                __ramtop 0600                  _lcdInit 2430                  __ptext0 2864  
                __ptext1 28B4                  __ptext2 20AA                  __ptext3 0B58  
                __ptext4 0F40                  __ptext5 28DC                  __ptext6 1DB4  
                __ptext7 1FBE                  __ptext8 1CA8                  __ptext9 2240  
                _display 0069                  _pinMode 11FE         ___awmod@dividend 000B  
       ___aldiv@dividend 0001                  _ssdInit 26B8                  _pwmSet1 2590  
                _pwmInit 28B4                  _standBy 2240                Delay2ms@i 0002  
    kpDebounce@valorNovo 0061     end_of_initialization 2834               ??_contagem 0023  
          __Lmediumconst 0000        __end_of_timerInit 28E4        __end_of_ssdUpdate 1CA8  
             ??_ssdDigit 001A         ___aldiv@quotient 000B                  postdec1 000FE5  
            ?_lcdCommand 0001               ??_potencia 0015                  postinc0 000FEE  
            ?_kpDebounce 0001                _PORTCbits 000F82               lcdNumber@i 0013  
         _valor@ssd$F170 0601              ___fladd@grs 0010                _TRISCbits 000F94  
             lcdString@i 000D              potencia@F49 00B0                _Delay40us 289C  
            potencia@ptc 0039           __end_of___flge 1FBE               atraso_ms@i 0003  
             atraso_ms@j 0005               atraso_ms@k 0006               atraso_ms@t 0001  
         __end_of___wmul 2864           __end_of_kpInit 28D2           __end_of_kpRead 28DC  
 __end_of_valor@ssd$F170 0611      start_initialization 2808      potencia@porcentagem 0015  
      __size_of_Delay2ms 001C      __size_of_lcdCommand 007E      __size_of_kpDebounce 017A  
             ?_Delay40us 0001                 ??___flge 0009                 ??___wmul 0005  
               ??_kpInit 0001                 ??_kpRead 0003              __pdataBANK0 0080  
          ??_menuLigando 0011                ___fladd@a 0005                ___fladd@b 0001  
            __pbssCOMRAM 004B               pinMode@pin 0001           menuLigando@F43 0080  
      __size_of_contagem 02BE         ___lwdiv@dividend 0001                 ?___aldiv 0001  
               ?___almod 000F                 ?___fladd 0001                 ?___awdiv 0001  
               ?___awmod 000B                 ?___fltol 0001        __size_of_ssdDigit 0058  
              _lcdNumber 251C                 ?___lwdiv 0001                _lcdString 270E  
      __size_of_potencia 01A4                 ?_lcdData 0001         ___almod@dividend 000F  
               ?_lcdInit 0001            lcdCommand@cmd 0008                _atraso_ms 25FC  
            __smallconst 0600                 ?_pinMode 0001                 ?_ssdInit 0001  
    __end_of_menuLigando 19DE                 ?_pwmSet1 0001                 ?_pwmInit 0001  
               ?_standBy 0001         ___lwdiv@quotient 0005           __size_of_timer 03E8  
        ___aldiv@divisor 0005          ___aldiv@counter 0009              ??_Delay40us 0001  
         ___wmul@product 0005             ??_lcdCommand 0007               timer@tecla 0039  
              _timerInit 28DC                _ssdUpdate 1B58               ?_lcdNumber 0011  
             pwmSet1@val 000B               ?_lcdString 0009             ??_kpDebounce 0001  
      ___wmul@multiplier 0001               ?_atraso_ms 0001          lcdCommand@old_D 0007  
  kpDebounce@valorAntigo 005F                 _Delay2ms 2880                contagem@i 0025  
              copy_data0 281C       __end_of_lcdCommand 2430             lcdData@old_D 0008  
           lcdData@valor 0007       __end_of_kpDebounce 1B58                 __Hrparam 0000  
              menu@tecla 0049                 __Lrparam 0000               ?_timerInit 0001  
             ?_ssdUpdate 0001         __size_of___aldiv 010C         __size_of___almod 00EC  
       __size_of___fladd 04C0         __size_of___awdiv 00C4         __size_of___awmod 00B0  
       __size_of___fltol 0106           lcdNumber@value 0011         __size_of___lwdiv 0074  
        pwmSet1@porcento 000A              _menuLigando 183E         __size_of_lcdData 0054  
       __size_of_lcdInit 0078         __size_of_pinMode 024E          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0007                 __ptext10 1B58                 __ptext11 26B8  
               __ptext20 169A                 __ptext12 2660                 __ptext21 2590  
               __ptext13 183E                 __ptext30 144C                 __ptext22 283E  
               __ptext14 2430                 __ptext31 2880                 __ptext23 24A8  
               __ptext15 11FE                 __ptext32 289C                 __ptext24 270E  
               __ptext16 25FC                 __ptext33 28D2                 __ptext25 251C  
               __ptext17 1EBA                 __ptext34 19DE                 __ptext26 2764  
               __ptext18 0698                 __ptext27 2302                 __ptext19 28C8  
               __ptext28 217C                 __ptext29 23B2         __size_of_ssdInit 0056  
       __size_of_pwmSet1 006C         __size_of_pwmInit 0014         __size_of_standBy 00C2  
        ___almod@divisor 0013                 _contagem 0F40          ___almod@counter 0017  
          __size_of_main 001C            __size_of_menu 00D2               Delay40us@i 0001  
               _ssdDigit 2660                timer@dMin 0031                timer@dSeg 0035  
               isa$xinst 000000                 _potencia 169A              ??_lcdNumber 0013  
            ??_lcdString 000B                potencia@i 0035              ??_atraso_ms 0003  
          ?_digitalWrite 0001        digitalWrite@value 0003                 timer@min 0033  
               timer@seg 0037              ??_timerInit 0001              ??_ssdUpdate 0007  
            kpDebounce@i 000A              kpDebounce@j 0009              kpDebounce@k 0007  
         ??_digitalWrite 0005             ___aldiv@sign 000A            ___fladd@signs 000D  
        digitalWrite@pin 0001             ___almod@sign 0018             ___fladd@aexp 000E  
           ___fladd@bexp 000F  
